(function(e,t){'object'===typeof exports&&'undefined'!==typeof module?t(exports):'function'===typeof define&&define.amd?define(['exports'],t):t(e.THREE=e.THREE||{})})(this,function(e){'use strict';function t(e,t,r,a){this._x=e||0,this._y=t||0,this._z=r||0,this._w=a===void 0?1:a}function n(e,t,r){this.x=e||0,this.y=t||0,this.z=r||0}function r(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),0<arguments.length&&console.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.')}function a(){}function o(e,t){this.x=e||0,this.y=t||0}function i(e,t,r,a,n,s,l,d,c,p){Object.defineProperty(this,'id',{value:Ua++}),this.uuid=Da.generateUUID(),this.name='',this.image=e===void 0?i.DEFAULT_IMAGE:e,this.mipmaps=[],this.mapping=t===void 0?i.DEFAULT_MAPPING:t,this.wrapS=r===void 0?Br:r,this.wrapT=a===void 0?Br:a,this.magFilter=n===void 0?kr:n,this.minFilter=s===void 0?Xr:s,this.anisotropy=c===void 0?1:c,this.format=l===void 0?oa:l,this.type=d===void 0?Yr:d,this.offset=new o(0,0),this.repeat=new o(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=p===void 0?Sa:p,this.version=0,this.onUpdate=null}function s(e,t,r,a,n,o,s,l,d,c){e=e===void 0?[]:e,t=t===void 0?wr:t,i.call(this,e,t,r,a,n,o,s,l,d,c),this.flipY=!1}function l(){this.seq=[],this.map={}}function d(e,t,a){var o=e[0];if(0>=o||0<o)return e;var s=t*a,n=za[s];if(void 0===n&&(n=new Float32Array(s),za[s]=n),0!==t){o.toArray(n,0);for(var r=1,i=0;r!==t;++r)i+=a,e[r].toArray(n,i)}return n}function c(e,t){var a=Fa[t];a===void 0&&(a=new Int32Array(t),Fa[t]=a);for(var r=0;r!==t;++r)a[r]=e.allocTextureUnit();return a}function p(e,t){e.uniform1f(this.addr,t)}function u(e,t){e.uniform1i(this.addr,t)}function m(e,t){t.x===void 0?e.uniform2fv(this.addr,t):e.uniform2f(this.addr,t.x,t.y)}function f(e,t){t.x===void 0?t.r===void 0?e.uniform3fv(this.addr,t):e.uniform3f(this.addr,t.r,t.g,t.b):e.uniform3f(this.addr,t.x,t.y,t.z)}function g(e,t){t.x===void 0?e.uniform4fv(this.addr,t):e.uniform4f(this.addr,t.x,t.y,t.z,t.w)}function h(e,t){e.uniformMatrix2fv(this.addr,!1,t.elements||t)}function _(e,t){e.uniformMatrix3fv(this.addr,!1,t.elements||t)}function x(e,t){e.uniformMatrix4fv(this.addr,!1,t.elements||t)}function v(e,t,r){var a=r.allocTextureUnit();e.uniform1i(this.addr,a),r.setTexture2D(t||Na,a)}function y(e,t,r){var a=r.allocTextureUnit();e.uniform1i(this.addr,a),r.setTextureCube(t||Ia,a)}function E(e,t){e.uniform2iv(this.addr,t)}function M(e,t){e.uniform3iv(this.addr,t)}function S(e,t){e.uniform4iv(this.addr,t)}function b(e){return 5126===e?p:35664===e?m:35665===e?f:35666===e?g:35674===e?h:35675===e?_:35676===e?x:35678===e?v:35680===e?y:5124===e||35670===e?u:35667===e||35671===e?E:35668===e||35672===e?M:35669===e||35673===e?S:void 0}function T(e,t){e.uniform1fv(this.addr,t)}function L(e,t){e.uniform1iv(this.addr,t)}function A(e,t){e.uniform2fv(this.addr,d(t,this.size,2))}function R(e,t){e.uniform3fv(this.addr,d(t,this.size,3))}function P(e,t){e.uniform4fv(this.addr,d(t,this.size,4))}function w(e,t){e.uniformMatrix2fv(this.addr,!1,d(t,this.size,4))}function C(e,t){e.uniformMatrix3fv(this.addr,!1,d(t,this.size,9))}function D(e,t){e.uniformMatrix4fv(this.addr,!1,d(t,this.size,16))}function U(e,t,r){var a=t.length,n=c(r,a);e.uniform1iv(this.addr,n);for(var o=0;o!==a;++o)r.setTexture2D(t[o]||Na,n[o])}function N(e,t,r){var a=t.length,n=c(r,a);e.uniform1iv(this.addr,n);for(var o=0;o!==a;++o)r.setTextureCube(t[o]||Ia,n[o])}function I(e){return 5126===e?T:35664===e?A:35665===e?R:35666===e?P:35674===e?w:35675===e?C:35676===e?D:35678===e?U:35680===e?N:5124===e||35670===e?L:35667===e||35671===e?E:35668===e||35672===e?M:35669===e||35673===e?S:void 0}function z(e,t,r){this.id=e,this.addr=r,this.setValue=b(t.type)}function F(e,t,r){this.id=e,this.addr=r,this.size=t.size,this.setValue=I(t.type)}function B(e){this.id=e,l.call(this)}function O(e,t){e.seq.push(t),e.map[t.id]=t}function G(e,t,r){var a=e.name,i=a.length;for(Ba.lastIndex=0;;){var n=Ba.exec(a),o=Ba.lastIndex,s=n[1],l=']'===n[2],d=n[3];if(l&&(s|=0),void 0===d||'['===d&&o+2===i){O(r,void 0===d?new z(s,e,t):new F(s,e,t));break}else{var c=r.map,p=c[s];void 0===p&&(p=new B(s),O(r,p)),r=p}}}function V(e,t,r){l.call(this),this.renderer=r;for(var a=e.getProgramParameter(t,e.ACTIVE_UNIFORMS),n=0;n<a;++n){var i=e.getActiveUniform(t,n),o=i.name,s=e.getUniformLocation(t,o);G(i,s,this)}}function H(e,t,r,a){this.x=e||0,this.y=t||0,this.z=r||0,this.w=a===void 0?1:a}function k(e,t,r){return void 0===t&&void 0===r?this.set(e):this.setRGB(e,t,r)}function W(e,t){this.min=e===void 0?new o(+Infinity,+Infinity):e,this.max=t===void 0?new o(-Infinity,-Infinity):t}function X(e,t){function r(){var e=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),t=new Uint16Array([0,1,2,0,2,3]);c=s.createBuffer(),p=s.createBuffer(),s.bindBuffer(s.ARRAY_BUFFER,c),s.bufferData(s.ARRAY_BUFFER,e,s.STATIC_DRAW),s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,p),s.bufferData(s.ELEMENT_ARRAY_BUFFER,t,s.STATIC_DRAW),l=s.createTexture(),g=s.createTexture(),d.bindTexture(s.TEXTURE_2D,l),s.texImage2D(s.TEXTURE_2D,0,s.RGB,16,16,0,s.RGB,s.UNSIGNED_BYTE,null),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_WRAP_S,s.CLAMP_TO_EDGE),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_WRAP_T,s.CLAMP_TO_EDGE),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_MAG_FILTER,s.NEAREST),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_MIN_FILTER,s.NEAREST),d.bindTexture(s.TEXTURE_2D,g),s.texImage2D(s.TEXTURE_2D,0,s.RGBA,16,16,0,s.RGBA,s.UNSIGNED_BYTE,null),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_WRAP_S,s.CLAMP_TO_EDGE),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_WRAP_T,s.CLAMP_TO_EDGE),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_MAG_FILTER,s.NEAREST),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_MIN_FILTER,s.NEAREST),i={vertexShader:'uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif ( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}',fragmentShader:'uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif ( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if ( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}'},u=a(i),m={vertex:s.getAttribLocation(u,'position'),uv:s.getAttribLocation(u,'uv')},f={renderType:s.getUniformLocation(u,'renderType'),map:s.getUniformLocation(u,'map'),occlusionMap:s.getUniformLocation(u,'occlusionMap'),opacity:s.getUniformLocation(u,'opacity'),color:s.getUniformLocation(u,'color'),scale:s.getUniformLocation(u,'scale'),rotation:s.getUniformLocation(u,'rotation'),screenPosition:s.getUniformLocation(u,'screenPosition')}}function a(t){var r=s.createProgram(),a=s.createShader(s.FRAGMENT_SHADER),i=s.createShader(s.VERTEX_SHADER),n='precision '+e.getPrecision()+' float;\n';return s.shaderSource(a,n+t.fragmentShader),s.shaderSource(i,n+t.vertexShader),s.compileShader(a),s.compileShader(i),s.attachShader(r,a),s.attachShader(r,i),s.linkProgram(r),r}var s=e.context,d=e.state,c,p,i,u,m,f,l,g;this.render=function(a,h,_){if(0!==t.length){var x=new n,v=_.w/_.z,y=0.5*_.z,E=0.5*_.w,M=16/_.w,S=new o(M*v,M),b=new n(1,1,0),T=new o(1,1),L=new W;L.min.set(_.x,_.y),L.max.set(_.x+(_.z-16),_.y+(_.w-16)),void 0===u&&r(),s.useProgram(u),d.initAttributes(),d.enableAttribute(m.vertex),d.enableAttribute(m.uv),d.disableUnusedAttributes(),s.uniform1i(f.occlusionMap,0),s.uniform1i(f.map,1),s.bindBuffer(s.ARRAY_BUFFER,c),s.vertexAttribPointer(m.vertex,2,s.FLOAT,!1,16,0),s.vertexAttribPointer(m.uv,2,s.FLOAT,!1,16,8),s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,p),d.disable(s.CULL_FACE),d.setDepthWrite(!1);for(var A=0,i=t.length;A<i;A++){M=16/_.w,S.set(M*v,M);var R=t[A];if(x.set(R.matrixWorld.elements[12],R.matrixWorld.elements[13],R.matrixWorld.elements[14]),x.applyMatrix4(h.matrixWorldInverse),x.applyMatrix4(h.projectionMatrix),b.copy(x),T.x=_.x+b.x*y+y-8,T.y=_.y+b.y*E+E-8,!0===L.containsPoint(T)){d.activeTexture(s.TEXTURE0),d.bindTexture(s.TEXTURE_2D,null),d.activeTexture(s.TEXTURE1),d.bindTexture(s.TEXTURE_2D,l),s.copyTexImage2D(s.TEXTURE_2D,0,s.RGB,T.x,T.y,16,16,0),s.uniform1i(f.renderType,0),s.uniform2f(f.scale,S.x,S.y),s.uniform3f(f.screenPosition,b.x,b.y,b.z),d.disable(s.BLEND),d.enable(s.DEPTH_TEST),s.drawElements(s.TRIANGLES,6,s.UNSIGNED_SHORT,0),d.activeTexture(s.TEXTURE0),d.bindTexture(s.TEXTURE_2D,g),s.copyTexImage2D(s.TEXTURE_2D,0,s.RGBA,T.x,T.y,16,16,0),s.uniform1i(f.renderType,1),d.disable(s.DEPTH_TEST),d.activeTexture(s.TEXTURE1),d.bindTexture(s.TEXTURE_2D,l),s.drawElements(s.TRIANGLES,6,s.UNSIGNED_SHORT,0),R.positionScreen.copy(b),R.customUpdateCallback?R.customUpdateCallback(R):R.updateLensFlares(),s.uniform1i(f.renderType,2),d.enable(s.BLEND);for(var P=0,w=R.lensFlares.length,C;P<w;P++)C=R.lensFlares[P],1e-3<C.opacity&&1e-3<C.scale&&(b.x=C.x,b.y=C.y,b.z=C.z,M=C.size*C.scale/_.w,S.x=M*v,S.y=M,s.uniform3f(f.screenPosition,b.x,b.y,b.z),s.uniform2f(f.scale,S.x,S.y),s.uniform1f(f.rotation,C.rotation),s.uniform1f(f.opacity,C.opacity),s.uniform3f(f.color,C.color.r,C.color.g,C.color.b),d.setBlending(C.blending,C.blendEquation,C.blendSrc,C.blendDst),e.setTexture2D(C.texture,1),s.drawElements(s.TRIANGLES,6,s.UNSIGNED_SHORT,0))}}d.enable(s.CULL_FACE),d.enable(s.DEPTH_TEST),d.setDepthWrite(!0),e.resetGLState()}}}function Y(e,r){function a(){var e=new Float32Array([-0.5,-0.5,0,0,0.5,-0.5,1,0,0.5,0.5,1,1,-0.5,0.5,0,1]),t=new Uint16Array([0,1,2,0,2,3]);m=d.createBuffer(),f=d.createBuffer(),d.bindBuffer(d.ARRAY_BUFFER,m),d.bufferData(d.ARRAY_BUFFER,e,d.STATIC_DRAW),d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,f),d.bufferData(d.ELEMENT_ARRAY_BUFFER,t,d.STATIC_DRAW),g=o(),h={position:d.getAttribLocation(g,'position'),uv:d.getAttribLocation(g,'uv')},_={uvOffset:d.getUniformLocation(g,'uvOffset'),uvScale:d.getUniformLocation(g,'uvScale'),rotation:d.getUniformLocation(g,'rotation'),scale:d.getUniformLocation(g,'scale'),color:d.getUniformLocation(g,'color'),map:d.getUniformLocation(g,'map'),opacity:d.getUniformLocation(g,'opacity'),modelViewMatrix:d.getUniformLocation(g,'modelViewMatrix'),projectionMatrix:d.getUniformLocation(g,'projectionMatrix'),fogType:d.getUniformLocation(g,'fogType'),fogDensity:d.getUniformLocation(g,'fogDensity'),fogNear:d.getUniformLocation(g,'fogNear'),fogFar:d.getUniformLocation(g,'fogFar'),fogColor:d.getUniformLocation(g,'fogColor'),alphaTest:d.getUniformLocation(g,'alphaTest')};var r=document.createElementNS('http://www.w3.org/1999/xhtml','canvas');r.width=8,r.height=8;var a=r.getContext('2d');a.fillStyle='white',a.fillRect(0,0,8,8),x=new i(r),x.needsUpdate=!0}function o(){var t=d.createProgram(),r=d.createShader(d.VERTEX_SHADER),a=d.createShader(d.FRAGMENT_SHADER);return d.shaderSource(r,['precision '+e.getPrecision()+' float;','uniform mat4 modelViewMatrix;','uniform mat4 projectionMatrix;','uniform float rotation;','uniform vec2 scale;','uniform vec2 uvOffset;','uniform vec2 uvScale;','attribute vec2 position;','attribute vec2 uv;','varying vec2 vUV;','void main() {','vUV = uvOffset + uv * uvScale;','vec2 alignedPosition = position * scale;','vec2 rotatedPosition;','rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;','rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;','vec4 finalPosition;','finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );','finalPosition.xy += rotatedPosition;','finalPosition = projectionMatrix * finalPosition;','gl_Position = finalPosition;','}'].join('\n')),d.shaderSource(a,['precision '+e.getPrecision()+' float;','uniform vec3 color;','uniform sampler2D map;','uniform float opacity;','uniform int fogType;','uniform vec3 fogColor;','uniform float fogDensity;','uniform float fogNear;','uniform float fogFar;','uniform float alphaTest;','varying vec2 vUV;','void main() {','vec4 texture = texture2D( map, vUV );','if ( texture.a < alphaTest ) discard;','gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );','if ( fogType > 0 ) {','float depth = gl_FragCoord.z / gl_FragCoord.w;','float fogFactor = 0.0;','if ( fogType == 1 ) {','fogFactor = smoothstep( fogNear, fogFar, depth );','} else {','const float LOG2 = 1.442695;','fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );','fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );','}','gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );','}','}'].join('\n')),d.compileShader(r),d.compileShader(a),d.attachShader(t,r),d.attachShader(t,a),d.linkProgram(t),t}function s(e,t){return e.renderOrder===t.renderOrder?e.z===t.z?t.id-e.id:t.z-e.z:e.renderOrder-t.renderOrder}var d=e.context,c=e.state,l=new n,p=new t,u=new n,m,f,g,h,_,x;this.render=function(t,n){if(0!==r.length){void 0===g&&a(),d.useProgram(g),c.initAttributes(),c.enableAttribute(h.position),c.enableAttribute(h.uv),c.disableUnusedAttributes(),c.disable(d.CULL_FACE),c.enable(d.BLEND),d.bindBuffer(d.ARRAY_BUFFER,m),d.vertexAttribPointer(h.position,2,d.FLOAT,!1,16,0),d.vertexAttribPointer(h.uv,2,d.FLOAT,!1,16,8),d.bindBuffer(d.ELEMENT_ARRAY_BUFFER,f),d.uniformMatrix4fv(_.projectionMatrix,!1,n.projectionMatrix.elements),c.activeTexture(d.TEXTURE0),d.uniform1i(_.map,0);var o=0,v=0,y=t.fog;y?(d.uniform3f(_.fogColor,y.color.r,y.color.g,y.color.b),y.isFog?(d.uniform1f(_.fogNear,y.near),d.uniform1f(_.fogFar,y.far),d.uniform1i(_.fogType,1),o=1,v=1):y.isFogExp2&&(d.uniform1f(_.fogDensity,y.density),d.uniform1i(_.fogType,2),o=2,v=2)):(d.uniform1i(_.fogType,0),o=0,v=0);for(var E=0,i=r.length,M;E<i;E++)M=r[E],M.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,M.matrixWorld),M.z=-M.modelViewMatrix.elements[14];r.sort(s);for(var S=[],E=0,i=r.length;E<i;E++){var M=r[E],b=M.material;if(!1!==b.visible){d.uniform1f(_.alphaTest,b.alphaTest),d.uniformMatrix4fv(_.modelViewMatrix,!1,M.modelViewMatrix.elements),M.matrixWorld.decompose(l,p,u),S[0]=u.x,S[1]=u.y;var T=0;t.fog&&b.fog&&(T=v),o!==T&&(d.uniform1i(_.fogType,T),o=T),null===b.map?(d.uniform2f(_.uvOffset,0,0),d.uniform2f(_.uvScale,1,1)):(d.uniform2f(_.uvOffset,b.map.offset.x,b.map.offset.y),d.uniform2f(_.uvScale,b.map.repeat.x,b.map.repeat.y)),d.uniform1f(_.opacity,b.opacity),d.uniform3f(_.color,b.color.r,b.color.g,b.color.b),d.uniform1f(_.rotation,b.rotation),d.uniform2fv(_.scale,S),c.setBlending(b.blending,b.blendEquation,b.blendSrc,b.blendDst),c.setDepthTest(b.depthTest),c.setDepthWrite(b.depthWrite),b.map?e.setTexture2D(b.map,0):e.setTexture2D(x,0),d.drawElements(d.TRIANGLES,6,d.UNSIGNED_SHORT,0)}}c.enable(d.CULL_FACE),e.resetGLState()}}}function j(e,t,r){this.uuid=Da.generateUUID(),this.width=e,this.height=t,this.scissor=new H(0,0,e,t),this.scissorTest=!1,this.viewport=new H(0,0,e,t),r=r||{},r.minFilter===void 0&&(r.minFilter=kr),this.texture=new i(void 0,void 0,r.wrapS,r.wrapT,r.magFilter,r.minFilter,r.format,r.type,r.anisotropy,r.encoding),this.depthBuffer=!(r.depthBuffer!==void 0)||r.depthBuffer,this.stencilBuffer=!(r.stencilBuffer!==void 0)||r.stencilBuffer,this.depthTexture=r.depthTexture===void 0?null:r.depthTexture}function q(){Object.defineProperty(this,'id',{value:Wa++}),this.uuid=Da.generateUUID(),this.name='',this.type='Material',this.fog=!0,this.lights=!0,this.blending=Yt,this.side=Ot,this.shading=kt,this.vertexColors=Wt,this.opacity=1,this.transparent=!1,this.blendSrc=or,this.blendDst=sr,this.blendEquation=Jt,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=hr,this.depthTest=!0,this.depthWrite=!0,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.alphaTest=0,this.premultipliedAlpha=!1,this.overdraw=0,this.visible=!0,this._needsUpdate=!0}function Z(e){q.call(this),this.type='ShaderMaterial',this.defines={},this.uniforms={},this.vertexShader='void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}',this.fragmentShader='void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}',this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,e!==void 0&&(e.attributes!==void 0&&console.error('THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.'),this.setValues(e))}function Q(e){q.call(this),this.type='MeshDepthMaterial',this.depthPacking=wa,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.setValues(e)}function J(e,t){this.min=e===void 0?new n(+Infinity,+Infinity,+Infinity):e,this.max=t===void 0?new n(-Infinity,-Infinity,-Infinity):t}function K(e,t){this.center=e===void 0?new n:e,this.radius=t===void 0?0:t}function $(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]),0<arguments.length&&console.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.')}function ee(e,t){this.normal=e===void 0?new n(1,0,0):e,this.constant=t===void 0?0:t}function te(e,t,r,a,i,n){this.planes=[e===void 0?new ee:e,t===void 0?new ee:t,r===void 0?new ee:r,a===void 0?new ee:a,i===void 0?new ee:i,n===void 0?new ee:n]}function re(e,t,a,s){function l(t,r,a,i){var n=t.geometry,o=null,s=M,l=t.customDepthMaterial;if(a&&(s=S,l=t.customDistanceMaterial),!l){var d=!1;r.morphTargets&&(n&&n.isBufferGeometry?d=n.morphAttributes&&n.morphAttributes.position&&0<n.morphAttributes.position.length:n&&n.isGeometry&&(d=n.morphTargets&&0<n.morphTargets.length));var c=t.isSkinnedMesh&&r.skinning,p=0;d&&(p|=y),c&&(p|=E),o=s[p]}else o=l;if(e.localClippingEnabled&&!0===r.clipShadows&&0!==r.clippingPlanes.length){var u=o.uuid,m=r.uuid,f=b[u];void 0===f&&(f={},b[u]=f);var g=f[m];void 0===g&&(g=o.clone(),f[m]=g),o=g}o.visible=r.visible,o.wireframe=r.wireframe;var h=r.side;return I.renderSingleSided&&h==Vt&&(h=Ot),I.renderReverseSided&&(h===Ot?h=Gt:h===Gt&&(h=Ot)),o.side=h,o.clipShadows=r.clipShadows,o.clippingPlanes=r.clippingPlanes,o.wireframeLinewidth=r.wireframeLinewidth,o.linewidth=r.linewidth,a&&void 0!==o.uniforms.lightPos&&o.uniforms.lightPos.value.copy(i),o}function d(e,t,r){if(!1!==e.visible){var a=0!==(e.layers.mask&t.layers.mask);if(a&&(e.isMesh||e.isLine||e.isPoints)&&e.castShadow&&(!1===e.frustumCulled||!0===u.intersectsObject(e))){var n=e.material;!0===n.visible&&(e.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,e.matrixWorld),v.push(e))}for(var o=e.children,s=0,i=o.length;s<i;s++)d(o[s],t,r)}}var c=e.context,p=e.state,u=new te,m=new r,f=t.shadows,g=new o,h=new o(s.maxTextureSize,s.maxTextureSize),_=new n,x=new n,v=[],y=1,E=2,M=[,,,,],S=[,,,,],b={},T=[new n(1,0,0),new n(-1,0,0),new n(0,0,1),new n(0,0,-1),new n(0,1,0),new n(0,-1,0)],L=[new n(0,1,0),new n(0,1,0),new n(0,1,0),new n(0,1,0),new n(0,0,1),new n(0,0,-1)],A=[new H,new H,new H,new H,new H,new H],R=new Q;R.depthPacking=Ca,R.clipping=!0;for(var P=ka.distanceRGBA,w=Oa.clone(P.uniforms),C=0;C!==(y|E)+1;++C){var i=0!==(C&y),D=0!==(C&E),U=R.clone();U.morphTargets=i,U.skinning=D,M[C]=U;var N=new Z({defines:{USE_SHADOWMAP:''},uniforms:w,vertexShader:P.vertexShader,fragmentShader:P.fragmentShader,morphTargets:i,skinning:D,clipping:!0});S[C]=N}var I=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Ft,this.renderReverseSided=!0,this.renderSingleSided=!0,this.render=function(t,r){if(!1!==I.enabled&&(!1!==I.autoUpdate||!1!==I.needsUpdate)&&0!==f.length){p.buffers.color.setClear(1,1,1,1),p.disable(c.BLEND),p.setDepthTest(!0),p.setScissorTest(!1);for(var n=0,i=f.length,o,s;n<i;n++){var y=f[n],E=y.shadow;if(void 0===E){console.warn('THREE.WebGLShadowMap:',y,'has no shadow.');continue}var M=E.camera;if(g.copy(E.mapSize),g.min(h),y&&y.isPointLight){o=6,s=!0;var S=g.x,b=g.y;A[0].set(2*S,b,S,b),A[1].set(0,b,S,b),A[2].set(3*S,b,S,b),A[3].set(S,b,S,b),A[4].set(3*S,0,S,b),A[5].set(S,0,S,b),g.x*=4,g.y*=2}else o=1,s=!1;if(null===E.map){E.map=new j(g.x,g.y,{minFilter:Gr,magFilter:Gr,format:oa}),M.updateProjectionMatrix()}E.isSpotLightShadow&&E.update(y),E&&E.isRectAreaLightShadow&&E.update(y);var R=E.map,P=E.matrix;x.setFromMatrixPosition(y.matrixWorld),M.position.copy(x),e.setRenderTarget(R),e.clear();for(var w=0;w<o;w++){if(s){_.copy(M.position),_.add(T[w]),M.up.copy(L[w]),M.lookAt(_);var C=A[w];p.viewport(C)}else _.setFromMatrixPosition(y.target.matrixWorld),M.lookAt(_);M.updateMatrixWorld(),M.matrixWorldInverse.getInverse(M.matrixWorld),P.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1),P.multiply(M.projectionMatrix),P.multiply(M.matrixWorldInverse),m.multiplyMatrices(M.projectionMatrix,M.matrixWorldInverse),u.setFromMatrix(m),v.length=0,d(t,r,M);for(var D=0,U=v.length;D<U;D++){var N=v[D],z=a.update(N),F=N.material;if(F&&F.isMultiMaterial)for(var B=z.groups,O=F.materials,G=0,V=B.length;G<V;G++){var H=B[G],k=O[H.materialIndex];if(!0===k.visible){var W=l(N,k,s,x);e.renderBufferDirect(M,null,z,W,N,H)}}else{var W=l(N,F,s,x);e.renderBufferDirect(M,null,z,W,N,null)}}}}var X=e.getClearColor(),Y=e.getClearAlpha();e.setClearColor(X,Y),I.needsUpdate=!1}}}function ae(e,t){this.origin=e===void 0?new n:e,this.direction=t===void 0?new n:t}function ie(e,t,r,a){this._x=e||0,this._y=t||0,this._z=r||0,this._order=a||ie.DefaultOrder}function ne(){this.mask=1}function oe(){Object.defineProperty(this,'id',{value:Xa++}),this.uuid=Da.generateUUID(),this.name='',this.type='Object3D',this.parent=null,this.children=[],this.up=oe.DefaultUp.clone();var e=new n,a=new ie,i=new t,o=new n(1,1,1);a.onChange(function(){i.setFromEuler(a,!1)}),i.onChange(function(){a.setFromQuaternion(i,void 0,!1)}),Object.defineProperties(this,{position:{enumerable:!0,value:e},rotation:{enumerable:!0,value:a},quaternion:{enumerable:!0,value:i},scale:{enumerable:!0,value:o},modelViewMatrix:{value:new r},normalMatrix:{value:new $}}),this.matrix=new r,this.matrixWorld=new r,this.matrixAutoUpdate=oe.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new ne,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={},this.onBeforeRender=function(){},this.onAfterRender=function(){}}function se(e,t){this.start=e===void 0?new n:e,this.end=t===void 0?new n:t}function le(e,t,r){this.a=e===void 0?new n:e,this.b=t===void 0?new n:t,this.c=r===void 0?new n:r}function de(e,t,r,a,i,o){this.a=e,this.b=t,this.c=r,this.normal=a&&a.isVector3?a:new n,this.vertexNormals=Array.isArray(a)?a:[],this.color=i&&i.isColor?i:new k,this.vertexColors=Array.isArray(i)?i:[],this.materialIndex=o===void 0?0:o}function ce(e){q.call(this),this.type='MeshBasicMaterial',this.color=new k(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Er,this.reflectivity=1,this.refractionRatio=0.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap='round',this.wireframeLinejoin='round',this.skinning=!1,this.morphTargets=!1,this.lights=!1,this.setValues(e)}function pe(e,t,r){if(Array.isArray(e))throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');this.uuid=Da.generateUUID(),this.array=e,this.itemSize=t,this.count=e===void 0?0:e.length/t,this.normalized=!0===r,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.onUploadCallback=function(){},this.version=0}function ue(e,t){pe.call(this,new Uint16Array(e),t)}function me(e,t){pe.call(this,new Uint32Array(e),t)}function fe(e,t){pe.call(this,new Float32Array(e),t)}function ge(){this.indices=[],this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}function he(e){for(var t=e.length,r=-Infinity;t--;)e[t]>r&&(r=e[t]);return r}function _e(){return Ya++}function xe(){Object.defineProperty(this,'id',{value:_e()}),this.uuid=Da.generateUUID(),this.name='',this.type='Geometry',this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}function ve(){Object.defineProperty(this,'id',{value:_e()}),this.uuid=Da.generateUUID(),this.name='',this.type='BufferGeometry',this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:Infinity}}function ye(e,t){oe.call(this),this.type='Mesh',this.geometry=e===void 0?new ve:e,this.material=t===void 0?new ce({color:16777215*Math.random()}):t,this.drawMode=ya,this.updateMorphTargets()}function Ee(e,t,r,a,i,o){function s(e,t,r,i,o,s,u,h,_,v,E){var M=_+1,S=0,T=0,L=new n,A,R;for(R=0;R<v+1;R++){var P=R*(u/v)-u/2;for(A=0;A<M;A++){var y=A*(s/_)-s/2;L[e]=y*i,L[t]=P*o,L[r]=h/2,d.push(L.x,L.y,L.z),L[e]=0,L[t]=0,L[r]=0<h?1:-1,c.push(L.x,L.y,L.z),m.push(A/_),m.push(1-R/v),S+=1}}for(R=0;R<v;R++)for(A=0;A<_;A++){var x=f+A+M*R,a=f+A+M*(R+1),b=f+(A+1)+M*(R+1),w=f+(A+1)+M*R;p.push(x,a,w),p.push(a,b,w),T+=6}l.addGroup(g,T,E),g+=T,f+=S}ve.call(this),this.type='BoxBufferGeometry',this.parameters={width:e,height:t,depth:r,widthSegments:a,heightSegments:i,depthSegments:o};var l=this;a=Lt(a)||1,i=Lt(i)||1,o=Lt(o)||1;var p=[],d=[],c=[],m=[],f=0,g=0;s('z','y','x',-1,-1,r,t,e,o,i,0),s('z','y','x',1,-1,r,t,-e,o,i,1),s('x','z','y',1,1,e,r,t,a,o,2),s('x','z','y',1,-1,e,r,-t,a,o,3),s('x','y','z',1,-1,e,t,r,a,i,4),s('x','y','z',-1,-1,e,t,-r,a,i,5),this.setIndex(p),this.addAttribute('position',new fe(d,3)),this.addAttribute('normal',new fe(c,3)),this.addAttribute('uv',new fe(m,2))}function Me(e,t,r,i){ve.call(this),this.type='PlaneBufferGeometry',this.parameters={width:e,height:t,widthSegments:r,heightSegments:i};var n=Lt(r)||1,o=Lt(i)||1,s=n+1,l=[],p=[],u=[],m=[],f,g;for(g=0;g<o+1;g++){var h=g*(t/o)-t/2;for(f=0;f<s;f++){var _=f*(e/n)-e/2;p.push(_,-h,0),u.push(0,0,1),m.push(f/n),m.push(1-g/o)}}for(g=0;g<o;g++)for(f=0;f<n;f++){var x=f+s*g,a=f+s*(g+1),v=f+1+s*(g+1),c=f+1+s*g;l.push(x,a,c),l.push(a,v,c)}this.setIndex(l),this.addAttribute('position',new fe(p,3)),this.addAttribute('normal',new fe(u,3)),this.addAttribute('uv',new fe(m,2))}function Se(){oe.call(this),this.type='Camera',this.matrixWorldInverse=new r,this.projectionMatrix=new r}function be(e,t,r,a){Se.call(this),this.type='PerspectiveCamera',this.fov=e===void 0?50:e,this.zoom=1,this.near=r===void 0?0.1:r,this.far=a===void 0?2e3:a,this.focus=10,this.aspect=t===void 0?1:t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}function Te(e,t,r,a,i,n){Se.call(this),this.type='OrthographicCamera',this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=r,this.bottom=a,this.near=i===void 0?0.1:i,this.far=n===void 0?2e3:n,this.updateProjectionMatrix()}function Le(e,t,r){var a,i,n;return{setMode:function(e){a=e},setIndex:function(r){r.array instanceof Uint32Array&&t.get('OES_element_index_uint')?(i=e.UNSIGNED_INT,n=4):r.array instanceof Uint16Array?(i=e.UNSIGNED_SHORT,n=2):(i=e.UNSIGNED_BYTE,n=1)},render:function(t,o){e.drawElements(a,o,i,t*n),r.calls++,r.vertices+=o,a===e.TRIANGLES&&(r.faces+=o/3)},renderInstances:function(o,s,l){var d=t.get('ANGLE_instanced_arrays');return null===d?void console.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.'):void(d.drawElementsInstancedANGLE(a,l,i,s*n,o.maxInstancedCount),r.calls++,r.vertices+=l*o.maxInstancedCount,a===e.TRIANGLES&&(r.faces+=o.maxInstancedCount*l/3))}}}function Ae(e,t,r){var a;return{setMode:function(e){a=e},render:function(t,i){e.drawArrays(a,t,i),r.calls++,r.vertices+=i,a===e.TRIANGLES&&(r.faces+=i/3)},renderInstances:function(i){var n=t.get('ANGLE_instanced_arrays');if(null===n)return void console.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');var o=i.attributes.position,s=0;o.isInterleavedBufferAttribute?(s=o.data.count,n.drawArraysInstancedANGLE(a,0,s,i.maxInstancedCount)):(s=o.count,n.drawArraysInstancedANGLE(a,0,s,i.maxInstancedCount)),r.calls++,r.vertices+=s*i.maxInstancedCount,a===e.TRIANGLES&&(r.faces+=i.maxInstancedCount*s/3)}}}function Re(){var e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];var r;switch(t.type){case'DirectionalLight':r={direction:new n,color:new k,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new o};break;case'SpotLight':r={position:new n,direction:new n,color:new k,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new o};break;case'PointLight':r={position:new n,color:new k,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new o};break;case'HemisphereLight':r={direction:new n,skyColor:new k,groundColor:new k};break;case'RectAreaLight':r={color:new k,position:new n,halfWidth:new n,halfHeight:new n};}return e[t.id]=r,r}}}function Pe(e){for(var t=e.split('\n'),r=0;r<t.length;r++)t[r]=r+1+': '+t[r];return t.join('\n')}function we(e,t,r){var a=e.createShader(t);return e.shaderSource(a,r),e.compileShader(a),!1===e.getShaderParameter(a,e.COMPILE_STATUS)&&console.error('THREE.WebGLShader: Shader couldn\'t compile.'),''!==e.getShaderInfoLog(a)&&console.warn('THREE.WebGLShader: gl.getShaderInfoLog()',t===e.VERTEX_SHADER?'vertex':'fragment',e.getShaderInfoLog(a),Pe(r)),a}function Ce(e){switch(e){case Sa:return['Linear','( value )'];case ba:return['sRGB','( value )'];case La:return['RGBE','( value )'];case Aa:return['RGBM','( value, 7.0 )'];case Ra:return['RGBM','( value, 16.0 )'];case Pa:return['RGBD','( value, 256.0 )'];case Ta:return['Gamma','( value, float( GAMMA_FACTOR ) )'];default:throw new Error('unsupported encoding: '+e);}}function De(e,t){var r=Ce(t);return'vec4 '+e+'( vec4 value ) { return '+r[0]+'ToLinear'+r[1]+'; }'}function Ue(e,t){var r=Ce(t);return'vec4 '+e+'( vec4 value ) { return LinearTo'+r[0]+r[1]+'; }'}function Ne(e,t){var r;switch(t){case Tr:r='Linear';break;case Lr:r='Reinhard';break;case Ar:r='Uncharted2';break;case Rr:r='OptimizedCineon';break;default:throw new Error('unsupported toneMapping: '+t);}return'vec3 '+e+'( vec3 color ) { return '+r+'ToneMapping( color ); }'}function Ie(e,t,r){e=e||{};var a=[e.derivatives||t.envMapCubeUV||t.bumpMap||t.normalMap||t.flatShading?'#extension GL_OES_standard_derivatives : enable':'',(e.fragDepth||t.logarithmicDepthBuffer)&&r.get('EXT_frag_depth')?'#extension GL_EXT_frag_depth : enable':'',e.drawBuffers&&r.get('WEBGL_draw_buffers')?'#extension GL_EXT_draw_buffers : require':'',(e.shaderTextureLOD||t.envMap)&&r.get('EXT_shader_texture_lod')?'#extension GL_EXT_shader_texture_lod : enable':''];return a.filter(Be).join('\n')}function ze(e){var t=[];for(var r in e){var a=e[r];!1===a||t.push('#define '+r+' '+a)}return t.join('\n')}function Fe(e,t){for(var r={},a=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES),n=0;n<a;n++){var i=e.getActiveAttrib(t,n),o=i.name;r[o]=e.getAttribLocation(t,o)}return r}function Be(e){return''!==e}function Oe(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights)}function Ge(e){function t(e,t){var r=Ga[t];if(r===void 0)throw new Error('Can not resolve #include <'+t+'>');return Ge(r)}var r=/#include +<([\w\d.]+)>/g;return e.replace(r,t)}function Ve(e){var t=/for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;return e.replace(t,function(e,t,r,a){for(var n='',o=parseInt(t);o<parseInt(r);o++)n+=a.replace(/\[ i \]/g,'[ '+o+' ]');return n})}function He(e,t,r,a){var i=e.context,n=r.extensions,o=r.defines,s=r.__webglShader.vertexShader,l=r.__webglShader.fragmentShader,d='SHADOWMAP_TYPE_BASIC';a.shadowMapType===Ft?d='SHADOWMAP_TYPE_PCF':a.shadowMapType===Bt&&(d='SHADOWMAP_TYPE_PCF_SOFT');var c='ENVMAP_TYPE_CUBE',p='ENVMAP_MODE_REFLECTION',u='ENVMAP_BLENDING_MULTIPLY';if(a.envMap){switch(r.envMap.mapping){case wr:case Cr:c='ENVMAP_TYPE_CUBE';break;case Ir:case zr:c='ENVMAP_TYPE_CUBE_UV';break;case Dr:case Ur:c='ENVMAP_TYPE_EQUIREC';break;case Nr:c='ENVMAP_TYPE_SPHERE';}switch(r.envMap.mapping){case Cr:case Ur:p='ENVMAP_MODE_REFRACTION';}switch(r.combine){case Er:u='ENVMAP_BLENDING_MULTIPLY';break;case Mr:u='ENVMAP_BLENDING_MIX';break;case Sr:u='ENVMAP_BLENDING_ADD';}}var m=0<e.gammaFactor?e.gammaFactor:1,f=Ie(n,a,e.extensions),g=ze(o),h=i.createProgram(),_,x;r.isRawShaderMaterial?(_=[g,'\n'].filter(Be).join('\n'),x=[f,g,'\n'].filter(Be).join('\n')):(_=['precision '+a.precision+' float;','precision '+a.precision+' int;','#define SHADER_NAME '+r.__webglShader.name,g,a.supportsVertexTextures?'#define VERTEX_TEXTURES':'','#define GAMMA_FACTOR '+m,'#define MAX_BONES '+a.maxBones,a.useFog&&a.fog?'#define USE_FOG':'',a.useFog&&a.fogExp?'#define FOG_EXP2':'',a.map?'#define USE_MAP':'',a.envMap?'#define USE_ENVMAP':'',a.envMap?'#define '+p:'',a.lightMap?'#define USE_LIGHTMAP':'',a.aoMap?'#define USE_AOMAP':'',a.emissiveMap?'#define USE_EMISSIVEMAP':'',a.bumpMap?'#define USE_BUMPMAP':'',a.normalMap?'#define USE_NORMALMAP':'',a.displacementMap&&a.supportsVertexTextures?'#define USE_DISPLACEMENTMAP':'',a.specularMap?'#define USE_SPECULARMAP':'',a.roughnessMap?'#define USE_ROUGHNESSMAP':'',a.metalnessMap?'#define USE_METALNESSMAP':'',a.alphaMap?'#define USE_ALPHAMAP':'',a.vertexColors?'#define USE_COLOR':'',a.flatShading?'#define FLAT_SHADED':'',a.skinning?'#define USE_SKINNING':'',a.useVertexTexture?'#define BONE_TEXTURE':'',a.morphTargets?'#define USE_MORPHTARGETS':'',a.morphNormals&&!1===a.flatShading?'#define USE_MORPHNORMALS':'',a.doubleSided?'#define DOUBLE_SIDED':'',a.flipSided?'#define FLIP_SIDED':'','#define NUM_CLIPPING_PLANES '+a.numClippingPlanes,a.shadowMapEnabled?'#define USE_SHADOWMAP':'',a.shadowMapEnabled?'#define '+d:'',a.sizeAttenuation?'#define USE_SIZEATTENUATION':'',a.logarithmicDepthBuffer?'#define USE_LOGDEPTHBUF':'',a.logarithmicDepthBuffer&&e.extensions.get('EXT_frag_depth')?'#define USE_LOGDEPTHBUF_EXT':'','uniform mat4 modelMatrix;','uniform mat4 modelViewMatrix;','uniform mat4 projectionMatrix;','uniform mat4 viewMatrix;','uniform mat3 normalMatrix;','uniform vec3 cameraPosition;','attribute vec3 position;','attribute vec3 normal;','attribute vec2 uv;','#ifdef USE_COLOR','\tattribute vec3 color;','#endif','#ifdef USE_MORPHTARGETS','\tattribute vec3 morphTarget0;','\tattribute vec3 morphTarget1;','\tattribute vec3 morphTarget2;','\tattribute vec3 morphTarget3;','\t#ifdef USE_MORPHNORMALS','\t\tattribute vec3 morphNormal0;','\t\tattribute vec3 morphNormal1;','\t\tattribute vec3 morphNormal2;','\t\tattribute vec3 morphNormal3;','\t#else','\t\tattribute vec3 morphTarget4;','\t\tattribute vec3 morphTarget5;','\t\tattribute vec3 morphTarget6;','\t\tattribute vec3 morphTarget7;','\t#endif','#endif','#ifdef USE_SKINNING','\tattribute vec4 skinIndex;','\tattribute vec4 skinWeight;','#endif','\n'].filter(Be).join('\n'),x=[f,'precision '+a.precision+' float;','precision '+a.precision+' int;','#define SHADER_NAME '+r.__webglShader.name,g,a.alphaTest?'#define ALPHATEST '+a.alphaTest:'','#define GAMMA_FACTOR '+m,a.useFog&&a.fog?'#define USE_FOG':'',a.useFog&&a.fogExp?'#define FOG_EXP2':'',a.map?'#define USE_MAP':'',a.envMap?'#define USE_ENVMAP':'',a.envMap?'#define '+c:'',a.envMap?'#define '+p:'',a.envMap?'#define '+u:'',a.lightMap?'#define USE_LIGHTMAP':'',a.aoMap?'#define USE_AOMAP':'',a.emissiveMap?'#define USE_EMISSIVEMAP':'',a.bumpMap?'#define USE_BUMPMAP':'',a.normalMap?'#define USE_NORMALMAP':'',a.specularMap?'#define USE_SPECULARMAP':'',a.roughnessMap?'#define USE_ROUGHNESSMAP':'',a.metalnessMap?'#define USE_METALNESSMAP':'',a.alphaMap?'#define USE_ALPHAMAP':'',a.vertexColors?'#define USE_COLOR':'',a.gradientMap?'#define USE_GRADIENTMAP':'',a.flatShading?'#define FLAT_SHADED':'',a.doubleSided?'#define DOUBLE_SIDED':'',a.flipSided?'#define FLIP_SIDED':'','#define NUM_CLIPPING_PLANES '+a.numClippingPlanes,'#define UNION_CLIPPING_PLANES '+(a.numClippingPlanes-a.numClipIntersection),a.shadowMapEnabled?'#define USE_SHADOWMAP':'',a.shadowMapEnabled?'#define '+d:'',a.premultipliedAlpha?'#define PREMULTIPLIED_ALPHA':'',a.physicallyCorrectLights?'#define PHYSICALLY_CORRECT_LIGHTS':'',a.logarithmicDepthBuffer?'#define USE_LOGDEPTHBUF':'',a.logarithmicDepthBuffer&&e.extensions.get('EXT_frag_depth')?'#define USE_LOGDEPTHBUF_EXT':'',a.envMap&&e.extensions.get('EXT_shader_texture_lod')?'#define TEXTURE_LOD_EXT':'','uniform mat4 viewMatrix;','uniform vec3 cameraPosition;',a.toneMapping===br?'':'#define TONE_MAPPING',a.toneMapping===br?'':Ga.tonemapping_pars_fragment,a.toneMapping===br?'':Ne('toneMapping',a.toneMapping),a.outputEncoding||a.mapEncoding||a.envMapEncoding||a.emissiveMapEncoding?Ga.encodings_pars_fragment:'',a.mapEncoding?De('mapTexelToLinear',a.mapEncoding):'',a.envMapEncoding?De('envMapTexelToLinear',a.envMapEncoding):'',a.emissiveMapEncoding?De('emissiveMapTexelToLinear',a.emissiveMapEncoding):'',a.outputEncoding?Ue('linearToOutputTexel',a.outputEncoding):'',a.depthPacking?'#define DEPTH_PACKING '+r.depthPacking:'','\n'].filter(Be).join('\n')),s=Ge(s,a),s=Oe(s,a),l=Ge(l,a),l=Oe(l,a),r.isShaderMaterial||(s=Ve(s),l=Ve(l));var v=_+s,y=x+l,E=we(i,i.VERTEX_SHADER,v),M=we(i,i.FRAGMENT_SHADER,y);i.attachShader(h,E),i.attachShader(h,M),void 0===r.index0AttributeName?!0===a.morphTargets&&i.bindAttribLocation(h,0,'position'):i.bindAttribLocation(h,0,r.index0AttributeName),i.linkProgram(h);var S=i.getProgramInfoLog(h),b=i.getShaderInfoLog(E),T=i.getShaderInfoLog(M),L=!0,A=!0;!1===i.getProgramParameter(h,i.LINK_STATUS)?(L=!1,console.error('THREE.WebGLProgram: shader error: ',i.getError(),'gl.VALIDATE_STATUS',i.getProgramParameter(h,i.VALIDATE_STATUS),'gl.getProgramInfoLog',S,b,T)):''===S?(''===b||''===T)&&(A=!1):console.warn('THREE.WebGLProgram: gl.getProgramInfoLog()',S),A&&(this.diagnostics={runnable:L,material:r,programLog:S,vertexShader:{log:b,prefix:_},fragmentShader:{log:T,prefix:x}}),i.deleteShader(E),i.deleteShader(M);var R;this.getUniforms=function(){return void 0===R&&(R=new V(i,h,e)),R};var P;return this.getAttributes=function(){return void 0===P&&(P=Fe(i,h)),P},this.destroy=function(){i.deleteProgram(h),this.program=void 0},Object.defineProperties(this,{uniforms:{get:function(){return console.warn('THREE.WebGLProgram: .uniforms is now .getUniforms().'),this.getUniforms()}},attributes:{get:function(){return console.warn('THREE.WebGLProgram: .attributes is now .getAttributes().'),this.getAttributes()}}}),this.id=ja++,this.code=t,this.usedTimes=1,this.program=h,this.vertexShader=E,this.fragmentShader=M,this}function ke(e,t){function r(e){if(t.floatVertexTextures&&e&&e.skeleton&&e.skeleton.useVertexTexture)return 1024;var r=t.maxVertexUniforms,a=Lt((r-20)/4),i=a;return void 0!==e&&e&&e.isSkinnedMesh&&(i=Rt(e.skeleton.bones.length,i),i<e.skeleton.bones.length&&console.warn('WebGLRenderer: too many bones - '+e.skeleton.bones.length+', this GPU supports just '+i+' (try OpenGL instead of ANGLE)')),i}function a(e,t){var r;return e?e.isTexture?r=e.encoding:e.isWebGLRenderTarget&&(console.warn('THREE.WebGLPrograms.getTextureEncodingFromMap: don\'t use render targets as textures. Use their .texture property instead.'),r=e.texture.encoding):r=Sa,r===Sa&&t&&(r=Ta),r}var n=[],i={MeshDepthMaterial:'depth',MeshNormalMaterial:'normal',MeshBasicMaterial:'basic',MeshLambertMaterial:'lambert',MeshPhongMaterial:'phong',MeshToonMaterial:'phong',MeshStandardMaterial:'physical',MeshPhysicalMaterial:'physical',LineBasicMaterial:'basic',LineDashedMaterial:'dashed',PointsMaterial:'points'},o=['precision','supportsVertexTextures','map','mapEncoding','envMap','envMapMode','envMapEncoding','lightMap','aoMap','emissiveMap','emissiveMapEncoding','bumpMap','normalMap','displacementMap','specularMap','roughnessMap','metalnessMap','gradientMap','alphaMap','combine','vertexColors','fog','useFog','fogExp','flatShading','sizeAttenuation','logarithmicDepthBuffer','skinning','maxBones','useVertexTexture','morphTargets','morphNormals','maxMorphTargets','maxMorphNormals','premultipliedAlpha','numDirLights','numPointLights','numSpotLights','numHemiLights','numRectAreaLights','shadowMapEnabled','shadowMapType','toneMapping','physicallyCorrectLights','alphaTest','doubleSided','flipSided','numClippingPlanes','numClipIntersection','depthPacking'];this.getParameters=function(n,o,s,l,d,c){var p=i[n.type],u=r(c),m=e.getPrecision();null!==n.precision&&(m=t.getMaxPrecision(n.precision),m!==n.precision&&console.warn('THREE.WebGLProgram.getParameters:',n.precision,'not supported, using',m,'instead.'));var f=e.getCurrentRenderTarget(),g={shaderID:p,precision:m,supportsVertexTextures:t.vertexTextures,outputEncoding:a(f?f.texture:null,e.gammaOutput),map:!!n.map,mapEncoding:a(n.map,e.gammaInput),envMap:!!n.envMap,envMapMode:n.envMap&&n.envMap.mapping,envMapEncoding:a(n.envMap,e.gammaInput),envMapCubeUV:!!n.envMap&&(n.envMap.mapping===Ir||n.envMap.mapping===zr),lightMap:!!n.lightMap,aoMap:!!n.aoMap,emissiveMap:!!n.emissiveMap,emissiveMapEncoding:a(n.emissiveMap,e.gammaInput),bumpMap:!!n.bumpMap,normalMap:!!n.normalMap,displacementMap:!!n.displacementMap,roughnessMap:!!n.roughnessMap,metalnessMap:!!n.metalnessMap,specularMap:!!n.specularMap,alphaMap:!!n.alphaMap,gradientMap:!!n.gradientMap,combine:n.combine,vertexColors:n.vertexColors,fog:!!s,useFog:n.fog,fogExp:s&&s.isFogExp2,flatShading:n.shading===Ht,sizeAttenuation:n.sizeAttenuation,logarithmicDepthBuffer:t.logarithmicDepthBuffer,skinning:n.skinning,maxBones:u,useVertexTexture:t.floatVertexTextures&&c&&c.skeleton&&c.skeleton.useVertexTexture,morphTargets:n.morphTargets,morphNormals:n.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numClippingPlanes:l,numClipIntersection:d,shadowMapEnabled:e.shadowMap.enabled&&c.receiveShadow&&0<o.shadows.length,shadowMapType:e.shadowMap.type,toneMapping:e.toneMapping,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:n.premultipliedAlpha,alphaTest:n.alphaTest,doubleSided:n.side===Vt,flipSided:n.side===Gt,depthPacking:n.depthPacking!==void 0&&n.depthPacking};return g},this.getProgramCode=function(e,t){var r=[];if(t.shaderID?r.push(t.shaderID):(r.push(e.fragmentShader),r.push(e.vertexShader)),void 0!==e.defines)for(var a in e.defines)r.push(a),r.push(e.defines[a]);for(var n=0;n<o.length;n++)r.push(t[o[n]]);return r.join()},this.acquireProgram=function(t,r,a){for(var i=0,o=n.length,s,l;i<o;i++)if(l=n[i],l.code===a){s=l,++s.usedTimes;break}return void 0===s&&(s=new He(e,a,t,r),n.push(s)),s},this.releaseProgram=function(e){if(0===--e.usedTimes){var t=n.indexOf(e);n[t]=n[n.length-1],n.pop(),e.destroy()}},this.programs=n}function We(e,t,r){function a(e){var i=e.target,s=l[i.id];null!==s.index&&n(s.index),o(s.attributes),i.removeEventListener('dispose',a),delete l[i.id];var d=t.get(i);d.wireframe&&n(d.wireframe),t.delete(i);var c=t.get(s);c.wireframe&&n(c.wireframe),t.delete(s),r.memory.geometries--}function i(e){return e.isInterleavedBufferAttribute?t.get(e.data).__webglBuffer:t.get(e).__webglBuffer}function n(t){var r=i(t);r!==void 0&&(e.deleteBuffer(r),s(t))}function o(e){for(var t in e)n(e[t])}function s(e){e.isInterleavedBufferAttribute?t.delete(e.data):t.delete(e)}var l={};return{get:function(e){var t=e.geometry;if(void 0!==l[t.id])return l[t.id];t.addEventListener('dispose',a);var i;return t.isBufferGeometry?i=t:t.isGeometry&&(void 0===t._bufferGeometry&&(t._bufferGeometry=new ve().setFromObject(e)),i=t._bufferGeometry),l[t.id]=i,r.memory.geometries++,i}}}function Xe(e,t,r){function n(e,r){var n=e.isInterleavedBufferAttribute?e.data:e,o=t.get(n);o.__webglBuffer===void 0?a(o,n,r):o.version!==n.version&&i(o,n,r)}function a(t,r,a){t.__webglBuffer=e.createBuffer(),e.bindBuffer(a,t.__webglBuffer);var i=r.dynamic?e.DYNAMIC_DRAW:e.STATIC_DRAW;e.bufferData(a,r.array,i);var n=e.FLOAT,o=r.array;o instanceof Float32Array?n=e.FLOAT:o instanceof Float64Array?console.warn('Unsupported data buffer format: Float64Array'):o instanceof Uint16Array?n=e.UNSIGNED_SHORT:o instanceof Int16Array?n=e.SHORT:o instanceof Uint32Array?n=e.UNSIGNED_INT:o instanceof Int32Array?n=e.INT:o instanceof Int8Array?n=e.BYTE:o instanceof Uint8Array&&(n=e.UNSIGNED_BYTE),t.bytesPerElement=o.BYTES_PER_ELEMENT,t.type=n,t.version=r.version,r.onUploadCallback()}function i(t,r,a){e.bindBuffer(a,t.__webglBuffer),!1===r.dynamic?e.bufferData(a,r.array,e.STATIC_DRAW):-1===r.updateRange.count?e.bufferSubData(a,0,r.array):0===r.updateRange.count?console.error('THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.'):(e.bufferSubData(a,r.updateRange.offset*r.array.BYTES_PER_ELEMENT,r.array.subarray(r.updateRange.offset,r.updateRange.offset+r.updateRange.count)),r.updateRange.count=0),t.version=r.version}var o=new We(e,t,r);return{getAttributeBuffer:function(e){return e.isInterleavedBufferAttribute?t.get(e.data).__webglBuffer:t.get(e).__webglBuffer},getAttributeProperties:function(e){return e.isInterleavedBufferAttribute?t.get(e.data):t.get(e)},getWireframeAttribute:function(r){var o=t.get(r);if(void 0!==o.wireframe)return o.wireframe;var s=[],d=r.index,p=r.attributes;if(null!==d)for(var u=d.array,m=0,i=u.length;m<i;m+=3){var l=u[m+0],a=u[m+1],f=u[m+2];s.push(l,a,a,f,f,l)}else for(var u=p.position.array,m=0,i=u.length/3-1;m<i;m+=3){var l=m+0,a=m+1,f=m+2;s.push(l,a,a,f,f,l)}var c=new(65535<he(s)?me:ue)(s,1);return n(c,e.ELEMENT_ARRAY_BUFFER),o.wireframe=c,c},update:function(t){var r=o.get(t);t.geometry.isGeometry&&r.updateFromObject(t);var a=r.index,s=r.attributes;for(var d in null!==a&&n(a,e.ELEMENT_ARRAY_BUFFER),s)n(s[d],e.ARRAY_BUFFER);var c=r.morphAttributes;for(var d in c)for(var p=c[d],u=0,i=p.length;u<i;u++)n(p[u],e.ARRAY_BUFFER);return r}}}function Ye(e,t,r,a,n,o,i){function s(e,t){if(e.width>t||e.height>t){var r=t/At(e.width,e.height),a=document.createElementNS('http://www.w3.org/1999/xhtml','canvas');a.width=Lt(e.width*r),a.height=Lt(e.height*r);var i=a.getContext('2d');return i.drawImage(e,0,0,e.width,e.height,0,0,a.width,a.height),console.warn('THREE.WebGLRenderer: image is too big ('+e.width+'x'+e.height+'). Resized to '+a.width+'x'+a.height,e),a}return e}function l(e){return Da.isPowerOfTwo(e.width)&&Da.isPowerOfTwo(e.height)}function d(e){if(e instanceof HTMLImageElement||e instanceof HTMLCanvasElement){var t=document.createElementNS('http://www.w3.org/1999/xhtml','canvas');t.width=Da.nearestPowerOfTwo(e.width),t.height=Da.nearestPowerOfTwo(e.height);var r=t.getContext('2d');return r.drawImage(e,0,0,t.width,t.height),console.warn('THREE.WebGLRenderer: image is not power of two ('+e.width+'x'+e.height+'). Resized to '+t.width+'x'+t.height,e),t}return e}function c(e){return e.wrapS!==Br||e.wrapT!==Br||e.minFilter!==Gr&&e.minFilter!==kr}function p(t){return t===Gr||t===Vr||t===Hr?e.NEAREST:e.LINEAR}function u(e){var t=e.target;t.removeEventListener('dispose',u),f(t),S.textures--}function m(e){var t=e.target;t.removeEventListener('dispose',m),g(t),S.textures--}function f(t){var r=a.get(t);if(t.image&&r.__image__webglTextureCube)e.deleteTexture(r.__image__webglTextureCube);else{if(r.__webglInit===void 0)return;e.deleteTexture(r.__webglTexture)}a.delete(t)}function g(t){var r=a.get(t),n=a.get(t.texture);if(t){if(void 0!==n.__webglTexture&&e.deleteTexture(n.__webglTexture),t.depthTexture&&t.depthTexture.dispose(),t.isWebGLRenderTargetCube)for(var o=0;6>o;o++)e.deleteFramebuffer(r.__webglFramebuffer[o]),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer[o]);else e.deleteFramebuffer(r.__webglFramebuffer),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer);a.delete(t.texture),a.delete(t)}}function h(t,i){var n=a.get(t);if(0<t.version&&n.__version!==t.version){var o=t.image;if(o===void 0)console.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined',t);else if(!1===o.complete)console.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete',t);else return void x(n,t,i)}r.activeTexture(e.TEXTURE0+i),r.bindTexture(e.TEXTURE_2D,n.__webglTexture)}function _(r,i,s){var l;if(s?(e.texParameteri(r,e.TEXTURE_WRAP_S,o(i.wrapS)),e.texParameteri(r,e.TEXTURE_WRAP_T,o(i.wrapT)),e.texParameteri(r,e.TEXTURE_MAG_FILTER,o(i.magFilter)),e.texParameteri(r,e.TEXTURE_MIN_FILTER,o(i.minFilter))):(e.texParameteri(r,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(r,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),(i.wrapS!==Br||i.wrapT!==Br)&&console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.',i),e.texParameteri(r,e.TEXTURE_MAG_FILTER,p(i.magFilter)),e.texParameteri(r,e.TEXTURE_MIN_FILTER,p(i.minFilter)),i.minFilter!==Gr&&i.minFilter!==kr&&console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.',i)),l=t.get('EXT_texture_filter_anisotropic'),l){if(i.type===Kr&&null===t.get('OES_texture_float_linear'))return;if(i.type===$r&&null===t.get('OES_texture_half_float_linear'))return;(1<i.anisotropy||a.get(i).__currentAnisotropy)&&(e.texParameterf(r,l.TEXTURE_MAX_ANISOTROPY_EXT,Rt(i.anisotropy,n.getMaxAnisotropy())),a.get(i).__currentAnisotropy=i.anisotropy)}}function x(t,a,p){t.__webglInit===void 0&&(t.__webglInit=!0,a.addEventListener('dispose',u),t.__webglTexture=e.createTexture(),S.textures++),r.activeTexture(e.TEXTURE0+p),r.bindTexture(e.TEXTURE_2D,t.__webglTexture),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,a.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,a.unpackAlignment);var m=s(a.image,n.maxTextureSize);c(a)&&!1===l(m)&&(m=d(m));var f=l(m),g=o(a.format),h=o(a.type);_(e.TEXTURE_2D,a,f);var x=a.mipmaps,v;if(a.isDepthTexture){var y=e.DEPTH_COMPONENT;if(a.type===Kr){if(!b)throw new Error('Float Depth Texture only supported in WebGL2.0');y=e.DEPTH_COMPONENT32F}else b&&(y=e.DEPTH_COMPONENT16);a.format===da&&y===e.DEPTH_COMPONENT&&a.type!==Zr&&a.type!==Jr&&(console.warn('THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.'),a.type=Zr,h=o(a.type)),a.format===ca&&(y=e.DEPTH_STENCIL,a.type!==aa&&(console.warn('THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.'),a.type=aa,h=o(a.type))),r.texImage2D(e.TEXTURE_2D,0,y,m.width,m.height,0,g,h,null)}else if(a.isDataTexture){if(0<x.length&&f){for(var E=0,i=x.length;E<i;E++)v=x[E],r.texImage2D(e.TEXTURE_2D,E,g,v.width,v.height,0,g,h,v.data);a.generateMipmaps=!1}else r.texImage2D(e.TEXTURE_2D,0,g,m.width,m.height,0,g,h,m.data);}else if(a.isCompressedTexture)for(var E=0,i=x.length;E<i;E++)v=x[E],a.format!==oa&&a.format!==na?-1<r.getCompressedTextureFormats().indexOf(g)?r.compressedTexImage2D(e.TEXTURE_2D,E,g,v.width,v.height,0,v.data):console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()'):r.texImage2D(e.TEXTURE_2D,E,g,v.width,v.height,0,g,h,v.data);else if(0<x.length&&f){for(var E=0,i=x.length;E<i;E++)v=x[E],r.texImage2D(e.TEXTURE_2D,E,g,g,h,v);a.generateMipmaps=!1}else r.texImage2D(e.TEXTURE_2D,0,g,g,h,m);a.generateMipmaps&&f&&e.generateMipmap(e.TEXTURE_2D),t.__version=a.version,a.onUpdate&&a.onUpdate(a)}function v(t,i,n,s){var l=o(i.texture.format),d=o(i.texture.type);r.texImage2D(s,0,l,i.width,i.height,0,l,d,null),e.bindFramebuffer(e.FRAMEBUFFER,t),e.framebufferTexture2D(e.FRAMEBUFFER,n,s,a.get(i.texture).__webglTexture,0),e.bindFramebuffer(e.FRAMEBUFFER,null)}function y(t,r){e.bindRenderbuffer(e.RENDERBUFFER,t),r.depthBuffer&&!r.stencilBuffer?(e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_COMPONENT16,r.width,r.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.RENDERBUFFER,t)):r.depthBuffer&&r.stencilBuffer?(e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_STENCIL,r.width,r.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.RENDERBUFFER,t)):e.renderbufferStorage(e.RENDERBUFFER,e.RGBA4,r.width,r.height),e.bindRenderbuffer(e.RENDERBUFFER,null)}function E(t,r){var i=r&&r.isWebGLRenderTargetCube;if(i)throw new Error('Depth Texture with cube render targets is not supported!');if(e.bindFramebuffer(e.FRAMEBUFFER,t),!(r.depthTexture&&r.depthTexture.isDepthTexture))throw new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');a.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),h(r.depthTexture,0);var n=a.get(r.depthTexture).__webglTexture;if(r.depthTexture.format===da)e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,n,0);else if(r.depthTexture.format===ca)e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,n,0);else throw new Error('Unknown depthTexture format')}function M(t){var r=a.get(t),n=!0===t.isWebGLRenderTargetCube;if(t.depthTexture){if(n)throw new Error('target.depthTexture not supported in Cube render targets');E(r.__webglFramebuffer,t)}else if(n){r.__webglDepthbuffer=[];for(var o=0;6>o;o++)e.bindFramebuffer(e.FRAMEBUFFER,r.__webglFramebuffer[o]),r.__webglDepthbuffer[o]=e.createRenderbuffer(),y(r.__webglDepthbuffer[o],t)}else e.bindFramebuffer(e.FRAMEBUFFER,r.__webglFramebuffer),r.__webglDepthbuffer=e.createRenderbuffer(),y(r.__webglDepthbuffer,t);e.bindFramebuffer(e.FRAMEBUFFER,null)}var S=i.memory,b='undefined'!==typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext;this.setTexture2D=h,this.setTextureCube=function(t,d){var c=a.get(t);if(6===t.image.length)if(0<t.version&&c.__version!==t.version){c.__image__webglTextureCube||(t.addEventListener('dispose',u),c.__image__webglTextureCube=e.createTexture(),S.textures++),r.activeTexture(e.TEXTURE0+d),r.bindTexture(e.TEXTURE_CUBE_MAP,c.__image__webglTextureCube),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,t.flipY);for(var p=t&&t.isCompressedTexture,m=t.image[0]&&t.image[0].isDataTexture,f=[],g=0;6>g;g++)f[g]=p||m?m?t.image[g].image:t.image[g]:s(t.image[g],n.maxCubemapSize);var i=f[0],h=l(i),x=o(t.format),v=o(t.type);_(e.TEXTURE_CUBE_MAP,t,h);for(var g=0;6>g;g++)if(!p)m?r.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+g,0,x,f[g].width,f[g].height,0,x,v,f[g].data):r.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+g,0,x,x,v,f[g]);else for(var y=f[g].mipmaps,E=0,M=y.length,b;E<M;E++)b=y[E],t.format!==oa&&t.format!==na?-1<r.getCompressedTextureFormats().indexOf(x)?r.compressedTexImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+g,E,x,b.width,b.height,0,b.data):console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()'):r.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+g,E,x,b.width,b.height,0,x,v,b.data);t.generateMipmaps&&h&&e.generateMipmap(e.TEXTURE_CUBE_MAP),c.__version=t.version,t.onUpdate&&t.onUpdate(t)}else r.activeTexture(e.TEXTURE0+d),r.bindTexture(e.TEXTURE_CUBE_MAP,c.__image__webglTextureCube)},this.setTextureCubeDynamic=function(t,i){r.activeTexture(e.TEXTURE0+i),r.bindTexture(e.TEXTURE_CUBE_MAP,a.get(t).__webglTexture)},this.setupRenderTarget=function(t){var n=a.get(t),o=a.get(t.texture);t.addEventListener('dispose',m),o.__webglTexture=e.createTexture(),S.textures++;var s=!0===t.isWebGLRenderTargetCube,d=l(t);if(s){n.__webglFramebuffer=[];for(var c=0;6>c;c++)n.__webglFramebuffer[c]=e.createFramebuffer()}else n.__webglFramebuffer=e.createFramebuffer();if(s){r.bindTexture(e.TEXTURE_CUBE_MAP,o.__webglTexture),_(e.TEXTURE_CUBE_MAP,t.texture,d);for(var c=0;6>c;c++)v(n.__webglFramebuffer[c],t,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+c);t.texture.generateMipmaps&&d&&e.generateMipmap(e.TEXTURE_CUBE_MAP),r.bindTexture(e.TEXTURE_CUBE_MAP,null)}else r.bindTexture(e.TEXTURE_2D,o.__webglTexture),_(e.TEXTURE_2D,t.texture,d),v(n.__webglFramebuffer,t,e.COLOR_ATTACHMENT0,e.TEXTURE_2D),t.texture.generateMipmaps&&d&&e.generateMipmap(e.TEXTURE_2D),r.bindTexture(e.TEXTURE_2D,null);t.depthBuffer&&M(t)},this.updateRenderTargetMipmap=function(t){var i=t.texture;if(i.generateMipmaps&&l(t)&&i.minFilter!==Gr&&i.minFilter!==kr){var n=t&&t.isWebGLRenderTargetCube?e.TEXTURE_CUBE_MAP:e.TEXTURE_2D,o=a.get(i).__webglTexture;r.bindTexture(n,o),e.generateMipmap(n),r.bindTexture(n,null)}}}function je(){var e={};return{get:function(t){var r=t.uuid,a=e[r];return void 0===a&&(a={},e[r]=a),a},delete:function(t){delete e[t.uuid]},clear:function(){e={}}}}function qe(e,t,r){function a(t,r,a){var n=new Uint8Array(4),o=e.createTexture();e.bindTexture(t,o),e.texParameteri(t,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(t,e.TEXTURE_MAG_FILTER,e.NEAREST);for(var s=0;s<a;s++)e.texImage2D(r+s,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,n);return o}function i(t){!0!==y[t]&&(e.enable(t),y[t]=!0)}function n(t){!1!==y[t]&&(e.disable(t),y[t]=!1)}function o(t,a,o,s,l,d,c,p){t===Xt?n(e.BLEND):i(e.BLEND),(t!==M||p!==P)&&(t===jt?p?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ONE,e.ONE,e.ONE)):(e.blendEquation(e.FUNC_ADD),e.blendFunc(e.SRC_ALPHA,e.ONE)):t===qt?p?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ZERO,e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ONE_MINUS_SRC_ALPHA)):(e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ZERO,e.ONE_MINUS_SRC_COLOR)):t===Zt?p?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ZERO,e.SRC_COLOR,e.ZERO,e.SRC_ALPHA)):(e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ZERO,e.SRC_COLOR)):p?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA)):(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA)),M=t,P=p),t===Qt?(l=l||a,d=d||o,c=c||s,(a!==S||l!==L)&&(e.blendEquationSeparate(r(a),r(l)),S=a,L=l),(o!==b||s!==T||d!==A||c!==R)&&(e.blendFuncSeparate(r(o),r(s),r(d),r(c)),b=o,T=s,A=d,R=c)):(S=null,b=null,T=null,L=null,A=null,R=null)}function s(e){f.setFunc(e)}function l(t){w!==t&&(t?e.frontFace(e.CW):e.frontFace(e.CCW),w=t)}function d(t){t===Ut?n(e.CULL_FACE):(i(e.CULL_FACE),t!==C&&(t===Nt?e.cullFace(e.BACK):t===It?e.cullFace(e.FRONT):e.cullFace(e.FRONT_AND_BACK))),C=t}function c(t){void 0===t&&(t=e.TEXTURE0+z-1),O!==t&&(e.activeTexture(t),O=t)}function p(t){!1===V.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),V.copy(t))}function u(t){!1===k.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),k.copy(t))}var m=new function(){var t=!1,i=new H,r=null,n=new H;return{setMask:function(a){r===a||t||(e.colorMask(a,a,a,a),r=a)},setLocked:function(e){t=e},setClear:function(t,r,o,s,a){!0===a&&(t*=s,r*=s,o*=s),i.set(t,r,o,s),!1===n.equals(i)&&(e.clearColor(t,r,o,s),n.copy(i))},reset:function(){t=!1,r=null,n.set(0,0,0,1)}}},f=new function(){var t=!1,r=null,a=null,o=null;return{setTest:function(t){t?i(e.DEPTH_TEST):n(e.DEPTH_TEST)},setMask:function(a){r===a||t||(e.depthMask(a),r=a)},setFunc:function(t){a!==t&&(t?t===mr?e.depthFunc(e.NEVER):t===fr?e.depthFunc(e.ALWAYS):t===gr?e.depthFunc(e.LESS):t===hr?e.depthFunc(e.LEQUAL):t===_r?e.depthFunc(e.EQUAL):t===xr?e.depthFunc(e.GEQUAL):t===vr?e.depthFunc(e.GREATER):t===yr?e.depthFunc(e.NOTEQUAL):e.depthFunc(e.LEQUAL):e.depthFunc(e.LEQUAL),a=t)},setLocked:function(e){t=e},setClear:function(t){o!==t&&(e.clearDepth(t),o=t)},reset:function(){t=!1,r=null,a=null,o=null}}},g=new function(){var t=!1,r=null,a=null,o=null,s=null,l=null,d=null,c=null,p=null;return{setTest:function(t){t?i(e.STENCIL_TEST):n(e.STENCIL_TEST)},setMask:function(a){r===a||t||(e.stencilMask(a),r=a)},setFunc:function(t,r,i){(a!==t||o!==r||s!==i)&&(e.stencilFunc(t,r,i),a=t,o=r,s=i)},setOp:function(t,r,a){(l!==t||d!==r||c!==a)&&(e.stencilOp(t,r,a),l=t,d=r,c=a)},setLocked:function(e){t=e},setClear:function(t){p!==t&&(e.clearStencil(t),p=t)},reset:function(){t=!1,r=null,a=null,o=null,s=null,l=null,d=null,c=null,p=null}}},h=e.getParameter(e.MAX_VERTEX_ATTRIBS),_=new Uint8Array(h),x=new Uint8Array(h),v=new Uint8Array(h),y={},E=null,M=null,S=null,b=null,T=null,L=null,A=null,R=null,P=!1,w=null,C=null,D=null,U=null,N=null,I=null,z=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),F=parseFloat(/^WebGL\ ([0-9])/.exec(e.getParameter(e.VERSION))[1]),B=1<=parseFloat(F),O=null,G={},V=new H,k=new H,W={};return W[e.TEXTURE_2D]=a(e.TEXTURE_2D,e.TEXTURE_2D,1),W[e.TEXTURE_CUBE_MAP]=a(e.TEXTURE_CUBE_MAP,e.TEXTURE_CUBE_MAP_POSITIVE_X,6),{buffers:{color:m,depth:f,stencil:g},init:function(){m.setClear(0,0,0,1),f.setClear(1),g.setClear(0),i(e.DEPTH_TEST),s(hr),l(!1),d(Nt),i(e.CULL_FACE),i(e.BLEND),o(Yt)},initAttributes:function(){for(var e=0,t=_.length;e<t;e++)_[e]=0},enableAttribute:function(r){if(_[r]=1,0===x[r]&&(e.enableVertexAttribArray(r),x[r]=1),0!==v[r]){var a=t.get('ANGLE_instanced_arrays');a.vertexAttribDivisorANGLE(r,0),v[r]=0}},enableAttributeAndDivisor:function(t,r,a){_[t]=1,0===x[t]&&(e.enableVertexAttribArray(t),x[t]=1),v[t]!==r&&(a.vertexAttribDivisorANGLE(t,r),v[t]=r)},disableUnusedAttributes:function(){for(var t=0,r=x.length;t!==r;++t)x[t]!==_[t]&&(e.disableVertexAttribArray(t),x[t]=0)},enable:i,disable:n,getCompressedTextureFormats:function(){if(null===E&&(E=[],t.get('WEBGL_compressed_texture_pvrtc')||t.get('WEBGL_compressed_texture_s3tc')||t.get('WEBGL_compressed_texture_etc1')))for(var r=e.getParameter(e.COMPRESSED_TEXTURE_FORMATS),a=0;a<r.length;a++)E.push(r[a]);return E},setBlending:o,setColorWrite:function(e){m.setMask(e)},setDepthTest:function(e){f.setTest(e)},setDepthWrite:function(e){f.setMask(e)},setDepthFunc:s,setStencilTest:function(e){g.setTest(e)},setStencilWrite:function(e){g.setMask(e)},setStencilFunc:function(e,t,r){g.setFunc(e,t,r)},setStencilOp:function(e,t,r){g.setOp(e,t,r)},setFlipSided:l,setCullFace:d,setLineWidth:function(t){t!==D&&(B&&e.lineWidth(t),D=t)},setPolygonOffset:function(t,r,a){t?(i(e.POLYGON_OFFSET_FILL),(U!==r||N!==a)&&(e.polygonOffset(r,a),U=r,N=a)):n(e.POLYGON_OFFSET_FILL)},getScissorTest:function(){return I},setScissorTest:function(t){I=t,t?i(e.SCISSOR_TEST):n(e.SCISSOR_TEST)},activeTexture:c,bindTexture:function(t,r){null===O&&c();var a=G[O];void 0===a&&(a={type:void 0,texture:void 0},G[O]=a),(a.type!==t||a.texture!==r)&&(e.bindTexture(t,r||W[t]),a.type=t,a.texture=r)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error(e)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error(e)}},scissor:p,viewport:u,reset:function(){for(var t=0;t<x.length;t++)1===x[t]&&(e.disableVertexAttribArray(t),x[t]=0);y={},E=null,O=null,G={},M=null,w=null,C=null,m.reset(),f.reset(),g.reset()}}}function Ze(e,t,r){function a(t){if('highp'===t){if(0<e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision&&0<e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision)return'highp';t='mediump'}return'mediump'===t&&0<e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision&&0<e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision?'mediump':'lowp'}var i=r.precision===void 0?'highp':r.precision,n=a(i),o;n!==i&&(console.warn('THREE.WebGLRenderer:',i,'not supported, using',n,'instead.'),i=n);var s=!0===r.logarithmicDepthBuffer&&!!t.get('EXT_frag_depth'),l=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),d=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),c=e.getParameter(e.MAX_TEXTURE_SIZE),p=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),u=e.getParameter(e.MAX_VERTEX_ATTRIBS),m=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),f=e.getParameter(e.MAX_VARYING_VECTORS),g=e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),h=0<d,_=!!t.get('OES_texture_float');return{getMaxAnisotropy:function(){if(void 0!==o)return o;var r=t.get('EXT_texture_filter_anisotropic');return o=null===r?0:e.getParameter(r.MAX_TEXTURE_MAX_ANISOTROPY_EXT),o},getMaxPrecision:a,precision:i,logarithmicDepthBuffer:s,maxTextures:l,maxVertexTextures:d,maxTextureSize:c,maxCubemapSize:p,maxAttributes:u,maxVertexUniforms:m,maxVaryings:f,maxFragmentUniforms:g,vertexTextures:h,floatFragmentTextures:_,floatVertexTextures:h&&_}}function Qe(e){var t={};return{get:function(r){if(void 0!==t[r])return t[r];var a;return a='WEBGL_depth_texture'===r?e.getExtension('WEBGL_depth_texture')||e.getExtension('MOZ_WEBGL_depth_texture')||e.getExtension('WEBKIT_WEBGL_depth_texture'):'EXT_texture_filter_anisotropic'===r?e.getExtension('EXT_texture_filter_anisotropic')||e.getExtension('MOZ_EXT_texture_filter_anisotropic')||e.getExtension('WEBKIT_EXT_texture_filter_anisotropic'):'WEBGL_compressed_texture_s3tc'===r?e.getExtension('WEBGL_compressed_texture_s3tc')||e.getExtension('MOZ_WEBGL_compressed_texture_s3tc')||e.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc'):'WEBGL_compressed_texture_pvrtc'===r?e.getExtension('WEBGL_compressed_texture_pvrtc')||e.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc'):'WEBGL_compressed_texture_etc1'===r?e.getExtension('WEBGL_compressed_texture_etc1'):e.getExtension(r),null===a&&console.warn('THREE.WebGLRenderer: '+r+' extension not supported.'),t[r]=a,a}}}function Je(){function e(){c.value!==a&&(c.value=a,c.needsUpdate=0<n),r.numPlanes=n,r.numIntersection=0}function t(e,t,a,n){var o=null===e?0:e.length,s=null;if(0!==o){if(s=c.value,!0!==n||null===s){var p=a+4*o,u=t.matrixWorldInverse;d.getNormalMatrix(u),(null===s||s.length<p)&&(s=new Float32Array(p));for(var m=0,i=a;m!==o;++m,i+=4)l.copy(e[m]).applyMatrix4(u,d),l.normal.toArray(s,i),s[i+3]=l.constant}c.value=s,c.needsUpdate=!0}return r.numPlanes=o,s}var r=this,a=null,n=0,o=!1,s=!1,l=new ee,d=new $,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(e,r,i){var s=0!==e.length||r||0!==n||o;return o=r,a=t(e,i,0),n=e.length,s},this.beginShadows=function(){s=!0,t(null)},this.endShadows=function(){s=!1,e()},this.setState=function(r,l,d,p,u,m){if(!o||null===r||0===r.length||s&&!d)s?t(null):e();else{var f=s?0:n,g=4*f,h=u.clippingState||null;c.value=h,h=t(r,p,g,m);for(var _=0;_!==g;++_)h[_]=a[_];u.clippingState=h,this.numIntersection=l?this.numPlanes:0,this.numPlanes+=f}}}function Ke(){oe.call(this),this.type='Scene',this.background=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0}function $e(e,t,r,a,n,o,s,l,d){function c(){requestAnimationFrame(c),e.readyState>=e.HAVE_CURRENT_DATA&&(p.needsUpdate=!0)}i.call(this,e,t,r,a,n,o,s,l,d),this.generateMipmaps=!1;var p=this;c()}function et(e){this.manager=e===void 0?Za:e}function tt(e){this.manager=e===void 0?Za:e}function rt(e,t,r,a){this.ray=new ae(e,t),this.near=r||0,this.far=a||Infinity,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn('THREE.Raycaster: params.PointCloud has been renamed to params.Points.'),this.Points}}})}function at(e,t){return e.distance-t.distance}function it(e,t,r,a){if(!1!==e.visible&&(e.raycast(t,r),!0===a))for(var n=e.children,o=0,i=n.length;o<i;o++)it(n[o],t,r,!0)}function nt(e,t,r,a,i){xe.call(this),this.type='TorusGeometry',this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:a,arc:i},this.fromBufferGeometry(new ot(e,t,r,a,i))}function ot(e,t,r,o,s){ve.call(this),this.type='TorusBufferGeometry',this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:o,arc:s},e=e||100,t=t||40,r=Lt(r)||8,o=Lt(o)||6,s=s||2*Pt;var l=[],p=[],m=[],f=[],g=new n,h=new n,_=new n,x,y;for(x=0;x<=r;x++)for(y=0;y<=o;y++){var i=y/o*s,u=2*(x/r*Pt);h.x=(e+t*Et(u))*Et(i),h.y=(e+t*Et(u))*yt(i),h.z=t*yt(u),p.push(h.x,h.y,h.z),g.x=e*Et(i),g.y=e*yt(i),_.subVectors(h,g).normalize(),m.push(_.x,_.y,_.z),f.push(y/o),f.push(x/r)}for(x=1;x<=r;x++)for(y=1;y<=o;y++){var v=(o+1)*x+y-1,a=(o+1)*(x-1)+y-1,E=(o+1)*(x-1)+y,c=(o+1)*x+y;l.push(v,a,c),l.push(a,E,c)}this.setIndex(l),this.addAttribute('position',new fe(p,3)),this.addAttribute('normal',new fe(m,3)),this.addAttribute('uv',new fe(f,2))}function st(e,t,r,a,i,n,o){xe.call(this),this.type='SphereGeometry',this.parameters={radius:e,widthSegments:t,heightSegments:r,phiStart:a,phiLength:i,thetaStart:n,thetaLength:o},this.fromBufferGeometry(new lt(e,t,r,a,i,n,o))}function lt(e,t,r,i,o,s,l){ve.call(this),this.type='SphereBufferGeometry',this.parameters={radius:e,widthSegments:t,heightSegments:r,phiStart:i,phiLength:o,thetaStart:s,thetaLength:l},e=e||50,t=At(3,Lt(t)||8),r=At(2,Lt(r)||6),i=i===void 0?0:i,o=o===void 0?2*Pt:o,s=s===void 0?0:s,l=l===void 0?Pt:l;var p=s+l,m=0,f=[],g=new n,h=new n,_=[],x=[],y=[],E=[],M,S;for(S=0;S<=r;S++){var T=[],L=S/r;for(M=0;M<=t;M++){var v=M/t;g.x=-e*Et(i+v*o)*yt(s+L*l),g.y=e*Et(s+L*l),g.z=e*yt(i+v*o)*yt(s+L*l),x.push(g.x,g.y,g.z),h.set(g.x,g.y,g.z).normalize(),y.push(h.x,h.y,h.z),E.push(v,1-L),T.push(m++)}f.push(T)}for(S=0;S<r;S++)for(M=0;M<t;M++){var u=f[S][M+1],a=f[S][M],b=f[S+1][M],c=f[S+1][M+1];(0!==S||0<s)&&_.push(u,a,c),(S!==r-1||p<Pt)&&_.push(a,b,c)}this.setIndex(_),this.addAttribute('position',new fe(x,3)),this.addAttribute('normal',new fe(y,3)),this.addAttribute('uv',new fe(E,2))}function dt(e,t,r,a){xe.call(this),this.type='CircleGeometry',this.parameters={radius:e,segments:t,thetaStart:r,thetaLength:a},this.fromBufferGeometry(new ct(e,t,r,a))}function ct(e,t,r,a){ve.call(this),this.type='CircleBufferGeometry',this.parameters={radius:e,segments:t,thetaStart:r,thetaLength:a},e=e||50,t=t===void 0?8:At(3,t),r=r===void 0?0:r,a=a===void 0?2*Pt:a;var l=[],d=[],c=[],p=[],u=new n,m=new o,f,i;for(d.push(0,0,0),c.push(0,0,1),p.push(0.5,0.5),(i=0,f=3);i<=t;i++,f+=3){var s=r+i/t*a;u.x=e*Et(s),u.y=e*yt(s),d.push(u.x,u.y,u.z),c.push(0,0,1),m.x=(d[f]/e+1)/2,m.y=(d[f+1]/e+1)/2,p.push(m.x,m.y)}for(f=1;f<=t;f++)l.push(f,f+1,0);this.setIndex(l),this.addAttribute('position',new fe(d,3)),this.addAttribute('normal',new fe(c,3)),this.addAttribute('uv',new fe(p,2))}function pt(e,t,r,a,i,n){xe.call(this),this.type='RingGeometry',this.parameters={innerRadius:e,outerRadius:t,thetaSegments:r,phiSegments:a,thetaStart:i,thetaLength:n},this.fromBufferGeometry(new ut(e,t,r,a,i,n))}function ut(e,t,r,s,l,p){ve.call(this),this.type='RingBufferGeometry',this.parameters={innerRadius:e,outerRadius:t,thetaSegments:r,phiSegments:s,thetaStart:l,thetaLength:p},e=e||20,t=t||50,l=l===void 0?0:l,p=p===void 0?2*Pt:p,r=r===void 0?8:At(3,r),s=s===void 0?1:At(1,s);var u=[],m=[],f=[],g=[],h=e,_=(t-e)/s,x=new n,v=new o,y,E,M;for(E=0;E<=s;E++){for(M=0;M<=r;M++)y=l+M/r*p,x.x=h*Et(y),x.y=h*yt(y),m.push(x.x,x.y,x.z),f.push(0,0,1),v.x=(x.x/t+1)/2,v.y=(x.y/t+1)/2,g.push(v.x,v.y);h+=_}for(E=0;E<s;E++){var i=E*(r+1);for(M=0;M<r;M++){y=M+i;var S=y,a=y+r+1,b=y+r+2,c=y+1;u.push(S,a,c),u.push(a,b,c)}}this.setIndex(u),this.addAttribute('position',new fe(m,3)),this.addAttribute('normal',new fe(f,3)),this.addAttribute('uv',new fe(g,2))}var mt=Math.tan,ft=Math.atan,gt=Math.acos,ht=Math.ceil,_t=Math.atan2,xt=Math.abs,vt=Math.sqrt,yt=Math.sin,Et=Math.cos,Mt=Math.pow,St=Math.round,bt=Math.LN2,Tt=Math.log,Lt=Math.floor,At=Math.max,Rt=Math.min,Pt=Math.PI,wt=Math.sign,Ct=Number.EPSILON;Ct===void 0&&(Ct=2.220446049250313e-16),wt===void 0&&(wt=function(e){return 0>e?-1:0<e?1:+e}),Function.prototype.name===void 0&&Object.defineProperty(Function.prototype,'name',{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}}),Object.assign===void 0&&function(){Object.assign=function(e){if(e===void 0||null===e)throw new TypeError('Cannot convert undefined or null to object');for(var t=Object(e),r=1,a;r<arguments.length;r++)if(a=arguments[r],void 0!==a&&null!==a)for(var i in a)Object.prototype.hasOwnProperty.call(a,i)&&(t[i]=a[i]);return t}}();var Dt='84',Ut=0,Nt=1,It=2,zt=0,Ft=1,Bt=2,Ot=0,Gt=1,Vt=2,Ht=1,kt=2,Wt=0,Xt=0,Yt=1,jt=2,qt=3,Zt=4,Qt=5,Jt=100,Kt=101,$t=102,er=103,tr=104,rr=200,ar=201,ir=202,nr=203,or=204,sr=205,lr=206,dr=207,cr=208,pr=209,ur=210,mr=0,fr=1,gr=2,hr=3,_r=4,xr=5,vr=6,yr=7,Er=0,Mr=1,Sr=2,br=0,Tr=1,Lr=2,Ar=3,Rr=4,Pr=300,wr=301,Cr=302,Dr=303,Ur=304,Nr=305,Ir=306,zr=307,Fr=1e3,Br=1001,Or=1002,Gr=1003,Vr=1004,Hr=1005,kr=1006,Wr=1007,Xr=1008,Yr=1009,jr=1010,qr=1011,Zr=1012,Qr=1013,Jr=1014,Kr=1015,$r=1016,ea=1017,ta=1018,ra=1019,aa=1020,ia=1021,na=1022,oa=1023,sa=1024,la=1025,da=1026,ca=1027,pa=2001,ua=2002,ma=2003,fa=2004,ga=2100,ha=2101,_a=2102,xa=2103,va=2151,ya=0,Ea=1,Ma=2,Sa=3e3,ba=3001,Ta=3007,La=3002,Aa=3004,Ra=3005,Pa=3006,wa=3200,Ca=3201,Da={DEG2RAD:Pt/180,RAD2DEG:180/Pt,generateUUID:function(){var e=['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'],t=Array(36),a=0,n;return function(){for(var r=0;36>r;r++)8===r||13===r||18===r||23===r?t[r]='-':14===r?t[r]='4':(2>=a&&(a=0|33554432+16777216*Math.random()),n=15&a,a>>=4,t[r]=e[19===r?8|3&n:n]);return t.join('')}}(),clamp:function(e,t,r){return At(t,Rt(r,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(e,t,r,a,i){return a+(e-t)*(i-a)/(r-t)},lerp:function(e,r,a){return(1-a)*e+a*r},smoothstep:function(e,t,r){return e<=t?0:e>=r?1:(e=(e-t)/(r-t),e*e*(3-2*e))},smootherstep:function(e,t,r){return e<=t?0:e>=r?1:(e=(e-t)/(r-t),e*e*e*(e*(6*e-15)+10))},randInt:function(e,t){return e+Lt(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(0.5-Math.random())},degToRad:function(e){return e*Da.DEG2RAD},radToDeg:function(e){return e*Da.RAD2DEG},isPowerOfTwo:function(e){return 0===(e&e-1)&&0!==e},nearestPowerOfTwo:function(e){return Mt(2,St(Tt(e)/bt))},nextPowerOfTwo:function(e){return e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,e++,e}};t.prototype={constructor:t,get x(){return this._x},set x(e){this._x=e,this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e,this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e,this.onChangeCallback()},get w(){return this._w},set w(e){this._w=e,this.onChangeCallback()},set:function(e,t,r,a){return this._x=e,this._y=t,this._z=r,this._w=a,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this.onChangeCallback(),this},setFromEuler:function(e,t){if(!1===(e&&e.isEuler))throw new Error('THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.');var r=Et(e._x/2),a=Et(e._y/2),i=Et(e._z/2),n=yt(e._x/2),o=yt(e._y/2),s=yt(e._z/2),l=e.order;return'XYZ'===l?(this._x=n*a*i+r*o*s,this._y=r*o*i-n*a*s,this._z=r*a*s+n*o*i,this._w=r*a*i-n*o*s):'YXZ'===l?(this._x=n*a*i+r*o*s,this._y=r*o*i-n*a*s,this._z=r*a*s-n*o*i,this._w=r*a*i+n*o*s):'ZXY'===l?(this._x=n*a*i-r*o*s,this._y=r*o*i+n*a*s,this._z=r*a*s+n*o*i,this._w=r*a*i-n*o*s):'ZYX'===l?(this._x=n*a*i-r*o*s,this._y=r*o*i+n*a*s,this._z=r*a*s-n*o*i,this._w=r*a*i+n*o*s):'YZX'===l?(this._x=n*a*i+r*o*s,this._y=r*o*i+n*a*s,this._z=r*a*s-n*o*i,this._w=r*a*i-n*o*s):'XZY'===l&&(this._x=n*a*i-r*o*s,this._y=r*o*i-n*a*s,this._z=r*a*s+n*o*i,this._w=r*a*i+n*o*s),!1!==t&&this.onChangeCallback(),this},setFromAxisAngle:function(e,t){var r=t/2,a=yt(r);return this._x=e.x*a,this._y=e.y*a,this._z=e.z*a,this._w=Et(r),this.onChangeCallback(),this},setFromRotationMatrix:function(e){var t=e.elements,r=t[0],a=t[4],i=t[8],n=t[1],o=t[5],l=t[9],d=t[2],c=t[6],p=t[10],u=r+o+p,m;return 0<u?(m=0.5/vt(u+1),this._w=0.25/m,this._x=(c-l)*m,this._y=(i-d)*m,this._z=(n-a)*m):r>o&&r>p?(m=2*vt(1+r-o-p),this._w=(c-l)/m,this._x=0.25*m,this._y=(a+n)/m,this._z=(i+d)/m):o>p?(m=2*vt(1+o-r-p),this._w=(i-d)/m,this._x=(a+n)/m,this._y=0.25*m,this._z=(l+c)/m):(m=2*vt(1+p-r-o),this._w=(n-a)/m,this._x=(i+d)/m,this._y=(l+c)/m,this._z=0.25*m),this.onChangeCallback(),this},setFromUnitVectors:function(){var e,t;return function(r,a){return void 0===e&&(e=new n),t=r.dot(a)+1,t<1e-6?(t=0,xt(r.x)>xt(r.z)?e.set(-r.y,r.x,0):e.set(0,-r.z,r.y)):e.crossVectors(r,a),this._x=e.x,this._y=e.y,this._z=e.z,this._w=t,this.normalize()}}(),inverse:function(){return this.conjugate().normalize()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return vt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x*=e,this._y*=e,this._z*=e,this._w*=e),this.onChangeCallback(),this},multiply:function(e,t){return void 0===t?this.multiplyQuaternions(this,e):(console.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.'),this.multiplyQuaternions(e,t))},premultiply:function(e){return this.multiplyQuaternions(e,this)},multiplyQuaternions:function(e,t){var r=e._x,a=e._y,i=e._z,n=e._w,o=t._x,s=t._y,l=t._z,d=t._w;return this._x=r*d+n*o+a*l-i*s,this._y=a*d+n*s+i*o-r*l,this._z=i*d+n*l+r*s-a*o,this._w=n*d-r*o-a*s-i*l,this.onChangeCallback(),this},slerp:function(e,r){if(0===r)return this;if(1===r)return this.copy(e);var t=this._x,a=this._y,i=this._z,n=this._w,o=n*e._w+t*e._x+a*e._y+i*e._z;if(0>o?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),1<=o)return this._w=n,this._x=t,this._y=a,this._z=i,this;var s=vt(1-o*o);if(1e-3>xt(s))return this._w=0.5*(n+this._w),this._x=0.5*(t+this._x),this._y=0.5*(a+this._y),this._z=0.5*(i+this._z),this;var l=_t(s,o),d=yt((1-r)*l)/s,c=yt(r*l)/s;return this._w=n*d+this._w*c,this._x=t*d+this._x*c,this._y=a*d+this._y*c,this._z=i*d+this._z*c,this.onChangeCallback(),this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e,t){return void 0===t&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this.onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}},Object.assign(t,{slerp:function(e,r,a,i){return a.copy(e).slerp(r,i)},slerpFlat:function(e,r,a,i,n,o,l){var t=a[i+0],d=a[i+1],c=a[i+2],p=a[i+3],u=n[o+0],m=n[o+1],g=n[o+2],h=n[o+3];if(p!==h||t!==u||d!==m||c!==g){var _=1-l,s=t*u+d*m+c*g+p*h,x=0<=s?1:-1,v=1-s*s;if(v>Ct){var y=vt(v),E=_t(y,s*x);_=yt(_*E)/y,l=yt(l*E)/y}var M=l*x;if(t=t*_+u*M,d=d*_+m*M,c=c*_+g*M,p=p*_+h*M,_===1-l){var S=1/vt(t*t+d*d+c*c+p*p);t*=S,d*=S,c*=S,p*=S}}e[r]=t,e[r+1]=d,e[r+2]=c,e[r+3]=p}}),n.prototype={constructor:n,isVector3:!0,set:function(e,t,r){return this.x=e,this.y=t,this.z=r,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error('index is out of range: '+e);}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error('index is out of range: '+e);}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0===t?(this.x+=e.x,this.y+=e.y,this.z+=e.z,this):(console.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.'),this.addVectors(e,t))},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this},sub:function(e,t){return void 0===t?(this.x-=e.x,this.y-=e.y,this.z-=e.z,this):(console.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.'),this.subVectors(e,t))},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0===t?(this.x*=e.x,this.y*=e.y,this.z*=e.z,this):(console.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.'),this.multiplyVectors(e,t))},multiplyScalar:function(e){return isFinite(e)?(this.x*=e,this.y*=e,this.z*=e):(this.x=0,this.y=0,this.z=0),this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyEuler:function(){var e;return function(r){return!1===(r&&r.isEuler)&&console.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.'),void 0===e&&(e=new t),this.applyQuaternion(e.setFromEuler(r))}}(),applyAxisAngle:function(){var e;return function(r,a){return void 0===e&&(e=new t),this.applyQuaternion(e.setFromAxisAngle(r,a))}}(),applyMatrix3:function(t){var r=this.x,a=this.y,i=this.z,n=t.elements;return this.x=n[0]*r+n[3]*a+n[6]*i,this.y=n[1]*r+n[4]*a+n[7]*i,this.z=n[2]*r+n[5]*a+n[8]*i,this},applyMatrix4:function(t){var r=this.x,a=this.y,i=this.z,n=t.elements;this.x=n[0]*r+n[4]*a+n[8]*i+n[12],this.y=n[1]*r+n[5]*a+n[9]*i+n[13],this.z=n[2]*r+n[6]*a+n[10]*i+n[14];var e=n[3]*r+n[7]*a+n[11]*i+n[15];return this.divideScalar(e)},applyQuaternion:function(e){var t=this.x,r=this.y,a=this.z,i=e.x,n=e.y,o=e.z,s=e.w,l=s*t+n*a-o*r,d=s*r+o*t-i*a,c=s*a+i*r-n*t,p=-i*t-n*r-o*a;return this.x=l*s+p*-i+d*-o-c*-n,this.y=d*s+p*-n+c*-i-l*-o,this.z=c*s+p*-o+l*-n-d*-i,this},project:function(){var e;return function(t){return void 0===e&&(e=new r),e.multiplyMatrices(t.projectionMatrix,e.getInverse(t.matrixWorld)),this.applyMatrix4(e)}}(),unproject:function(){var e;return function(t){return void 0===e&&(e=new r),e.multiplyMatrices(t.matrixWorld,e.getInverse(t.projectionMatrix)),this.applyMatrix4(e)}}(),transformDirection:function(t){var r=this.x,a=this.y,i=this.z,n=t.elements;return this.x=n[0]*r+n[4]*a+n[8]*i,this.y=n[1]*r+n[5]*a+n[9]*i,this.z=n[2]*r+n[6]*a+n[10]*i,this.normalize()},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){return this.x=Rt(this.x,e.x),this.y=Rt(this.y,e.y),this.z=Rt(this.z,e.z),this},max:function(e){return this.x=At(this.x,e.x),this.y=At(this.y,e.y),this.z=At(this.z,e.z),this},clamp:function(e,t){return this.x=At(e.x,Rt(t.x,this.x)),this.y=At(e.y,Rt(t.y,this.y)),this.z=At(e.z,Rt(t.z,this.z)),this},clampScalar:function(){var e,t;return function(r,a){return void 0===e&&(e=new n,t=new n),e.set(r,r,r),t.set(a,a,a),this.clamp(e,t)}}(),clampLength:function(e,t){var r=this.length();return this.multiplyScalar(At(e,Rt(t,r))/r)},floor:function(){return this.x=Lt(this.x),this.y=Lt(this.y),this.z=Lt(this.z),this},ceil:function(){return this.x=ht(this.x),this.y=ht(this.y),this.z=ht(this.z),this},round:function(){return this.x=St(this.x),this.y=St(this.y),this.z=St(this.z),this},roundToZero:function(){return this.x=0>this.x?ht(this.x):Lt(this.x),this.y=0>this.y?ht(this.y):Lt(this.y),this.z=0>this.z?ht(this.z):Lt(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return vt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return xt(this.x)+xt(this.y)+xt(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){return this.multiplyScalar(e/this.length())},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},lerpVectors:function(e,t,r){return this.subVectors(t,e).multiplyScalar(r).add(e)},cross:function(e,t){if(void 0!==t)return console.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.'),this.crossVectors(e,t);var r=this.x,a=this.y,i=this.z;return this.x=a*e.z-i*e.y,this.y=i*e.x-r*e.z,this.z=r*e.y-a*e.x,this},crossVectors:function(e,t){var r=e.x,a=e.y,i=e.z,n=t.x,o=t.y,s=t.z;return this.x=a*s-i*o,this.y=i*n-r*s,this.z=r*o-a*n,this},projectOnVector:function(e){var t=e.dot(this)/e.lengthSq();return this.copy(e).multiplyScalar(t)},projectOnPlane:function(){var e;return function(t){return void 0===e&&(e=new n),e.copy(this).projectOnVector(t),this.sub(e)}}(),reflect:function(){var e;return function(t){return void 0===e&&(e=new n),this.sub(e.copy(t).multiplyScalar(2*this.dot(t)))}}(),angleTo:function(e){var t=this.dot(e)/vt(this.lengthSq()*e.lengthSq());return gt(Da.clamp(t,-1,1))},distanceTo:function(e){return vt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y,a=this.z-e.z;return t*t+r*r+a*a},distanceToManhattan:function(e){return xt(this.x-e.x)+xt(this.y-e.y)+xt(this.z-e.z)},setFromSpherical:function(e){var t=yt(e.phi)*e.radius;return this.x=t*yt(e.theta),this.y=Et(e.phi)*e.radius,this.z=t*Et(e.theta),this},setFromCylindrical:function(e){return this.x=e.radius*yt(e.theta),this.y=e.y,this.z=e.radius*Et(e.theta),this},setFromMatrixPosition:function(e){return this.setFromMatrixColumn(e,3)},setFromMatrixScale:function(e){var t=this.setFromMatrixColumn(e,0).length(),r=this.setFromMatrixColumn(e,1).length(),a=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=r,this.z=a,this},setFromMatrixColumn:function(e,t){if('number'===typeof e){console.warn('THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).');var r=e;e=t,t=r}return this.fromArray(e.elements,4*t)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e},fromBufferAttribute:function(e,t,r){return void 0!==r&&console.warn('THREE.Vector3: offset has been removed from .fromBufferAttribute().'),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}},r.prototype={constructor:r,isMatrix4:!0,set:function(e,t,r,a,i,n,o,s,l,d,c,p,u,m,f,g){var h=this.elements;return h[0]=e,h[4]=t,h[8]=r,h[12]=a,h[1]=i,h[5]=n,h[9]=o,h[13]=s,h[2]=l,h[6]=d,h[10]=c,h[14]=p,h[3]=u,h[7]=m,h[11]=f,h[15]=g,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return new r().fromArray(this.elements)},copy:function(e){return this.elements.set(e.elements),this},copyPosition:function(e){var t=this.elements,r=e.elements;return t[12]=r[12],t[13]=r[13],t[14]=r[14],this},extractBasis:function(e,t,r){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),r.setFromMatrixColumn(this,2),this},makeBasis:function(e,t,r){return this.set(e.x,t.x,r.x,0,e.y,t.y,r.y,0,e.z,t.z,r.z,0,0,0,0,1),this},extractRotation:function(){var e;return function(t){void 0===e&&(e=new n);var r=this.elements,a=t.elements,i=1/e.setFromMatrixColumn(t,0).length(),o=1/e.setFromMatrixColumn(t,1).length(),s=1/e.setFromMatrixColumn(t,2).length();return r[0]=a[0]*i,r[1]=a[1]*i,r[2]=a[2]*i,r[4]=a[4]*o,r[5]=a[5]*o,r[6]=a[6]*o,r[8]=a[8]*s,r[9]=a[9]*s,r[10]=a[10]*s,this}}(),makeRotationFromEuler:function(t){!1===(t&&t.isEuler)&&console.error('THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');var r=this.elements,i=t.x,n=t.y,o=t.z,s=Et(i),l=yt(i),p=Et(n),u=yt(n),m=Et(o),e=yt(o);if('XYZ'===t.order){var g=s*m,h=s*e,_=l*m,x=l*e;r[0]=p*m,r[4]=-p*e,r[8]=u,r[1]=h+_*u,r[5]=g-x*u,r[9]=-l*p,r[2]=x-g*u,r[6]=_+h*u,r[10]=s*p}else if('YXZ'===t.order){var v=p*m,y=p*e,E=u*m,M=u*e;r[0]=v+M*l,r[4]=E*l-y,r[8]=s*u,r[1]=s*e,r[5]=s*m,r[9]=-l,r[2]=y*l-E,r[6]=M+v*l,r[10]=s*p}else if('ZXY'===t.order){var v=p*m,y=p*e,E=u*m,M=u*e;r[0]=v-M*l,r[4]=-s*e,r[8]=E+y*l,r[1]=y+E*l,r[5]=s*m,r[9]=M-v*l,r[2]=-s*u,r[6]=l,r[10]=s*p}else if('ZYX'===t.order){var g=s*m,h=s*e,_=l*m,x=l*e;r[0]=p*m,r[4]=_*u-h,r[8]=g*u+x,r[1]=p*e,r[5]=x*u+g,r[9]=h*u-_,r[2]=-u,r[6]=l*p,r[10]=s*p}else if('YZX'===t.order){var S=s*p,T=s*u,L=l*p,A=l*u;r[0]=p*m,r[4]=A-S*e,r[8]=L*e+T,r[1]=e,r[5]=s*m,r[9]=-l*m,r[2]=-u*m,r[6]=T*e+L,r[10]=S-A*e}else if('XZY'===t.order){var S=s*p,T=s*u,L=l*p,A=l*u;r[0]=p*m,r[4]=-e,r[8]=u*m,r[1]=S*e+A,r[5]=s*m,r[9]=T*e-L,r[2]=L*e-T,r[6]=l*m,r[10]=A*e+S}return r[3]=0,r[7]=0,r[11]=0,r[12]=0,r[13]=0,r[14]=0,r[15]=1,this},makeRotationFromQuaternion:function(e){var t=this.elements,r=e.x,a=e.y,i=e.z,n=e.w,o=r+r,s=a+a,l=i+i,d=r*o,c=r*s,p=r*l,u=a*s,m=a*l,f=i*l,g=n*o,h=n*s,_=n*l;return t[0]=1-(u+f),t[4]=c-_,t[8]=p+h,t[1]=c+_,t[5]=1-(d+f),t[9]=m-g,t[2]=p-h,t[6]=m+g,t[10]=1-(d+u),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},lookAt:function(){var e,t,r;return function(a,i,o){void 0===e&&(e=new n,t=new n,r=new n);var s=this.elements;return r.subVectors(a,i).normalize(),0===r.lengthSq()&&(r.z=1),e.crossVectors(o,r).normalize(),0===e.lengthSq()&&(r.z+=1e-4,e.crossVectors(o,r).normalize()),t.crossVectors(r,e),s[0]=e.x,s[4]=t.x,s[8]=r.x,s[1]=e.y,s[5]=t.y,s[9]=r.y,s[2]=e.z,s[6]=t.z,s[10]=r.z,this}}(),multiply:function(e,t){return void 0===t?this.multiplyMatrices(this,e):(console.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.'),this.multiplyMatrices(e,t))},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){var r=e.elements,a=t.elements,i=this.elements,n=r[0],o=r[4],s=r[8],l=r[12],d=r[1],c=r[5],p=r[9],u=r[13],m=r[2],f=r[6],g=r[10],h=r[14],_=r[3],x=r[7],v=r[11],y=r[15],E=a[0],M=a[4],S=a[8],b=a[12],T=a[1],L=a[5],A=a[9],R=a[13],P=a[2],w=a[6],C=a[10],D=a[14],U=a[3],N=a[7],I=a[11],z=a[15];return i[0]=n*E+o*T+s*P+l*U,i[4]=n*M+o*L+s*w+l*N,i[8]=n*S+o*A+s*C+l*I,i[12]=n*b+o*R+s*D+l*z,i[1]=d*E+c*T+p*P+u*U,i[5]=d*M+c*L+p*w+u*N,i[9]=d*S+c*A+p*C+u*I,i[13]=d*b+c*R+p*D+u*z,i[2]=m*E+f*T+g*P+h*U,i[6]=m*M+f*L+g*w+h*N,i[10]=m*S+f*A+g*C+h*I,i[14]=m*b+f*R+g*D+h*z,i[3]=_*E+x*T+v*P+y*U,i[7]=_*M+x*L+v*w+y*N,i[11]=_*S+x*A+v*C+y*I,i[15]=_*b+x*R+v*D+y*z,this},multiplyToArray:function(e,t,a){var r=this.elements;return this.multiplyMatrices(e,t),a[0]=r[0],a[1]=r[1],a[2]=r[2],a[3]=r[3],a[4]=r[4],a[5]=r[5],a[6]=r[6],a[7]=r[7],a[8]=r[8],a[9]=r[9],a[10]=r[10],a[11]=r[11],a[12]=r[12],a[13]=r[13],a[14]=r[14],a[15]=r[15],this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},applyToBufferAttribute:function(){var e;return function(t){e===void 0&&(e=new n);for(var r=0,a=t.count;r<a;r++)e.x=t.getX(r),e.y=t.getY(r),e.z=t.getZ(r),e.applyMatrix4(this),t.setXYZ(r,e.x,e.y,e.z);return t}}(),determinant:function(){var e=this.elements,t=e[0],r=e[4],a=e[8],i=e[12],n=e[1],o=e[5],s=e[9],l=e[13],d=e[2],c=e[6],p=e[10],u=e[14],m=e[3],f=e[7],g=e[11],h=e[15];return m*(+i*s*c-a*l*c-i*o*p+r*l*p+a*o*u-r*s*u)+f*(+t*s*u-t*l*p+i*n*p-a*n*u+a*l*d-i*s*d)+g*(+t*l*c-t*o*u-i*n*c+r*n*u+i*o*d-r*l*d)+h*(-a*o*d-t*s*c+t*o*p+a*n*c-r*n*p+r*s*d)},transpose:function(){var e=this.elements,t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getInverse:function(e,t){var r=this.elements,a=e.elements,i=a[0],n=a[1],o=a[2],s=a[3],l=a[4],d=a[5],c=a[6],p=a[7],u=a[8],m=a[9],f=a[10],g=a[11],h=a[12],_=a[13],x=a[14],v=a[15],y=m*x*p-_*f*p+_*c*g-d*x*g-m*c*v+d*f*v,E=h*f*p-u*x*p-h*c*g+l*x*g+u*c*v-l*f*v,M=u*_*p-h*m*p+h*d*g-l*_*g-u*d*v+l*m*v,S=h*m*c-u*_*c-h*d*f+l*_*f+u*d*x-l*m*x,b=i*y+n*E+o*M+s*S;if(0===b){var T='THREE.Matrix4.getInverse(): can\'t invert matrix, determinant is 0';if(!0===t)throw new Error(T);else console.warn(T);return this.identity()}var L=1/b;return r[0]=y*L,r[1]=(_*f*s-m*x*s-_*o*g+n*x*g+m*o*v-n*f*v)*L,r[2]=(d*x*s-_*c*s+_*o*p-n*x*p-d*o*v+n*c*v)*L,r[3]=(m*c*s-d*f*s-m*o*p+n*f*p+d*o*g-n*c*g)*L,r[4]=E*L,r[5]=(u*x*s-h*f*s+h*o*g-i*x*g-u*o*v+i*f*v)*L,r[6]=(h*c*s-l*x*s-h*o*p+i*x*p+l*o*v-i*c*v)*L,r[7]=(l*f*s-u*c*s+u*o*p-i*f*p-l*o*g+i*c*g)*L,r[8]=M*L,r[9]=(h*m*s-u*_*s-h*n*g+i*_*g+u*n*v-i*m*v)*L,r[10]=(l*_*s-h*d*s+h*n*p-i*_*p-l*n*v+i*d*v)*L,r[11]=(u*d*s-l*m*s-u*n*p+i*m*p+l*n*g-i*d*g)*L,r[12]=S*L,r[13]=(u*_*o-h*m*o+h*n*f-i*_*f-u*n*x+i*m*x)*L,r[14]=(h*d*o-l*_*o-h*n*c+i*_*c+l*n*x-i*d*x)*L,r[15]=(l*m*o-u*d*o+u*n*c-i*m*c-l*n*f+i*d*f)*L,this},scale:function(e){var t=this.elements,r=e.x,a=e.y,i=e.z;return t[0]*=r,t[4]*=a,t[8]*=i,t[1]*=r,t[5]*=a,t[9]*=i,t[2]*=r,t[6]*=a,t[10]*=i,t[3]*=r,t[7]*=a,t[11]*=i,this},getMaxScaleOnAxis:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],r=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],a=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return vt(At(t,r,a))},makeTranslation:function(e,t,r){return this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this},makeRotationX:function(e){var t=Et(e),r=yt(e);return this.set(1,0,0,0,0,t,-r,0,0,r,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Et(e),r=yt(e);return this.set(t,0,r,0,0,1,0,0,-r,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Et(e),r=yt(e);return this.set(t,-r,0,0,r,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,r){var a=Et(r),i=yt(r),n=1-a,t=e.x,o=e.y,s=e.z,l=n*t,d=n*o;return this.set(l*t+a,l*o-i*s,l*s+i*o,0,l*o+i*s,d*o+a,d*s-i*t,0,l*s-i*o,d*s+i*t,n*s*s+a,0,0,0,0,1),this},makeScale:function(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this},makeShear:function(e,t,r){return this.set(1,t,r,0,e,1,r,0,e,t,1,0,0,0,0,1),this},compose:function(e,t,r){return this.makeRotationFromQuaternion(t),this.scale(r),this.setPosition(e),this},decompose:function(){var e,t;return function(a,i,o){void 0===e&&(e=new n,t=new r);var s=this.elements,l=e.set(s[0],s[1],s[2]).length(),d=e.set(s[4],s[5],s[6]).length(),c=e.set(s[8],s[9],s[10]).length(),p=this.determinant();0>p&&(l=-l),a.x=s[12],a.y=s[13],a.z=s[14],t.elements.set(this.elements);var u=1/l,m=1/d,f=1/c;return t.elements[0]*=u,t.elements[1]*=u,t.elements[2]*=u,t.elements[4]*=m,t.elements[5]*=m,t.elements[6]*=m,t.elements[8]*=f,t.elements[9]*=f,t.elements[10]*=f,i.setFromRotationMatrix(t),o.x=l,o.y=d,o.z=c,this}}(),makePerspective:function(e,t,r,a,i,n){void 0===n&&console.warn('THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.');var o=this.elements;return o[0]=2*i/(t-e),o[4]=0,o[8]=(t+e)/(t-e),o[12]=0,o[1]=0,o[5]=2*i/(r-a),o[9]=(r+a)/(r-a),o[13]=0,o[2]=0,o[6]=0,o[10]=-(n+i)/(n-i),o[14]=-2*n*i/(n-i),o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this},makeOrthographic:function(e,t,r,a,i,n){var o=this.elements,s=1/(t-e),l=1/(r-a),d=1/(n-i);return o[0]=2*s,o[4]=0,o[8]=0,o[12]=-((t+e)*s),o[1]=0,o[5]=2*l,o[9]=0,o[13]=-((r+a)*l),o[2]=0,o[6]=0,o[10]=-2*d,o[14]=-((n+i)*d),o[3]=0,o[7]=0,o[11]=0,o[15]=1,this},equals:function(e){for(var t=this.elements,r=e.elements,a=0;16>a;a++)if(t[a]!==r[a])return!1;return!0},fromArray:function(e,t){t===void 0&&(t=0);for(var r=0;16>r;r++)this.elements[r]=e[r+t];return this},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e}},a.prototype={addEventListener:function(e,t){this._listeners===void 0&&(this._listeners={});var r=this._listeners;r[e]===void 0&&(r[e]=[]),-1===r[e].indexOf(t)&&r[e].push(t)},hasEventListener:function(e,t){if(this._listeners===void 0)return!1;var r=this._listeners;return r[e]!==void 0&&-1!==r[e].indexOf(t)},removeEventListener:function(e,t){if(void 0!==this._listeners){var r=this._listeners,a=r[e];if(void 0!==a){var i=a.indexOf(t);-1!==i&&a.splice(i,1)}}},dispatchEvent:function(e){if(void 0!==this._listeners){var t=this._listeners,r=t[e.type];if(void 0!==r){e.target=this;var a=[],n=0,i=r.length;for(n=0;n<i;n++)a[n]=r[n];for(n=0;n<i;n++)a[n].call(this,e)}}}},o.prototype={constructor:o,isVector2:!0,get width(){return this.x},set width(e){this.x=e},get height(){return this.y},set height(e){this.y=e},set:function(e,t){return this.x=e,this.y=t,this},setScalar:function(e){return this.x=e,this.y=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error('index is out of range: '+e);}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error('index is out of range: '+e);}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0===t?(this.x+=e.x,this.y+=e.y,this):(console.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.'),this.addVectors(e,t))},addScalar:function(e){return this.x+=e,this.y+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this},sub:function(e,t){return void 0===t?(this.x-=e.x,this.y-=e.y,this):(console.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.'),this.subVectors(e,t))},subScalar:function(e){return this.x-=e,this.y-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiply:function(e){return this.x*=e.x,this.y*=e.y,this},multiplyScalar:function(e){return isFinite(e)?(this.x*=e,this.y*=e):(this.x=0,this.y=0),this},divide:function(e){return this.x/=e.x,this.y/=e.y,this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){return this.x=Rt(this.x,e.x),this.y=Rt(this.y,e.y),this},max:function(e){return this.x=At(this.x,e.x),this.y=At(this.y,e.y),this},clamp:function(e,t){return this.x=At(e.x,Rt(t.x,this.x)),this.y=At(e.y,Rt(t.y,this.y)),this},clampScalar:function(){var e,t;return function(r,a){return void 0===e&&(e=new o,t=new o),e.set(r,r),t.set(a,a),this.clamp(e,t)}}(),clampLength:function(e,t){var r=this.length();return this.multiplyScalar(At(e,Rt(t,r))/r)},floor:function(){return this.x=Lt(this.x),this.y=Lt(this.y),this},ceil:function(){return this.x=ht(this.x),this.y=ht(this.y),this},round:function(){return this.x=St(this.x),this.y=St(this.y),this},roundToZero:function(){return this.x=0>this.x?ht(this.x):Lt(this.x),this.y=0>this.y?ht(this.y):Lt(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return vt(this.x*this.x+this.y*this.y)},lengthManhattan:function(){return xt(this.x)+xt(this.y)},normalize:function(){return this.divideScalar(this.length())},angle:function(){var e=_t(this.y,this.x);return 0>e&&(e+=2*Pt),e},distanceTo:function(e){return vt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y;return t*t+r*r},distanceToManhattan:function(e){return xt(this.x-e.x)+xt(this.y-e.y)},setLength:function(e){return this.multiplyScalar(e/this.length())},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},lerpVectors:function(e,t,r){return this.subVectors(t,e).multiplyScalar(r).add(e)},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e},fromBufferAttribute:function(e,t,r){return void 0!==r&&console.warn('THREE.Vector2: offset has been removed from .fromBufferAttribute().'),this.x=e.getX(t),this.y=e.getY(t),this},rotateAround:function(e,t){var r=Et(t),a=yt(t),i=this.x-e.x,n=this.y-e.y;return this.x=i*r-n*a+e.x,this.y=i*a+n*r+e.y,this}};var Ua=0;i.DEFAULT_IMAGE=void 0,i.DEFAULT_MAPPING=Pr,i.prototype={constructor:i,isTexture:!0,set needsUpdate(e){!0===e&&this.version++},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this},toJSON:function(e){function t(e){var t;return void 0===e.toDataURL?(t=document.createElementNS('http://www.w3.org/1999/xhtml','canvas'),t.width=e.width,t.height=e.height,t.getContext('2d').drawImage(e,0,0,e.width,e.height)):t=e,2048<t.width||2048<t.height?t.toDataURL('image/jpeg',0.6):t.toDataURL('image/png')}if(void 0!==e.textures[this.uuid])return e.textures[this.uuid];var r={metadata:{version:4.4,type:'Texture',generator:'Texture.toJSON'},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY};if(void 0!==this.image){var a=this.image;void 0===a.uuid&&(a.uuid=Da.generateUUID()),void 0===e.images[a.uuid]&&(e.images[a.uuid]={uuid:a.uuid,url:t(a)}),r.image=a.uuid}return e.textures[this.uuid]=r,r},dispose:function(){this.dispatchEvent({type:'dispose'})},transformUv:function(e){if(this.mapping===Pr){if(e.multiply(this.repeat),e.add(this.offset),0>e.x||1<e.x)switch(this.wrapS){case Fr:e.x-=Lt(e.x);break;case Br:e.x=0>e.x?0:1;break;case Or:1===xt(Lt(e.x)%2)?e.x=ht(e.x)-e.x:e.x-=Lt(e.x);}if(0>e.y||1<e.y)switch(this.wrapT){case Fr:e.y-=Lt(e.y);break;case Br:e.y=0>e.y?0:1;break;case Or:1===xt(Lt(e.y)%2)?e.y=ht(e.y)-e.y:e.y-=Lt(e.y);}this.flipY&&(e.y=1-e.y)}}},Object.assign(i.prototype,a.prototype),s.prototype=Object.create(i.prototype),s.prototype.constructor=s,s.prototype.isCubeTexture=!0,Object.defineProperty(s.prototype,'images',{get:function(){return this.image},set:function(e){this.image=e}});var Na=new i,Ia=new s,za=[],Fa=[];B.prototype.setValue=function(e,t){for(var r=this.seq,a=0,i=r.length,n;a!==i;++a)n=r[a],n.setValue(e,t[n.id])};var Ba=/([\w\d_]+)(\])?(\[|\.)?/g;V.prototype.setValue=function(e,t,r){var a=this.map[t];a!==void 0&&a.setValue(e,r,this.renderer)},V.prototype.set=function(e,t,r){var a=this.map[r];a!==void 0&&a.setValue(e,t[r],this.renderer)},V.prototype.setOptional=function(e,t,r){var a=t[r];a!==void 0&&this.setValue(e,r,a)},V.upload=function(e,t,r,a){for(var o=0,i=t.length;o!==i;++o){var n=t[o],s=r[n.id];!1!==s.needsUpdate&&n.setValue(e,s.value,a)}},V.seqWithValue=function(e,t){for(var a=[],r=0,i=e.length,n;r!==i;++r)n=e[r],n.id in t&&a.push(n);return a};var Oa={merge:function(e){for(var t={},r=0,a;r<e.length;r++)for(var i in a=this.clone(e[r]),a)t[i]=a[i];return t},clone:function(e){var t={};for(var r in e)for(var a in t[r]={},e[r]){var i=e[r][a];t[r][a]=i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture)?i.clone():Array.isArray(i)?i.slice():i}return t}},Ga={alphamap_fragment:'#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n',alphamap_pars_fragment:'#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif\n',alphatest_fragment:'#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n',aomap_fragment:'#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif\n',aomap_pars_fragment:'#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif',begin_vertex:'\nvec3 transformed = vec3( position );\n',beginnormal_vertex:'\nvec3 objectNormal = vec3( normal );\n',bsdfs:'float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t\tif( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t\treturn distanceFalloff * maxDistanceCutoffFactor;\n#else\n\t\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n\t\t}\n\t\treturn 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 ltcTextureCoords( const in GeometricContext geometry, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = (LUT_SIZE - 1.0)/LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5/LUT_SIZE;\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 P = geometry.position;\n\tfloat theta = acos( dot( N, V ) );\n\tvec2 uv = vec2(\n\t\tsqrt( saturate( roughness ) ),\n\t\tsaturate( theta / ( 0.5 * PI ) ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nvoid clipQuadToHorizon( inout vec3 L[5], out int n ) {\n\tint config = 0;\n\tif ( L[0].z > 0.0 ) config += 1;\n\tif ( L[1].z > 0.0 ) config += 2;\n\tif ( L[2].z > 0.0 ) config += 4;\n\tif ( L[3].z > 0.0 ) config += 8;\n\tn = 0;\n\tif ( config == 0 ) {\n\t} else if ( config == 1 ) {\n\t\tn = 3;\n\t\tL[1] = -L[1].z * L[0] + L[0].z * L[1];\n\t\tL[2] = -L[3].z * L[0] + L[0].z * L[3];\n\t} else if ( config == 2 ) {\n\t\tn = 3;\n\t\tL[0] = -L[0].z * L[1] + L[1].z * L[0];\n\t\tL[2] = -L[2].z * L[1] + L[1].z * L[2];\n\t} else if ( config == 3 ) {\n\t\tn = 4;\n\t\tL[2] = -L[2].z * L[1] + L[1].z * L[2];\n\t\tL[3] = -L[3].z * L[0] + L[0].z * L[3];\n\t} else if ( config == 4 ) {\n\t\tn = 3;\n\t\tL[0] = -L[3].z * L[2] + L[2].z * L[3];\n\t\tL[1] = -L[1].z * L[2] + L[2].z * L[1];\n\t} else if ( config == 5 ) {\n\t\tn = 0;\n\t} else if ( config == 6 ) {\n\t\tn = 4;\n\t\tL[0] = -L[0].z * L[1] + L[1].z * L[0];\n\t\tL[3] = -L[3].z * L[2] + L[2].z * L[3];\n\t} else if ( config == 7 ) {\n\t\tn = 5;\n\t\tL[4] = -L[3].z * L[0] + L[0].z * L[3];\n\t\tL[3] = -L[3].z * L[2] + L[2].z * L[3];\n\t} else if ( config == 8 ) {\n\t\tn = 3;\n\t\tL[0] = -L[0].z * L[3] + L[3].z * L[0];\n\t\tL[1] = -L[2].z * L[3] + L[3].z * L[2];\n\t\tL[2] =  L[3];\n\t} else if ( config == 9 ) {\n\t\tn = 4;\n\t\tL[1] = -L[1].z * L[0] + L[0].z * L[1];\n\t\tL[2] = -L[2].z * L[3] + L[3].z * L[2];\n\t} else if ( config == 10 ) {\n\t\tn = 0;\n\t} else if ( config == 11 ) {\n\t\tn = 5;\n\t\tL[4] = L[3];\n\t\tL[3] = -L[2].z * L[3] + L[3].z * L[2];\n\t\tL[2] = -L[2].z * L[1] + L[1].z * L[2];\n\t} else if ( config == 12 ) {\n\t\tn = 4;\n\t\tL[1] = -L[1].z * L[2] + L[2].z * L[1];\n\t\tL[0] = -L[0].z * L[3] + L[3].z * L[0];\n\t} else if ( config == 13 ) {\n\t\tn = 5;\n\t\tL[4] = L[3];\n\t\tL[3] = L[2];\n\t\tL[2] = -L[1].z * L[2] + L[2].z * L[1];\n\t\tL[1] = -L[1].z * L[0] + L[0].z * L[1];\n\t} else if ( config == 14 ) {\n\t\tn = 5;\n\t\tL[4] = -L[0].z * L[3] + L[3].z * L[0];\n\t\tL[0] = -L[0].z * L[1] + L[1].z * L[0];\n\t} else if ( config == 15 ) {\n\t\tn = 4;\n\t}\n\tif ( n == 3 )\n\t\tL[3] = L[0];\n\tif ( n == 4 )\n\t\tL[4] = L[0];\n}\nfloat integrateLtcBrdfOverRectEdge( vec3 v1, vec3 v2 ) {\n\tfloat cosTheta = dot( v1, v2 );\n\tfloat theta = acos( cosTheta );\n\tfloat res = cross( v1, v2 ).z * ( ( theta > 0.001 ) ? theta / sin( theta ) : 1.0 );\n\treturn res;\n}\nvoid initRectPoints( const in vec3 pos, const in vec3 halfWidth, const in vec3 halfHeight, out vec3 rectPoints[4] ) {\n\trectPoints[0] = pos - halfWidth - halfHeight;\n\trectPoints[1] = pos + halfWidth - halfHeight;\n\trectPoints[2] = pos + halfWidth + halfHeight;\n\trectPoints[3] = pos - halfWidth + halfHeight;\n}\nvec3 integrateLtcBrdfOverRect( const in GeometricContext geometry, const in mat3 brdfMat, const in vec3 rectPoints[4] ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 P = geometry.position;\n\tvec3 T1, T2;\n\tT1 = normalize(V - N * dot( V, N ));\n\tT2 = - cross( N, T1 );\n\tmat3 brdfWrtSurface = brdfMat * transpose( mat3( T1, T2, N ) );\n\tvec3 clippedRect[5];\n\tclippedRect[0] = brdfWrtSurface * ( rectPoints[0] - P );\n\tclippedRect[1] = brdfWrtSurface * ( rectPoints[1] - P );\n\tclippedRect[2] = brdfWrtSurface * ( rectPoints[2] - P );\n\tclippedRect[3] = brdfWrtSurface * ( rectPoints[3] - P );\n\tint n;\n\tclipQuadToHorizon(clippedRect, n);\n\tif ( n == 0 )\n\t\treturn vec3( 0, 0, 0 );\n\tclippedRect[0] = normalize( clippedRect[0] );\n\tclippedRect[1] = normalize( clippedRect[1] );\n\tclippedRect[2] = normalize( clippedRect[2] );\n\tclippedRect[3] = normalize( clippedRect[3] );\n\tclippedRect[4] = normalize( clippedRect[4] );\n\tfloat sum = 0.0;\n\tsum += integrateLtcBrdfOverRectEdge( clippedRect[0], clippedRect[1] );\n\tsum += integrateLtcBrdfOverRectEdge( clippedRect[1], clippedRect[2] );\n\tsum += integrateLtcBrdfOverRectEdge( clippedRect[2], clippedRect[3] );\n\tif (n >= 4)\n\t\tsum += integrateLtcBrdfOverRectEdge( clippedRect[3], clippedRect[4] );\n\tif (n == 5)\n\t\tsum += integrateLtcBrdfOverRectEdge( clippedRect[4], clippedRect[0] );\n\tsum = max( 0.0, sum );\n\tvec3 Lo_i = vec3( sum, sum, sum );\n\treturn Lo_i;\n}\nvec3 Rect_Area_Light_Specular_Reflectance(\n\t\tconst in GeometricContext geometry,\n\t\tconst in vec3 lightPos, const in vec3 lightHalfWidth, const in vec3 lightHalfHeight,\n\t\tconst in float roughness,\n\t\tconst in sampler2D ltcMat, const in sampler2D ltcMag ) {\n\tvec3 rectPoints[4];\n\tinitRectPoints( lightPos, lightHalfWidth, lightHalfHeight, rectPoints );\n\tvec2 uv = ltcTextureCoords( geometry, roughness );\n\tvec4 brdfLtcApproxParams, t;\n\tbrdfLtcApproxParams = texture2D( ltcMat, uv );\n\tt = texture2D( ltcMat, uv );\n\tfloat brdfLtcScalar = texture2D( ltcMag, uv ).a;\n\tmat3 brdfLtcApproxMat = mat3(\n\t\tvec3(   1,   0, t.y ),\n\t\tvec3(   0, t.z,   0 ),\n\t\tvec3( t.w,   0, t.x )\n\t);\n\tvec3 specularReflectance = integrateLtcBrdfOverRect( geometry, brdfLtcApproxMat, rectPoints );\n\tspecularReflectance *= brdfLtcScalar;\n\treturn specularReflectance;\n}\nvec3 Rect_Area_Light_Diffuse_Reflectance(\n\t\tconst in GeometricContext geometry,\n\t\tconst in vec3 lightPos, const in vec3 lightHalfWidth, const in vec3 lightHalfHeight ) {\n\tvec3 rectPoints[4];\n\tinitRectPoints( lightPos, lightHalfWidth, lightHalfHeight, rectPoints );\n\tmat3 diffuseBrdfMat = mat3(1);\n\tvec3 diffuseReflectance = integrateLtcBrdfOverRect( geometry, diffuseBrdfMat, rectPoints );\n\treturn diffuseReflectance;\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n',bumpmap_pars_fragment:'#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif\n',clipping_planes_fragment:'#if NUM_CLIPPING_PLANES > 0\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\n\t\tvec4 plane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t\t\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\n\t\t\tvec4 plane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\tif ( clipped ) discard;\n\t\n\t#endif\n#endif\n',clipping_planes_pars_fragment:'#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif\n',clipping_planes_pars_vertex:'#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvarying vec3 vViewPosition;\n#endif\n',clipping_planes_vertex:'#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n',color_fragment:'#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif',color_pars_fragment:'#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif\n',color_pars_vertex:'#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif',color_vertex:'#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif',common:'#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transpose( const in mat3 v ) {\n\tmat3 tmp;\n\ttmp[0] = vec3(v[0].x, v[1].x, v[2].x);\n\ttmp[1] = vec3(v[0].y, v[1].y, v[2].y);\n\ttmp[2] = vec3(v[0].z, v[1].z, v[2].z);\n\treturn tmp;\n}\n',cube_uv_reflection_fragment:'#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif\n',defaultnormal_vertex:'#ifdef FLIP_SIDED\n\tobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;\n',displacementmap_pars_vertex:'#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif\n',displacementmap_vertex:'#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n',emissivemap_fragment:'#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n',emissivemap_pars_fragment:'#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif\n',encodings_fragment:'  gl_FragColor = linearToOutputTexel( gl_FragColor );\n',encodings_pars_fragment:'\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM            = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat D      = max( maxRange / maxRGB, 1.0 );\n\tD            = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract(Le);\n\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n\treturn vec4( max(vRGB, 0.0), 1.0 );\n}\n',envmap_fragment:'#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif\n',envmap_pars_fragment:'#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n\tuniform float reflectivity;\n\tuniform float envMapIntensity;\n#endif\n#ifdef USE_ENVMAP\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n\t\tvarying vec3 vWorldPosition;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif\n',envmap_pars_vertex:'#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif\n',envmap_vertex:'#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif\n',fog_vertex:'\n#ifdef USE_FOG\nfogDepth = -mvPosition.z;\n#endif',fog_pars_vertex:'#ifdef USE_FOG\n  varying float fogDepth;\n#endif\n',fog_fragment:'#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n',fog_pars_fragment:'#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif\n',gradientmap_pars_fragment:'#ifdef TOON\n\tuniform sampler2D gradientMap;\n\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\t\tfloat dotNL = dot( normal, lightDirection );\n\t\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t\t#ifdef USE_GRADIENTMAP\n\t\t\treturn texture2D( gradientMap, coord ).rgb;\n\t\t#else\n\t\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t\t#endif\n\t}\n#endif\n',lightmap_fragment:'#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n',lightmap_pars_fragment:'#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif',lights_lambert_vertex:'vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif\n',lights_pars:'uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltcMat;\tuniform sampler2D ltcMag;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = saturate( reflectVec.y * 0.5 + 0.5 );\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif\n',lights_phong_fragment:'BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n',lights_phong_pars_fragment:'varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_BlinnPhong( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 matDiffColor = material.diffuseColor;\n\t\tvec3 matSpecColor = material.specularColor;\n\t\tvec3 lightColor   = rectAreaLight.color;\n\t\tfloat roughness = BlinnExponentToGGXRoughness( material.specularShininess );\n\t\tvec3 spec = Rect_Area_Light_Specular_Reflectance(\n\t\t\t\tgeometry,\n\t\t\t\trectAreaLight.position, rectAreaLight.halfWidth, rectAreaLight.halfHeight,\n\t\t\t\troughness,\n\t\t\t\tltcMat, ltcMag );\n\t\tvec3 diff = Rect_Area_Light_Diffuse_Reflectance(\n\t\t\t\tgeometry,\n\t\t\t\trectAreaLight.position, rectAreaLight.halfWidth, rectAreaLight.halfHeight );\n\t\treflectedLight.directSpecular += lightColor * matSpecColor * spec / PI2;\n\t\treflectedLight.directDiffuse  += lightColor * matDiffColor * diff / PI2;\n\t}\n#endif\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifdef TOON\n\t\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#else\n\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\t\tvec3 irradiance = dotNL * directLight.color;\n\t#endif\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)\n',lights_physical_fragment:'PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.clearCoat = saturate( clearCoat );\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n',lights_physical_pars_fragment:'struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\t#ifndef STANDARD\n\t\tfloat clearCoat;\n\t\tfloat clearCoatRoughness;\n\t#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 matDiffColor = material.diffuseColor;\n\t\tvec3 matSpecColor = material.specularColor;\n\t\tvec3 lightColor   = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 spec = Rect_Area_Light_Specular_Reflectance(\n\t\t\t\tgeometry,\n\t\t\t\trectAreaLight.position, rectAreaLight.halfWidth, rectAreaLight.halfHeight,\n\t\t\t\troughness,\n\t\t\t\tltcMat, ltcMag );\n\t\tvec3 diff = Rect_Area_Light_Diffuse_Reflectance(\n\t\t\t\tgeometry,\n\t\t\t\trectAreaLight.position, rectAreaLight.halfWidth, rectAreaLight.halfHeight );\n\t\treflectedLight.directSpecular += lightColor * matSpecColor * spec;\n\t\treflectedLight.directDiffuse  += lightColor * matDiffColor * diff;\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifndef STANDARD\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#ifndef STANDARD\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifndef STANDARD\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\tfloat dotNL = dotNV;\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\t#ifndef STANDARD\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n',lights_template:'\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\n\t#endif\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\n\t#ifndef STANDARD\n\t\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\n\t#else\n\t\tvec3 clearCoatRadiance = vec3( 0.0 );\n\t#endif\n\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif\n',logdepthbuf_fragment:'#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n#endif',logdepthbuf_pars_fragment:'#ifdef USE_LOGDEPTHBUF\n\tuniform float logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n#endif\n',logdepthbuf_pars_vertex:'#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n\tuniform float logDepthBufFC;\n#endif',logdepthbuf_vertex:'#ifdef USE_LOGDEPTHBUF\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\t#endif\n#endif\n',map_fragment:'#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif\n',map_pars_fragment:'#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n',map_particle_fragment:'#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n',map_particle_pars_fragment:'#ifdef USE_MAP\n\tuniform vec4 offsetRepeat;\n\tuniform sampler2D map;\n#endif\n',metalnessmap_fragment:'float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.r;\n#endif\n',metalnessmap_pars_fragment:'#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif',morphnormal_vertex:'#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n',morphtarget_pars_vertex:'#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif',morphtarget_vertex:'#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif\n',normal_flip:'#ifdef DOUBLE_SIDED\n\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n#else\n\tfloat flipNormal = 1.0;\n#endif\n',normal_fragment:'#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal ) * flipNormal;\n#endif\n#ifdef USE_NORMALMAP\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n',normalmap_pars_fragment:'#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif\n',packing:'vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 1.0 - 2.0 * rgb.xyz;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n',premultiplied_alpha_fragment:'#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif\n',project_vertex:'#ifdef USE_SKINNING\n\tvec4 mvPosition = modelViewMatrix * skinned;\n#else\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;\n',roughnessmap_fragment:'float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.r;\n#endif\n',roughnessmap_pars_fragment:'#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif',shadowmap_pars_fragment:'#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\treturn (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn 1.0;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif\n',shadowmap_pars_vertex:'#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n#endif\n',shadowmap_vertex:'#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif\n',shadowmask_pars_fragment:'float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}\n',skinbase_vertex:'#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif',skinning_pars_vertex:'#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureWidth;\n\t\tuniform int boneTextureHeight;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif\n',skinning_vertex:'#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n#endif\n',skinnormal_vertex:'#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n',specularmap_fragment:'float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif',specularmap_pars_fragment:'#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif',tonemapping_fragment:'#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n',tonemapping_pars_fragment:'#define saturate(a) clamp( a, 0.0, 1.0 )\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n',uv_pars_fragment:'#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif',uv_pars_vertex:'#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n#endif\n',uv_vertex:'#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif',uv2_pars_fragment:'#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif',uv2_pars_vertex:'#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif',uv2_vertex:'#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif',worldpos_vertex:'#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\t#ifdef USE_SKINNING\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\t#else\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n\t#endif\n#endif\n',cube_frag:'uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n\tgl_FragColor.a *= opacity;\n}\n',cube_vert:'varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n',depth_frag:'#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}\n',depth_vert:'#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n',distanceRGBA_frag:'uniform vec3 lightPos;\nvarying vec4 vWorldPosition;\n#include <common>\n#include <packing>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\n}\n',distanceRGBA_vert:'varying vec4 vWorldPosition;\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <skinbase_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition;\n}\n',equirect_frag:'uniform sampler2D tEquirect;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldPosition );\n\tvec2 sampleUV;\n\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n}\n',equirect_vert:'varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n',linedashed_frag:'uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n',linedashed_vert:'uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}\n',meshbasic_frag:'uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <normal_flip>\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n',meshbasic_vert:'#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}\n',meshlambert_frag:'uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <normal_flip>\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n',meshlambert_vert:'#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n',meshphong_frag:'#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_flip>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n',meshphong_vert:'#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n',meshphysical_frag:'#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_flip>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n',meshphysical_vert:'#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n',normal_frag:'#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\t#include <normal_flip>\n\t#include <normal_fragment>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}\n',normal_vert:'#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}\n',points_frag:'uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n',points_vert:'uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n',shadow_frag:'uniform float opacity;\n#include <common>\n#include <packing>\n#include <bsdfs>\n#include <lights_pars>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0 - getShadowMask() ) );\n}\n',shadow_vert:'#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n}\n'};H.prototype={constructor:H,isVector4:!0,set:function(e,t,r,a){return this.x=e,this.y=t,this.z=r,this.w=a,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this.w=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error('index is out of range: '+e);}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error('index is out of range: '+e);}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0===e.w?1:e.w,this},add:function(e,t){return void 0===t?(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this):(console.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.'),this.addVectors(e,t))},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this},sub:function(e,t){return void 0===t?(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this):(console.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.'),this.subVectors(e,t))},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return isFinite(e)?(this.x*=e,this.y*=e,this.z*=e,this.w*=e):(this.x=0,this.y=0,this.z=0,this.w=0),this},applyMatrix4:function(t){var r=this.x,a=this.y,i=this.z,n=this.w,o=t.elements;return this.x=o[0]*r+o[4]*a+o[8]*i+o[12]*n,this.y=o[1]*r+o[5]*a+o[9]*i+o[13]*n,this.z=o[2]*r+o[6]*a+o[10]*i+o[14]*n,this.w=o[3]*r+o[7]*a+o[11]*i+o[15]*n,this},divideScalar:function(e){return this.multiplyScalar(1/e)},setAxisAngleFromQuaternion:function(e){this.w=2*gt(e.w);var t=vt(1-e.w*e.w);return 1e-4>t?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var t=0.01,r=0.1,a=e.elements,i=a[0],n=a[4],o=a[8],l=a[1],d=a[5],c=a[9],p=a[2],u=a[6],m=a[10],f,g,h,_;if(xt(n-l)<t&&xt(o-p)<t&&xt(c-u)<t){if(xt(n+l)<r&&xt(o+p)<r&&xt(c+u)<r&&xt(i+d+m-3)<r)return this.set(1,0,0,0),this;f=Pt;var x=(i+1)/2,v=(d+1)/2,y=(m+1)/2,E=(n+l)/4,M=(o+p)/4,S=(c+u)/4;return x>v&&x>y?x<t?(g=0,h=0.707106781,_=0.707106781):(g=vt(x),h=E/g,_=M/g):v>y?v<t?(g=0.707106781,h=0,_=0.707106781):(h=vt(v),g=E/h,_=S/h):y<t?(g=0.707106781,h=0.707106781,_=0):(_=vt(y),g=M/_,h=S/_),this.set(g,h,_,f),this}var b=vt((u-c)*(u-c)+(o-p)*(o-p)+(l-n)*(l-n));return 1e-3>xt(b)&&(b=1),this.x=(u-c)/b,this.y=(o-p)/b,this.z=(l-n)/b,this.w=gt((i+d+m-1)/2),this},min:function(e){return this.x=Rt(this.x,e.x),this.y=Rt(this.y,e.y),this.z=Rt(this.z,e.z),this.w=Rt(this.w,e.w),this},max:function(e){return this.x=At(this.x,e.x),this.y=At(this.y,e.y),this.z=At(this.z,e.z),this.w=At(this.w,e.w),this},clamp:function(e,t){return this.x=At(e.x,Rt(t.x,this.x)),this.y=At(e.y,Rt(t.y,this.y)),this.z=At(e.z,Rt(t.z,this.z)),this.w=At(e.w,Rt(t.w,this.w)),this},clampScalar:function(){var e,t;return function(r,a){return void 0===e&&(e=new H,t=new H),e.set(r,r,r,r),t.set(a,a,a,a),this.clamp(e,t)}}(),floor:function(){return this.x=Lt(this.x),this.y=Lt(this.y),this.z=Lt(this.z),this.w=Lt(this.w),this},ceil:function(){return this.x=ht(this.x),this.y=ht(this.y),this.z=ht(this.z),this.w=ht(this.w),this},round:function(){return this.x=St(this.x),this.y=St(this.y),this.z=St(this.z),this.w=St(this.w),this},roundToZero:function(){return this.x=0>this.x?ht(this.x):Lt(this.x),this.y=0>this.y?ht(this.y):Lt(this.y),this.z=0>this.z?ht(this.z):Lt(this.z),this.w=0>this.w?ht(this.w):Lt(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return vt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return xt(this.x)+xt(this.y)+xt(this.z)+xt(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){return this.multiplyScalar(e/this.length())},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},lerpVectors:function(e,t,r){return this.subVectors(t,e).multiplyScalar(r).add(e)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e},fromBufferAttribute:function(e,t,r){return void 0!==r&&console.warn('THREE.Vector4: offset has been removed from .fromBufferAttribute().'),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}},k.prototype={constructor:k,isColor:!0,r:1,g:1,b:1,set:function(e){return e&&e.isColor?this.copy(e):'number'===typeof e?this.setHex(e):'string'===typeof e&&this.setStyle(e),this},setScalar:function(e){return this.r=e,this.g=e,this.b=e,this},setHex:function(e){return e=Lt(e),this.r=(255&e>>16)/255,this.g=(255&e>>8)/255,this.b=(255&e)/255,this},setRGB:function(e,t,r){return this.r=e,this.g=t,this.b=r,this},setHSL:function(){function e(e,r,a){return 0>a&&(a+=1),1<a&&(a-=1),a<1/6?e+6*(r-e)*a:a<1/2?r:a<2/3?e+6*(r-e)*(2/3-a):e}return function(t,r,a){if(t=Da.euclideanModulo(t,1),r=Da.clamp(r,0,1),a=Da.clamp(a,0,1),0===r)this.r=this.g=this.b=a;else{var i=0.5>=a?a*(1+r):a+r-a*r,n=2*a-i;this.r=e(n,i,t+1/3),this.g=e(n,i,t),this.b=e(n,i,t-1/3)}return this}}(),setStyle:function(e){function t(t){void 0===t||1>parseFloat(t)&&console.warn('THREE.Color: Alpha component of '+e+' will be ignored.')}var r;if(r=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)){var a=r[1],i=r[2],n;switch(a){case'rgb':case'rgba':if(n=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i))return this.r=Rt(255,parseInt(n[1],10))/255,this.g=Rt(255,parseInt(n[2],10))/255,this.b=Rt(255,parseInt(n[3],10))/255,t(n[5]),this;if(n=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i))return this.r=Rt(100,parseInt(n[1],10))/100,this.g=Rt(100,parseInt(n[2],10))/100,this.b=Rt(100,parseInt(n[3],10))/100,t(n[5]),this;break;case'hsl':case'hsla':if(n=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i)){var o=parseFloat(n[1])/360,d=parseInt(n[2],10)/100,s=parseInt(n[3],10)/100;return t(n[5]),this.setHSL(o,d,s)}}}else if(r=/^\#([A-Fa-f0-9]+)$/.exec(e)){var l=r[1],c=l.length;if(3===c)return this.r=parseInt(l.charAt(0)+l.charAt(0),16)/255,this.g=parseInt(l.charAt(1)+l.charAt(1),16)/255,this.b=parseInt(l.charAt(2)+l.charAt(2),16)/255,this;if(6===c)return this.r=parseInt(l.charAt(0)+l.charAt(1),16)/255,this.g=parseInt(l.charAt(2)+l.charAt(3),16)/255,this.b=parseInt(l.charAt(4)+l.charAt(5),16)/255,this}if(e&&0<e.length){var l=Va[e];void 0===l?console.warn('THREE.Color: Unknown color '+e):this.setHex(l)}return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e,t){return void 0===t&&(t=2),this.r=Mt(e.r,t),this.g=Mt(e.g,t),this.b=Mt(e.b,t),this},copyLinearToGamma:function(e,t){void 0===t&&(t=2);var r=0<t?1/t:1;return this.r=Mt(e.r,r),this.g=Mt(e.g,r),this.b=Mt(e.b,r),this},convertGammaToLinear:function(){var e=this.r,t=this.g,r=this.b;return this.r=e*e,this.g=t*t,this.b=r*r,this},convertLinearToGamma:function(){return this.r=vt(this.r),this.g=vt(this.g),this.b=vt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return('000000'+this.getHex().toString(16)).slice(-6)},getHSL:function(e){var t=e||{h:0,s:0,l:0},a=this.r,r=this.g,i=this.b,n=At(a,r,i),o=Rt(a,r,i),s=(o+n)/2,l,d;if(o===n)l=0,d=0;else{var c=n-o;d=0.5>=s?c/(n+o):c/(2-n-o),n===a?l=(r-i)/c+(r<i?6:0):n===r?l=(i-a)/c+2:n===i?l=(a-r)/c+4:void 0,l/=6}return t.h=l,t.s=d,t.l=s,t},getStyle:function(){return'rgb('+(0|255*this.r)+','+(0|255*this.g)+','+(0|255*this.b)+')'},offsetHSL:function(e,t,r){var a=this.getHSL();return a.h+=e,a.s+=t,a.l+=r,this.setHSL(a.h,a.s,a.l),this},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},sub:function(e){return this.r=At(0,this.r-e.r),this.g=At(0,this.g-e.g),this.b=At(0,this.b-e.b),this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e,t){return void 0===t&&(t=0),this.r=e[t],this.g=e[t+1],this.b=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e},toJSON:function(){return this.getHex()}};var Va={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Ha={common:{diffuse:{value:new k(15658734)},opacity:{value:1},map:{value:null},offsetRepeat:{value:new H(0,0,1,1)},specularMap:{value:null},alphaMap:{value:null},envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:0.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new o(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:2.5e-4},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new k(16777215)}},lights:{ambientLightColor:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new k(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},offsetRepeat:{value:new H(0,0,1,1)}}},ka={basic:{uniforms:Oa.merge([Ha.common,Ha.aomap,Ha.lightmap,Ha.fog]),vertexShader:Ga.meshbasic_vert,fragmentShader:Ga.meshbasic_frag},lambert:{uniforms:Oa.merge([Ha.common,Ha.aomap,Ha.lightmap,Ha.emissivemap,Ha.fog,Ha.lights,{emissive:{value:new k(0)}}]),vertexShader:Ga.meshlambert_vert,fragmentShader:Ga.meshlambert_frag},phong:{uniforms:Oa.merge([Ha.common,Ha.aomap,Ha.lightmap,Ha.emissivemap,Ha.bumpmap,Ha.normalmap,Ha.displacementmap,Ha.gradientmap,Ha.fog,Ha.lights,{emissive:{value:new k(0)},specular:{value:new k(1118481)},shininess:{value:30}}]),vertexShader:Ga.meshphong_vert,fragmentShader:Ga.meshphong_frag},standard:{uniforms:Oa.merge([Ha.common,Ha.aomap,Ha.lightmap,Ha.emissivemap,Ha.bumpmap,Ha.normalmap,Ha.displacementmap,Ha.roughnessmap,Ha.metalnessmap,Ha.fog,Ha.lights,{emissive:{value:new k(0)},roughness:{value:0.5},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ga.meshphysical_vert,fragmentShader:Ga.meshphysical_frag},points:{uniforms:Oa.merge([Ha.points,Ha.fog]),vertexShader:Ga.points_vert,fragmentShader:Ga.points_frag},dashed:{uniforms:Oa.merge([Ha.common,Ha.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ga.linedashed_vert,fragmentShader:Ga.linedashed_frag},depth:{uniforms:Oa.merge([Ha.common,Ha.displacementmap]),vertexShader:Ga.depth_vert,fragmentShader:Ga.depth_frag},normal:{uniforms:Oa.merge([Ha.common,Ha.bumpmap,Ha.normalmap,Ha.displacementmap,{opacity:{value:1}}]),vertexShader:Ga.normal_vert,fragmentShader:Ga.normal_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Ga.cube_vert,fragmentShader:Ga.cube_frag},equirect:{uniforms:{tEquirect:{value:null},tFlip:{value:-1}},vertexShader:Ga.equirect_vert,fragmentShader:Ga.equirect_frag},distanceRGBA:{uniforms:{lightPos:{value:new n}},vertexShader:Ga.distanceRGBA_vert,fragmentShader:Ga.distanceRGBA_frag}};ka.physical={uniforms:Oa.merge([ka.standard.uniforms,{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:Ga.meshphysical_vert,fragmentShader:Ga.meshphysical_frag},W.prototype={constructor:W,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,r=e.length;t<r;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new o;return function(t,r){var a=e.copy(r).multiplyScalar(0.5);return this.min.copy(t).sub(a),this.max.copy(t).add(a),this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=+Infinity,this.max.x=this.max.y=-Infinity,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(e){var t=e||new o;return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(0.5)},getSize:function(e){var t=e||new o;return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y},getParameter:function(e,t){var r=t||new o;return r.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y?!1:!0},clampPoint:function(e,t){var r=t||new o;return r.copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new o;return function(t){var r=e.copy(t).clamp(this.min,this.max);return r.sub(t).length()}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}},j.prototype={constructor:j,isWebGLRenderTarget:!0,setSize:function(e,t){(this.width!==e||this.height!==t)&&(this.width=e,this.height=t,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.width=e.width,this.height=e.height,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this},dispose:function(){this.dispatchEvent({type:'dispose'})}},Object.assign(j.prototype,a.prototype);var Wa=0;q.prototype={constructor:q,isMaterial:!0,get needsUpdate(){return this._needsUpdate},set needsUpdate(e){!0===e&&this.update(),this._needsUpdate=e},setValues:function(e){if(void 0!==e)for(var t in e){var r=e[t];if(void 0===r){console.warn('THREE.Material: \''+t+'\' parameter is undefined.');continue}var a=this[t];if(void 0===a){console.warn('THREE.'+this.type+': \''+t+'\' is not a property of this material.');continue}a&&a.isColor?a.set(r):a&&a.isVector3&&r&&r.isVector3?a.copy(r):'overdraw'===t?this[t]=+r:this[t]=r}},toJSON:function(e){function t(e){var t=[];for(var r in e){var a=e[r];delete a.metadata,t.push(a)}return t}var r=void 0===e;r&&(e={textures:{},images:{}});var a={metadata:{version:4.4,type:'Material',generator:'Material.toJSON'}};if(a.uuid=this.uuid,a.type=this.type,''!==this.name&&(a.name=this.name),this.color&&this.color.isColor&&(a.color=this.color.getHex()),void 0!==this.roughness&&(a.roughness=this.roughness),void 0!==this.metalness&&(a.metalness=this.metalness),this.emissive&&this.emissive.isColor&&(a.emissive=this.emissive.getHex()),this.specular&&this.specular.isColor&&(a.specular=this.specular.getHex()),void 0!==this.shininess&&(a.shininess=this.shininess),void 0!==this.clearCoat&&(a.clearCoat=this.clearCoat),void 0!==this.clearCoatRoughness&&(a.clearCoatRoughness=this.clearCoatRoughness),this.map&&this.map.isTexture&&(a.map=this.map.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(a.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(a.lightMap=this.lightMap.toJSON(e).uuid),this.bumpMap&&this.bumpMap.isTexture&&(a.bumpMap=this.bumpMap.toJSON(e).uuid,a.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(a.normalMap=this.normalMap.toJSON(e).uuid,a.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(a.displacementMap=this.displacementMap.toJSON(e).uuid,a.displacementScale=this.displacementScale,a.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(a.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(a.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(a.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(a.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(a.envMap=this.envMap.toJSON(e).uuid,a.reflectivity=this.reflectivity),this.gradientMap&&this.gradientMap.isTexture&&(a.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.size&&(a.size=this.size),void 0!==this.sizeAttenuation&&(a.sizeAttenuation=this.sizeAttenuation),this.blending!==Yt&&(a.blending=this.blending),this.shading!==kt&&(a.shading=this.shading),this.side!==Ot&&(a.side=this.side),this.vertexColors!==Wt&&(a.vertexColors=this.vertexColors),1>this.opacity&&(a.opacity=this.opacity),!0===this.transparent&&(a.transparent=this.transparent),a.depthFunc=this.depthFunc,a.depthTest=this.depthTest,a.depthWrite=this.depthWrite,0<this.alphaTest&&(a.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(a.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(a.wireframe=this.wireframe),1<this.wireframeLinewidth&&(a.wireframeLinewidth=this.wireframeLinewidth),'round'!==this.wireframeLinecap&&(a.wireframeLinecap=this.wireframeLinecap),'round'!==this.wireframeLinejoin&&(a.wireframeLinejoin=this.wireframeLinejoin),a.skinning=this.skinning,a.morphTargets=this.morphTargets,r){var i=t(e.textures),n=t(e.images);0<i.length&&(a.textures=i),0<n.length&&(a.images=n)}return a},clone:function(){return new this.constructor().copy(this)},copy:function(e){this.name=e.name,this.fog=e.fog,this.lights=e.lights,this.blending=e.blending,this.side=e.side,this.shading=e.shading,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.alphaTest=e.alphaTest,this.premultipliedAlpha=e.premultipliedAlpha,this.overdraw=e.overdraw,this.visible=e.visible,this.clipShadows=e.clipShadows,this.clipIntersection=e.clipIntersection;var t=e.clippingPlanes,r=null;if(null!==t){var a=t.length;r=Array(a);for(var n=0;n!==a;++n)r[n]=t[n].clone()}return this.clippingPlanes=r,this},update:function(){this.dispatchEvent({type:'update'})},dispose:function(){this.dispatchEvent({type:'dispose'})}},Object.assign(q.prototype,a.prototype),Z.prototype=Object.create(q.prototype),Z.prototype.constructor=Z,Z.prototype.isShaderMaterial=!0,Z.prototype.copy=function(e){return q.prototype.copy.call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Oa.clone(e.uniforms),this.defines=e.defines,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=e.extensions,this},Z.prototype.toJSON=function(e){var t=q.prototype.toJSON.call(this,e);return t.uniforms=this.uniforms,t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t},Q.prototype=Object.create(q.prototype),Q.prototype.constructor=Q,Q.prototype.isMeshDepthMaterial=!0,Q.prototype.copy=function(e){return q.prototype.copy.call(this,e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this},J.prototype={constructor:J,isBox3:!0,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromArray:function(e){for(var t=+Infinity,r=+Infinity,a=+Infinity,n=-Infinity,o=-Infinity,s=-Infinity,d=0,i=e.length;d<i;d+=3){var l=e[d],c=e[d+1],p=e[d+2];l<t&&(t=l),c<r&&(r=c),p<a&&(a=p),l>n&&(n=l),c>o&&(o=c),p>s&&(s=p)}return this.min.set(t,r,a),this.max.set(n,o,s),this},setFromBufferAttribute:function(e){for(var t=+Infinity,r=+Infinity,a=+Infinity,n=-Infinity,o=-Infinity,s=-Infinity,d=0,i=e.count;d<i;d++){var l=e.getX(d),c=e.getY(d),p=e.getZ(d);l<t&&(t=l),c<r&&(r=c),p<a&&(a=p),l>n&&(n=l),c>o&&(o=c),p>s&&(s=p)}return this.min.set(t,r,a),this.max.set(n,o,s),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,r=e.length;t<r;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new n;return function(t,r){var a=e.copy(r).multiplyScalar(0.5);return this.min.copy(t).sub(a),this.max.copy(t).add(a),this}}(),setFromObject:function(e){return this.makeEmpty(),this.expandByObject(e)},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=+Infinity,this.max.x=this.max.y=this.max.z=-Infinity,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(e){var t=e||new n;return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(0.5)},getSize:function(e){var t=e||new n;return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},expandByObject:function(){var e=new n;return function(t){var r=this;return t.updateMatrixWorld(!0),t.traverse(function(t){var a=t.geometry,n,i;if(void 0!==a)if(a.isGeometry){var o=a.vertices;for(n=0,i=o.length;n<i;n++)e.copy(o[n]),e.applyMatrix4(t.matrixWorld),r.expandByPoint(e)}else if(a.isBufferGeometry){var s=a.attributes.position;if(void 0!==s)for(n=0,i=s.count;n<i;n++)e.fromBufferAttribute(s,n).applyMatrix4(t.matrixWorld),r.expandByPoint(e)}}),this}}(),containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z},getParameter:function(e,t){var r=t||new n;return r.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z?!1:!0},intersectsSphere:function(){var e;return function(t){return void 0===e&&(e=new n),this.clampPoint(t.center,e),e.distanceToSquared(t.center)<=t.radius*t.radius}}(),intersectsPlane:function(e){var t,r;return 0<e.normal.x?(t=e.normal.x*this.min.x,r=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,r=e.normal.x*this.min.x),0<e.normal.y?(t+=e.normal.y*this.min.y,r+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,r+=e.normal.y*this.min.y),0<e.normal.z?(t+=e.normal.z*this.min.z,r+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,r+=e.normal.z*this.min.z),t<=e.constant&&r>=e.constant},clampPoint:function(e,t){var r=t||new n;return r.copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new n;return function(t){var r=e.copy(t).clamp(this.min,this.max);return r.sub(t).length()}}(),getBoundingSphere:function(){var e=new n;return function(t){var r=t||new K;return this.getCenter(r.center),r.radius=0.5*this.getSize(e).length(),r}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:function(){var e=[new n,new n,new n,new n,new n,new n,new n,new n];return function(t){return this.isEmpty()?this:(e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(e),this)}}(),translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}},K.prototype={constructor:K,set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromPoints:function(){var e;return function(t,r){void 0===e&&(e=new J);var a=this.center;void 0===r?e.setFromPoints(t).getCenter(a):a.copy(r);for(var n=0,o=0,i=t.length;o<i;o++)n=At(n,a.distanceToSquared(t[o]));return this.radius=vt(n),this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return 0>=this.radius},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},intersectsBox:function(e){return e.intersectsSphere(this)},intersectsPlane:function(e){return xt(this.center.dot(e.normal)-e.constant)<=this.radius},clampPoint:function(e,t){var r=this.center.distanceToSquared(e),a=t||new n;return a.copy(e),r>this.radius*this.radius&&(a.sub(this.center).normalize(),a.multiplyScalar(this.radius).add(this.center)),a},getBoundingBox:function(e){var t=e||new J;return t.set(this.center,this.center),t.expandByScalar(this.radius),t},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius*=e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius}},$.prototype={constructor:$,isMatrix3:!0,set:function(e,t,r,a,i,n,o,s,l){var d=this.elements;return d[0]=e,d[1]=a,d[2]=o,d[3]=t,d[4]=i,d[5]=s,d[6]=r,d[7]=n,d[8]=l,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return new this.constructor().fromArray(this.elements)},copy:function(e){var t=e.elements;return this.set(t[0],t[3],t[6],t[1],t[4],t[7],t[2],t[5],t[8]),this},setFromMatrix4:function(e){var t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this},applyToBufferAttribute:function(){var e;return function(t){e===void 0&&(e=new n);for(var r=0,a=t.count;r<a;r++)e.x=t.getX(r),e.y=t.getY(r),e.z=t.getZ(r),e.applyMatrix3(this),t.setXYZ(r,e.x,e.y,e.z);return t}}(),multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var t=this.elements,r=t[0],a=t[1],n=t[2],o=t[3],s=t[4],e=t[5],l=t[6],d=t[7],c=t[8];return r*s*c-r*e*d-a*o*c+a*e*l+n*o*d-n*s*l},getInverse:function(e,t){e&&e.isMatrix4&&console.error('THREE.Matrix3.getInverse no longer takes a Matrix4 argument.');var r=e.elements,a=this.elements,i=r[0],n=r[1],o=r[2],s=r[3],l=r[4],d=r[5],c=r[6],p=r[7],u=r[8],m=u*l-d*p,f=d*c-u*s,g=p*s-l*c,h=i*m+n*f+o*g;if(0===h){var _='THREE.Matrix3.getInverse(): can\'t invert matrix, determinant is 0';if(!0===t)throw new Error(_);else console.warn(_);return this.identity()}var x=1/h;return a[0]=m*x,a[1]=(o*p-u*n)*x,a[2]=(d*n-o*l)*x,a[3]=f*x,a[4]=(u*i-o*c)*x,a[5]=(o*s-d*i)*x,a[6]=g*x,a[7]=(n*c-p*i)*x,a[8]=(l*i-n*s)*x,this},transpose:function(){var e=this.elements,t;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this},getNormalMatrix:function(e){return this.setFromMatrix4(e).getInverse(this).transpose()},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},fromArray:function(e,t){t===void 0&&(t=0);for(var r=0;9>r;r++)this.elements[r]=e[r+t];return this},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e}},ee.prototype={constructor:ee,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,r,a){return this.normal.set(e,t,r),this.constant=a,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(){var e=new n,t=new n;return function(r,a,i){var n=e.subVectors(i,a).cross(t.subVectors(r,a)).normalize();return this.setFromNormalAndCoplanarPoint(n,r),this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).sub(e).negate()},orthoPoint:function(e,t){var r=this.distanceToPoint(e),a=t||new n;return a.copy(this.normal).multiplyScalar(r)},intersectLine:function(){var e=new n;return function(r,a){var i=a||new n,o=r.delta(e),s=this.normal.dot(o);if(0===s)return 0===this.distanceToPoint(r.start)?i.copy(r.start):void 0;var l=-(r.start.dot(this.normal)+this.constant)/s;return 0>l||1<l?void 0:i.copy(o).multiplyScalar(l).add(r.start)}}(),intersectsLine:function(e){var t=this.distanceToPoint(e.start),r=this.distanceToPoint(e.end);return 0>t&&0<r||0>r&&0<t},intersectsBox:function(e){return e.intersectsPlane(this)},intersectsSphere:function(e){return e.intersectsPlane(this)},coplanarPoint:function(e){var t=e||new n;return t.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var e=new n,t=new $;return function(r,a){var i=this.coplanarPoint(e).applyMatrix4(r),n=a||t.getNormalMatrix(r),o=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(o),this}}(),translate:function(e){return this.constant-=e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant===this.constant}},te.prototype={constructor:te,set:function(e,t,r,a,i,n){var o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(r),o[3].copy(a),o[4].copy(i),o[5].copy(n),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){for(var t=this.planes,r=0;6>r;r++)t[r].copy(e.planes[r]);return this},setFromMatrix:function(e){var t=this.planes,r=e.elements,a=r[0],i=r[1],n=r[2],o=r[3],s=r[4],l=r[5],d=r[6],c=r[7],p=r[8],u=r[9],m=r[10],f=r[11],g=r[12],h=r[13],_=r[14],x=r[15];return t[0].setComponents(o-a,c-s,f-p,x-g).normalize(),t[1].setComponents(o+a,c+s,f+p,x+g).normalize(),t[2].setComponents(o+i,c+l,f+u,x+h).normalize(),t[3].setComponents(o-i,c-l,f-u,x-h).normalize(),t[4].setComponents(o-n,c-d,f-m,x-_).normalize(),t[5].setComponents(o+n,c+d,f+m,x+_).normalize(),this},intersectsObject:function(){var e=new K;return function(t){var r=t.geometry;return null===r.boundingSphere&&r.computeBoundingSphere(),e.copy(r.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(e)}}(),intersectsSprite:function(){var e=new K;return function(t){return e.center.set(0,0,0),e.radius=0.7071067811865476,e.applyMatrix4(t.matrixWorld),this.intersectsSphere(e)}}(),intersectsSphere:function(e){for(var t=this.planes,r=e.center,a=-e.radius,n=0,i;6>n;n++)if(i=t[n].distanceToPoint(r),i<a)return!1;return!0},intersectsBox:function(){var e=new n,t=new n;return function(r){for(var a=this.planes,n=0,i;6>n;n++){i=a[n],e.x=0<i.normal.x?r.min.x:r.max.x,t.x=0<i.normal.x?r.max.x:r.min.x,e.y=0<i.normal.y?r.min.y:r.max.y,t.y=0<i.normal.y?r.max.y:r.min.y,e.z=0<i.normal.z?r.min.z:r.max.z,t.z=0<i.normal.z?r.max.z:r.min.z;var o=i.distanceToPoint(e),s=i.distanceToPoint(t);if(0>o&&0>s)return!1}return!0}}(),containsPoint:function(e){for(var t=this.planes,r=0;6>r;r++)if(0>t[r].distanceToPoint(e))return!1;return!0}},ae.prototype={constructor:ae,set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){var r=t||new n;return r.copy(this.direction).multiplyScalar(e).add(this.origin)},lookAt:function(e){return this.direction.copy(e).sub(this.origin).normalize(),this},recast:function(){var e=new n;return function(r){return this.origin.copy(this.at(r,e)),this}}(),closestPointToPoint:function(e,t){var r=t||new n;r.subVectors(e,this.origin);var a=r.dot(this.direction);return 0>a?r.copy(this.origin):r.copy(this.direction).multiplyScalar(a).add(this.origin)},distanceToPoint:function(e){return vt(this.distanceSqToPoint(e))},distanceSqToPoint:function(){var e=new n;return function(t){var r=e.subVectors(t,this.origin).dot(this.direction);return 0>r?this.origin.distanceToSquared(t):(e.copy(this.direction).multiplyScalar(r).add(this.origin),e.distanceToSquared(t))}}(),distanceSqToSegment:function(){var e=new n,t=new n,r=new n;return function(a,i,n,o){e.copy(a).add(i).multiplyScalar(0.5),t.copy(i).sub(a).normalize(),r.copy(this.origin).sub(e);var s=0.5*a.distanceTo(i),l=-this.direction.dot(t),d=r.dot(this.direction),p=-r.dot(t),u=r.lengthSq(),c=xt(1-l*l),m,f,g,h;if(!(0<c))f=0<l?-s:s,m=At(0,-(l*f+d)),g=-m*m+f*(f+2*p)+u;else if(m=l*p-d,f=l*d-p,h=s*c,!(0<=m))f<=-h?(m=At(0,-(-l*s+d)),f=0<m?-s:Rt(At(-s,-p),s),g=-m*m+f*(f+2*p)+u):f<=h?(m=0,f=Rt(At(-s,-p),s),g=f*(f+2*p)+u):(m=At(0,-(l*s+d)),f=0<m?s:Rt(At(-s,-p),s),g=-m*m+f*(f+2*p)+u);else if(!(f>=-h))f=-s,m=At(0,-(l*f+d)),g=-m*m+f*(f+2*p)+u;else if(f<=h){var _=1/c;m*=_,f*=_,g=m*(m+l*f+2*d)+f*(l*m+f+2*p)+u}else f=s,m=At(0,-(l*f+d)),g=-m*m+f*(f+2*p)+u;return n&&n.copy(this.direction).multiplyScalar(m).add(this.origin),o&&o.copy(t).multiplyScalar(f).add(e),g}}(),intersectSphere:function(){var e=new n;return function(t,r){e.subVectors(t.center,this.origin);var a=e.dot(this.direction),i=e.dot(e)-a*a,n=t.radius*t.radius;if(i>n)return null;var o=vt(n-i),s=a-o,l=a+o;return 0>s&&0>l?null:0>s?this.at(l,r):this.at(s,r)}}(),intersectsSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},distanceToPlane:function(e){var r=e.normal.dot(this.direction);if(0===r)return 0===e.distanceToPoint(this.origin)?0:null;var a=-(this.origin.dot(e.normal)+e.constant)/r;return 0<=a?a:null},intersectPlane:function(e,r){var a=this.distanceToPlane(e);return null===a?null:this.at(a,r)},intersectsPlane:function(e){var t=e.distanceToPoint(this.origin);if(0===t)return!0;var r=e.normal.dot(this.direction);return!!(0>r*t)},intersectBox:function(e,t){var r=1/this.direction.x,a=1/this.direction.y,i=1/this.direction.z,n=this.origin,o,s,l,d,c,p;return(0<=r?(o=(e.min.x-n.x)*r,s=(e.max.x-n.x)*r):(o=(e.max.x-n.x)*r,s=(e.min.x-n.x)*r),0<=a?(l=(e.min.y-n.y)*a,d=(e.max.y-n.y)*a):(l=(e.max.y-n.y)*a,d=(e.min.y-n.y)*a),o>d||l>s)?null:((l>o||o!==o)&&(o=l),(d<s||s!==s)&&(s=d),0<=i?(c=(e.min.z-n.z)*i,p=(e.max.z-n.z)*i):(c=(e.max.z-n.z)*i,p=(e.min.z-n.z)*i),o>p||c>s)?null:((c>o||o!==o)&&(o=c),(p<s||s!==s)&&(s=p),0>s?null:this.at(0<=o?o:s,t))},intersectsBox:function(){var e=new n;return function(t){return null!==this.intersectBox(t,e)}}(),intersectTriangle:function(){var e=new n,t=new n,r=new n,i=new n;return function(n,a,o,s,l){t.subVectors(a,n),r.subVectors(o,n),i.crossVectors(t,r);var d=this.direction.dot(i),c;if(0<d){if(s)return null;c=1}else if(0>d)c=-1,d=-d;else return null;e.subVectors(this.origin,n);var p=c*this.direction.dot(r.crossVectors(e,r));if(0>p)return null;var u=c*this.direction.dot(t.cross(e));if(0>u)return null;if(p+u>d)return null;var m=-c*e.dot(i);return 0>m?null:this.at(m/d,l)}}(),applyMatrix4:function(e){return this.direction.add(this.origin).applyMatrix4(e),this.origin.applyMatrix4(e),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}},ie.RotationOrders=['XYZ','YZX','ZXY','XZY','YXZ','ZYX'],ie.DefaultOrder='XYZ',ie.prototype={constructor:ie,isEuler:!0,get x(){return this._x},set x(e){this._x=e,this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e,this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e,this.onChangeCallback()},get order(){return this._order},set order(e){this._order=e,this.onChangeCallback()},set:function(e,t,r,a){return this._x=e,this._y=t,this._z=r,this._order=a||this._order,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this.onChangeCallback(),this},setFromRotationMatrix:function(e,t,r){var a=Math.asin,i=Da.clamp,n=e.elements,o=n[0],s=n[4],l=n[8],d=n[1],c=n[5],p=n[9],u=n[2],m=n[6],f=n[10];return t=t||this._order,'XYZ'===t?(this._y=a(i(l,-1,1)),0.99999>xt(l)?(this._x=_t(-p,f),this._z=_t(-s,o)):(this._x=_t(m,c),this._z=0)):'YXZ'===t?(this._x=a(-i(p,-1,1)),0.99999>xt(p)?(this._y=_t(l,f),this._z=_t(d,c)):(this._y=_t(-u,o),this._z=0)):'ZXY'===t?(this._x=a(i(m,-1,1)),0.99999>xt(m)?(this._y=_t(-u,f),this._z=_t(-s,c)):(this._y=0,this._z=_t(d,o))):'ZYX'===t?(this._y=a(-i(u,-1,1)),0.99999>xt(u)?(this._x=_t(m,f),this._z=_t(d,o)):(this._x=0,this._z=_t(-s,c))):'YZX'===t?(this._z=a(i(d,-1,1)),0.99999>xt(d)?(this._x=_t(-p,c),this._y=_t(-u,o)):(this._x=0,this._y=_t(l,f))):'XZY'===t?(this._z=a(-i(s,-1,1)),0.99999>xt(s)?(this._x=_t(m,c),this._y=_t(l,o)):(this._x=_t(-p,f),this._y=0)):console.warn('THREE.Euler: .setFromRotationMatrix() given unsupported order: '+t),this._order=t,!1!==r&&this.onChangeCallback(),this},setFromQuaternion:function(){var e;return function(t,a,i){return void 0===e&&(e=new r),e.makeRotationFromQuaternion(t),this.setFromRotationMatrix(e,a,i)}}(),setFromVector3:function(e,t){return this.set(e.x,e.y,e.z,t||this._order)},reorder:function(){var e=new t;return function(t){return e.setFromEuler(this),this.setFromQuaternion(e,t)}}(),equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this.onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e},toVector3:function(e){return e?e.set(this._x,this._y,this._z):new n(this._x,this._y,this._z)},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}},ne.prototype={constructor:ne,set:function(e){this.mask=1<<e},enable:function(e){this.mask|=1<<e},toggle:function(e){this.mask^=1<<e},disable:function(e){this.mask&=~(1<<e)},test:function(e){return 0!==(this.mask&e.mask)}};var Xa=0;oe.DefaultUp=new n(0,1,0),oe.DefaultMatrixAutoUpdate=!0,oe.prototype={constructor:oe,isObject3D:!0,applyMatrix:function(e){this.matrix.multiplyMatrices(e,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(){var e=new t;return function(t,r){return e.setFromAxisAngle(t,r),this.quaternion.multiply(e),this}}(),rotateX:function(){var e=new n(1,0,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateY:function(){var e=new n(0,1,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateZ:function(){var e=new n(0,0,1);return function(t){return this.rotateOnAxis(e,t)}}(),translateOnAxis:function(){var e=new n;return function(t,r){return e.copy(t).applyQuaternion(this.quaternion),this.position.add(e.multiplyScalar(r)),this}}(),translateX:function(){var e=new n(1,0,0);return function(t){return this.translateOnAxis(e,t)}}(),translateY:function(){var e=new n(0,1,0);return function(t){return this.translateOnAxis(e,t)}}(),translateZ:function(){var e=new n(0,0,1);return function(t){return this.translateOnAxis(e,t)}}(),localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var e=new r;return function(t){return t.applyMatrix4(e.getInverse(this.matrixWorld))}}(),lookAt:function(){var e=new r;return function(t){e.lookAt(t,this.position,this.up),this.quaternion.setFromRotationMatrix(e)}}(),add:function(e){if(1<arguments.length){for(var t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error('THREE.Object3D.add: object can\'t be added as a child of itself.',e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,e.dispatchEvent({type:'added'}),this.children.push(e)):console.error('THREE.Object3D.add: object not an instance of THREE.Object3D.',e),this)},remove:function(e){if(1<arguments.length)for(var t=0;t<arguments.length;t++)this.remove(arguments[t]);var r=this.children.indexOf(e);-1!==r&&(e.parent=null,e.dispatchEvent({type:'removed'}),this.children.splice(r,1))},getObjectById:function(e){return this.getObjectByProperty('id',e)},getObjectByName:function(e){return this.getObjectByProperty('name',e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(var r=0,a=this.children.length;r<a;r++){var i=this.children[r],n=i.getObjectByProperty(e,t);if(n!==void 0)return n}},getWorldPosition:function(e){var t=e||new n;return this.updateMatrixWorld(!0),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var e=new n,r=new n;return function(a){var i=a||new t;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(e,i,r),i}}(),getWorldRotation:function(){var e=new t;return function(t){var r=t||new ie;return this.getWorldQuaternion(e),r.setFromQuaternion(e,this.rotation.order,!1)}}(),getWorldScale:function(){var e=new n,r=new t;return function(t){var a=t||new n;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(e,r,a),a}}(),getWorldDirection:function(){var e=new t;return function(t){var r=t||new n;return this.getWorldQuaternion(e),r.set(0,0,1).applyQuaternion(e)}}(),raycast:function(){},traverse:function(e){e(this);for(var t=this.children,r=0,a=t.length;r<a;r++)t[r].traverse(e)},traverseVisible:function(e){if(!1!==this.visible){e(this);for(var t=this.children,r=0,a=t.length;r<a;r++)t[r].traverseVisible(e)}},traverseAncestors:function(e){var t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){!0===this.matrixAutoUpdate&&this.updateMatrix(),(!0===this.matrixWorldNeedsUpdate||!0===e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=this.children,r=0,a=t.length;r<a;r++)t[r].updateMatrixWorld(e)},toJSON:function(e){function t(e){var t=[];for(var r in e){var a=e[r];delete a.metadata,t.push(a)}return t}var r=void 0===e||''===e,a={};r&&(e={geometries:{},materials:{},textures:{},images:{}},a.metadata={version:4.4,type:'Object',generator:'Object3D.toJSON'});var n={};if(n.uuid=this.uuid,n.type=this.type,''!==this.name&&(n.name=this.name),'{}'!==JSON.stringify(this.userData)&&(n.userData=this.userData),!0===this.castShadow&&(n.castShadow=!0),!0===this.receiveShadow&&(n.receiveShadow=!0),!1===this.visible&&(n.visible=!1),n.matrix=this.matrix.toArray(),void 0!==this.geometry&&(void 0===e.geometries[this.geometry.uuid]&&(e.geometries[this.geometry.uuid]=this.geometry.toJSON(e)),n.geometry=this.geometry.uuid),void 0!==this.material&&(void 0===e.materials[this.material.uuid]&&(e.materials[this.material.uuid]=this.material.toJSON(e)),n.material=this.material.uuid),0<this.children.length){n.children=[];for(var o=0;o<this.children.length;o++)n.children.push(this.children[o].toJSON(e).object)}if(r){var i=t(e.geometries),s=t(e.materials),l=t(e.textures),d=t(e.images);0<i.length&&(a.geometries=i),0<s.length&&(a.materials=s),0<l.length&&(a.textures=l),0<d.length&&(a.images=d)}return a.object=n,a},clone:function(e){return new this.constructor().copy(this,e)},copy:function(e,t){if(void 0===t&&(t=!0),this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(var r=0,a;r<e.children.length;r++)a=e.children[r],this.add(a.clone());return this}},Object.assign(oe.prototype,a.prototype),se.prototype={constructor:se,set:function(e,t){return this.start.copy(e),this.end.copy(t),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.start.copy(e.start),this.end.copy(e.end),this},getCenter:function(e){var t=e||new n;return t.addVectors(this.start,this.end).multiplyScalar(0.5)},delta:function(e){var t=e||new n;return t.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){var r=t||new n;return this.delta(r).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(){var e=new n,r=new n;return function(a,i){e.subVectors(a,this.start),r.subVectors(this.end,this.start);var n=r.dot(r),o=r.dot(e),s=o/n;return i&&(s=Da.clamp(s,0,1)),s}}(),closestPointToPoint:function(e,r,a){var i=this.closestPointToPointParameter(e,r),t=a||new n;return this.delta(t).multiplyScalar(i).add(this.start)},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)}},le.normal=function(){var e=new n;return function(t,r,a,i){var o=i||new n;o.subVectors(a,r),e.subVectors(t,r),o.cross(e);var s=o.lengthSq();return 0<s?o.multiplyScalar(1/vt(s)):o.set(0,0,0)}}(),le.barycoordFromPoint=function(){var e=new n,t=new n,r=new n;return function(i,o,a,s,l){e.subVectors(s,o),t.subVectors(a,o),r.subVectors(i,o);var d=e.dot(e),c=e.dot(t),p=e.dot(r),m=t.dot(t),f=t.dot(r),g=d*m-c*c,h=l||new n;if(0===g)return h.set(-2,-1,-1);var _=1/g,x=(m*p-c*f)*_,u=(d*f-c*p)*_;return h.set(1-x-u,u,x)}}(),le.containsPoint=function(){var e=new n;return function(t,r,a,i){var n=le.barycoordFromPoint(t,r,a,i,e);return 0<=n.x&&0<=n.y&&1>=n.x+n.y}}(),le.prototype={constructor:le,set:function(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this},setFromPointsAndIndices:function(e,t,r,a){return this.a.copy(e[t]),this.b.copy(e[r]),this.c.copy(e[a]),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},area:function(){var e=new n,t=new n;return function(){return e.subVectors(this.c,this.b),t.subVectors(this.a,this.b),0.5*e.cross(t).length()}}(),midpoint:function(e){var t=e||new n;return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(e){return le.normal(this.a,this.b,this.c,e)},plane:function(e){var t=e||new ee;return t.setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return le.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return le.containsPoint(e,this.a,this.b,this.c)},closestPointToPoint:function(){var e,t,r,a;return function(o,s){void 0===e&&(e=new ee,t=[new se,new se,new se],r=new n,a=new n);var l=s||new n,d=Infinity;if(e.setFromCoplanarPoints(this.a,this.b,this.c),e.projectPoint(o,r),!0===this.containsPoint(r))l.copy(r);else{t[0].set(this.a,this.b),t[1].set(this.b,this.c),t[2].set(this.c,this.a);for(var c=0;c<t.length;c++){t[c].closestPointToPoint(r,!0,a);var i=r.distanceToSquared(a);i<d&&(d=i,l.copy(a))}}return l}}(),equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}},de.prototype={constructor:de,clone:function(){return new this.constructor().copy(this)},copy:function(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(var t=0,r=e.vertexNormals.length;t<r;t++)this.vertexNormals[t]=e.vertexNormals[t].clone();for(var t=0,r=e.vertexColors.length;t<r;t++)this.vertexColors[t]=e.vertexColors[t].clone();return this}},ce.prototype=Object.create(q.prototype),ce.prototype.constructor=ce,ce.prototype.isMeshBasicMaterial=!0,ce.prototype.copy=function(e){return q.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this},pe.prototype={constructor:pe,isBufferAttribute:!0,set needsUpdate(e){!0===e&&this.version++},setArray:function(e){if(Array.isArray(e))throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');this.count=e===void 0?0:e.length/this.itemSize,this.array=e},setDynamic:function(e){return this.dynamic=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.dynamic=e.dynamic,this},copyAt:function(e,t,r){e*=this.itemSize,r*=t.itemSize;for(var a=0,i=this.itemSize;a<i;a++)this.array[e+a]=t.array[r+a];return this},copyArray:function(e){return this.array.set(e),this},copyColorsArray:function(e){for(var t=this.array,r=0,a=0,i=e.length,n;a<i;a++)n=e[a],void 0===n&&(console.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined',a),n=new k),t[r++]=n.r,t[r++]=n.g,t[r++]=n.b;return this},copyIndicesArray:function(e){for(var t=this.array,r=0,a=0,i=e.length,n;a<i;a++)n=e[a],t[r++]=n.a,t[r++]=n.b,t[r++]=n.c;return this},copyVector2sArray:function(e){for(var t=this.array,r=0,a=0,i=e.length,n;a<i;a++)n=e[a],void 0===n&&(console.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined',a),n=new o),t[r++]=n.x,t[r++]=n.y;return this},copyVector3sArray:function(e){for(var t=this.array,r=0,a=0,i=e.length,o;a<i;a++)o=e[a],void 0===o&&(console.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined',a),o=new n),t[r++]=o.x,t[r++]=o.y,t[r++]=o.z;return this},copyVector4sArray:function(e){for(var t=this.array,r=0,a=0,i=e.length,n;a<i;a++)n=e[a],void 0===n&&(console.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined',a),n=new H),t[r++]=n.x,t[r++]=n.y,t[r++]=n.z,t[r++]=n.w;return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){return this.array[e*this.itemSize]=t,this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){return this.array[e*this.itemSize+3]=t,this},setXY:function(e,t,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this},setXYZ:function(e,t,r,a){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=a,this},setXYZW:function(e,t,r,a,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=a,this.array[e+3]=i,this},onUpload:function(e){return this.onUploadCallback=e,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)}},ue.prototype=Object.create(pe.prototype),ue.prototype.constructor=ue,me.prototype=Object.create(pe.prototype),me.prototype.constructor=me,fe.prototype=Object.create(pe.prototype),fe.prototype.constructor=fe,Object.assign(ge.prototype,{computeGroups:function(e){for(var t=[],r=void 0,a=e.faces,n=0,i,o;n<a.length;n++)o=a[n],o.materialIndex!==r&&(r=o.materialIndex,void 0!==i&&(i.count=3*n-i.start,t.push(i)),i={start:3*n,materialIndex:r});i!==void 0&&(i.count=3*n-i.start,t.push(i)),this.groups=t},fromGeometry:function(e){var t=e.faces,r=e.vertices,a=e.faceVertexUvs,n=a[0]&&0<a[0].length,s=a[1]&&0<a[1].length,l=e.morphTargets,d=l.length,c;if(0<d){c=[];for(var p=0;p<d;p++)c[p]=[];this.morphTargets.position=c}var i=e.morphNormals,u=i.length,m;if(0<u){m=[];for(var p=0;p<u;p++)m[p]=[];this.morphTargets.normal=m}for(var f=e.skinIndices,g=e.skinWeights,h=f.length===r.length,_=g.length===r.length,p=0,x;p<t.length;p++){x=t[p],this.vertices.push(r[x.a],r[x.b],r[x.c]);var v=x.vertexNormals;if(3===v.length)this.normals.push(v[0],v[1],v[2]);else{var y=x.normal;this.normals.push(y,y,y)}var E=x.vertexColors;if(3===E.length)this.colors.push(E[0],E[1],E[2]);else{var M=x.color;this.colors.push(M,M,M)}if(!0===n){var S=a[0][p];void 0===S?(console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ',p),this.uvs.push(new o,new o,new o)):this.uvs.push(S[0],S[1],S[2])}if(!0===s){var S=a[1][p];void 0===S?(console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ',p),this.uvs2.push(new o,new o,new o)):this.uvs2.push(S[0],S[1],S[2])}for(var b=0,T;b<d;b++)T=l[b].vertices,c[b].push(T[x.a],T[x.b],T[x.c]);for(var b=0,L;b<u;b++)L=i[b].vertexNormals[p],m[b].push(L.a,L.b,L.c);h&&this.skinIndices.push(f[x.a],f[x.b],f[x.c]),_&&this.skinWeights.push(g[x.a],g[x.b],g[x.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this}});var Ya=0;xe.prototype={constructor:xe,isGeometry:!0,applyMatrix:function(e){for(var t=new $().getNormalMatrix(e),r=0,a=this.vertices.length,i;r<a;r++)i=this.vertices[r],i.applyMatrix4(e);for(var r=0,a=this.faces.length,n;r<a;r++){n=this.faces[r],n.normal.applyMatrix3(t).normalize();for(var o=0,s=n.vertexNormals.length;o<s;o++)n.vertexNormals[o].applyMatrix3(t).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(){var e;return function(t){return void 0===e&&(e=new r),e.makeRotationX(t),this.applyMatrix(e),this}}(),rotateY:function(){var e;return function(t){return void 0===e&&(e=new r),e.makeRotationY(t),this.applyMatrix(e),this}}(),rotateZ:function(){var e;return function(t){return void 0===e&&(e=new r),e.makeRotationZ(t),this.applyMatrix(e),this}}(),translate:function(){var e;return function(t,a,i){return void 0===e&&(e=new r),e.makeTranslation(t,a,i),this.applyMatrix(e),this}}(),scale:function(){var e;return function(t,a,i){return void 0===e&&(e=new r),e.makeScale(t,a,i),this.applyMatrix(e),this}}(),lookAt:function(){var e;return function(t){e===void 0&&(e=new oe),e.lookAt(t),e.updateMatrix(),this.applyMatrix(e.matrix)}}(),fromBufferGeometry:function(e){function t(e,t,a,i){var n=void 0===d?[]:[f[e].clone(),f[t].clone(),f[a].clone()],o=void 0===p?[]:[r.colors[e].clone(),r.colors[t].clone(),r.colors[a].clone()],s=new de(e,t,a,n,o,i);r.faces.push(s),void 0!==u&&r.faceVertexUvs[0].push([g[e].clone(),g[t].clone(),g[a].clone()]),void 0!==m&&r.faceVertexUvs[1].push([h[e].clone(),h[t].clone(),h[a].clone()])}var r=this,a=null===e.index?void 0:e.index.array,s=e.attributes,l=s.position.array,d=void 0===s.normal?void 0:s.normal.array,p=void 0===s.color?void 0:s.color.array,u=void 0===s.uv?void 0:s.uv.array,m=void 0===s.uv2?void 0:s.uv2.array;void 0!==m&&(this.faceVertexUvs[1]=[]);for(var f=[],g=[],h=[],c=0,i=0;c<l.length;c+=3,i+=2)r.vertices.push(new n(l[c],l[c+1],l[c+2])),void 0!==d&&f.push(new n(d[c],d[c+1],d[c+2])),void 0!==p&&r.colors.push(new k(p[c],p[c+1],p[c+2])),void 0!==u&&g.push(new o(u[i],u[i+1])),void 0!==m&&h.push(new o(m[i],m[i+1]));if(void 0!==a){var _=e.groups;if(0<_.length)for(var c=0;c<_.length;c++)for(var x=_[c],v=x.start,y=x.count,i=v;i<v+y;i+=3)t(a[i],a[i+1],a[i+2],x.materialIndex);else for(var c=0;c<a.length;c+=3)t(a[c],a[c+1],a[c+2])}else for(var c=0;c<l.length/3;c+=3)t(c,c+1,c+2);return this.computeFaceNormals(),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this},center:function(){this.computeBoundingBox();var e=this.boundingBox.getCenter().negate();return this.translate(e.x,e.y,e.z),e},normalize:function(){this.computeBoundingSphere();var e=this.boundingSphere.center,t=this.boundingSphere.radius,a=0===t?1:1/t,i=new r;return i.set(a,0,0,-a*e.x,0,a,0,-a*e.y,0,0,a,-a*e.z,0,0,0,1),this.applyMatrix(i),this},computeFaceNormals:function(){for(var e=new n,t=new n,r=0,a=this.faces.length;r<a;r++){var i=this.faces[r],o=this.vertices[i.a],s=this.vertices[i.b],l=this.vertices[i.c];e.subVectors(l,s),t.subVectors(o,s),e.cross(t),e.normalize(),i.normal.copy(e)}},computeVertexNormals:function(e){e===void 0&&(e=!0);var t,r,a,i,o,s;for(s=Array(this.vertices.length),t=0,r=this.vertices.length;t<r;t++)s[t]=new n;if(e){var l=new n,d=new n,c,p,u;for(a=0,i=this.faces.length;a<i;a++)o=this.faces[a],c=this.vertices[o.a],p=this.vertices[o.b],u=this.vertices[o.c],l.subVectors(u,p),d.subVectors(c,p),l.cross(d),s[o.a].add(l),s[o.b].add(l),s[o.c].add(l)}else for(this.computeFaceNormals(),a=0,i=this.faces.length;a<i;a++)o=this.faces[a],s[o.a].add(o.normal),s[o.b].add(o.normal),s[o.c].add(o.normal);for(t=0,r=this.vertices.length;t<r;t++)s[t].normalize();for(a=0,i=this.faces.length;a<i;a++){o=this.faces[a];var m=o.vertexNormals;3===m.length?(m[0].copy(s[o.a]),m[1].copy(s[o.b]),m[2].copy(s[o.c])):(m[0]=s[o.a].clone(),m[1]=s[o.b].clone(),m[2]=s[o.c].clone())}0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var e,t,r;for(this.computeFaceNormals(),e=0,t=this.faces.length;e<t;e++){r=this.faces[e];var a=r.vertexNormals;3===a.length?(a[0].copy(r.normal),a[1].copy(r.normal),a[2].copy(r.normal)):(a[0]=r.normal.clone(),a[1]=r.normal.clone(),a[2]=r.normal.clone())}0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var e,t,r,a,i;for(r=0,a=this.faces.length;r<a;r++)for(i=this.faces[r],i.__originalFaceNormal?i.__originalFaceNormal.copy(i.normal):i.__originalFaceNormal=i.normal.clone(),i.__originalVertexNormals||(i.__originalVertexNormals=[]),(e=0,t=i.vertexNormals.length);e<t;e++)i.__originalVertexNormals[e]?i.__originalVertexNormals[e].copy(i.vertexNormals[e]):i.__originalVertexNormals[e]=i.vertexNormals[e].clone();var o=new xe;for(o.faces=this.faces,e=0,t=this.morphTargets.length;e<t;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];var s=this.morphNormals[e].faceNormals,l=this.morphNormals[e].vertexNormals,d,c;for(r=0,a=this.faces.length;r<a;r++)d=new n,c={a:new n,b:new n,c:new n},s.push(d),l.push(c)}var p=this.morphNormals[e];o.vertices=this.morphTargets[e].vertices,o.computeFaceNormals(),o.computeVertexNormals();var d,c;for(r=0,a=this.faces.length;r<a;r++)i=this.faces[r],d=p.faceNormals[r],c=p.vertexNormals[r],d.copy(i.normal),c.a.copy(i.vertexNormals[0]),c.b.copy(i.vertexNormals[1]),c.c.copy(i.vertexNormals[2])}for(r=0,a=this.faces.length;r<a;r++)i=this.faces[r],i.normal=i.__originalFaceNormal,i.vertexNormals=i.__originalVertexNormals},computeLineDistances:function(){for(var e=0,t=this.vertices,r=0,a=t.length;r<a;r++)0<r&&(e+=t[r].distanceTo(t[r-1])),this.lineDistances[r]=e},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new J),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new K),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,r){if(!1===(e&&e.isGeometry))return void console.error('THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.',e);var a=this.vertices.length,n=this.vertices,o=e.vertices,s=this.faces,l=e.faces,d=this.faceVertexUvs[0],c=e.faceVertexUvs[0],p=this.colors,u=e.colors,m;r===void 0&&(r=0),t!==void 0&&(m=new $().getNormalMatrix(t));for(var f=0,i=o.length;f<i;f++){var g=o[f],h=g.clone();t!==void 0&&h.applyMatrix4(t),n.push(h)}for(var f=0,i=u.length;f<i;f++)p.push(u[f].clone());for(f=0,i=l.length;f<i;f++){var _=l[f],x=_.vertexNormals,v=_.vertexColors,y,E,M;y=new de(_.a+a,_.b+a,_.c+a),y.normal.copy(_.normal),m!==void 0&&y.normal.applyMatrix3(m).normalize();for(var S=0,b=x.length;S<b;S++)E=x[S].clone(),void 0!==m&&E.applyMatrix3(m).normalize(),y.vertexNormals.push(E);y.color.copy(_.color);for(var S=0,b=v.length;S<b;S++)M=v[S],y.vertexColors.push(M.clone());y.materialIndex=_.materialIndex+r,s.push(y)}for(f=0,i=c.length;f<i;f++){var T=c[f],L=[];if(void 0!==T){for(var S=0,b=T.length;S<b;S++)L.push(T[S].clone());d.push(L)}}},mergeMesh:function(e){return!1===(e&&e.isMesh)?void console.error('THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.',e):void(e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix))},mergeVertices:function(){var e={},t=[],r=[],a=10000,o,s,l,i,d,c,p,u;for(l=0,i=this.vertices.length;l<i;l++)o=this.vertices[l],s=St(o.x*a)+'_'+St(o.y*a)+'_'+St(o.z*a),void 0===e[s]?(e[s]=l,t.push(this.vertices[l]),r[l]=t.length-1):r[l]=r[e[s]];var m=[];for(l=0,i=this.faces.length;l<i;l++){d=this.faces[l],d.a=r[d.a],d.b=r[d.b],d.c=r[d.c],c=[d.a,d.b,d.c];for(var f=0;3>f;f++)if(c[f]===c[(f+1)%3]){m.push(l);break}}for(l=m.length-1;0<=l;l--){var n=m[l];for(this.faces.splice(n,1),p=0,u=this.faceVertexUvs.length;p<u;p++)this.faceVertexUvs[p].splice(n,1)}var g=this.vertices.length-t.length;return this.vertices=t,g},sortFacesByMaterialIndex:function(){for(var e=this.faces,t=e.length,r=0;r<t;r++)e[r]._id=r;e.sort(function(e,t){return e.materialIndex-t.materialIndex});var a=this.faceVertexUvs[0],i=this.faceVertexUvs[1],n,o;a&&a.length===t&&(n=[]),i&&i.length===t&&(o=[]);for(var r=0,s;r<t;r++)s=e[r]._id,n&&n.push(a[s]),o&&o.push(i[s]);n&&(this.faceVertexUvs[0]=n),o&&(this.faceVertexUvs[1]=o)},toJSON:function(){function e(e,t,r){return r?e|1<<t:e&~(1<<t)}function t(e){var t=e.x.toString()+e.y.toString()+e.z.toString();return void 0===u[t]?(u[t]=p.length/3,p.push(e.x,e.y,e.z),u[t]):u[t]}function r(e){var t=e.r.toString()+e.g.toString()+e.b.toString();return void 0===f[t]?(f[t]=m.length,m.push(e.getHex()),f[t]):f[t]}function a(e){var t=e.x.toString()+e.y.toString();return void 0===h[t]?(h[t]=g.length/2,g.push(e.x,e.y),h[t]):h[t]}var n={metadata:{version:4.4,type:'Geometry',generator:'Geometry.toJSON'}};if(n.uuid=this.uuid,n.type=this.type,''!==this.name&&(n.name=this.name),void 0!==this.parameters){var o=this.parameters;for(var s in o)void 0!==o[s]&&(n[s]=o[s]);return n}for(var l=[],d=0,i;d<this.vertices.length;d++)i=this.vertices[d],l.push(i.x,i.y,i.z);for(var c=[],p=[],u={},m=[],f={},g=[],h={},d=0;d<this.faces.length;d++){var _=this.faces[d],x=void 0!==this.faceVertexUvs[0][d],v=0<_.normal.length(),y=0<_.vertexNormals.length,E=1!==_.color.r||1!==_.color.g||1!==_.color.b,M=0<_.vertexColors.length,S=0;if(S=e(S,0,0),S=e(S,1,!0),S=e(S,2,!1),S=e(S,3,x),S=e(S,4,v),S=e(S,5,y),S=e(S,6,E),S=e(S,7,M),c.push(S),c.push(_.a,_.b,_.c),c.push(_.materialIndex),x){var b=this.faceVertexUvs[0][d];c.push(a(b[0]),a(b[1]),a(b[2]))}if(v&&c.push(t(_.normal)),y){var T=_.vertexNormals;c.push(t(T[0]),t(T[1]),t(T[2]))}if(E&&c.push(r(_.color)),M){var L=_.vertexColors;c.push(r(L[0]),r(L[1]),r(L[2]))}}return n.data={},n.data.vertices=l,n.data.normals=p,0<m.length&&(n.data.colors=m),0<g.length&&(n.data.uvs=[g]),n.data.faces=c,n},clone:function(){return new xe().copy(this)},copy:function(e){var t,r,a,i,n,o;this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;var s=e.vertices;for(t=0,r=s.length;t<r;t++)this.vertices.push(s[t].clone());var l=e.colors;for(t=0,r=l.length;t<r;t++)this.colors.push(l[t].clone());var d=e.faces;for(t=0,r=d.length;t<r;t++)this.faces.push(d[t].clone());for(t=0,r=e.faceVertexUvs.length;t<r;t++){var c=e.faceVertexUvs[t];for(void 0===this.faceVertexUvs[t]&&(this.faceVertexUvs[t]=[]),a=0,i=c.length;a<i;a++){var p=c[a],u=[];for(n=0,o=p.length;n<o;n++){var m=p[n];u.push(m.clone())}this.faceVertexUvs[t].push(u)}}var f=e.morphTargets;for(t=0,r=f.length;t<r;t++){var g={name:f[t].name};if(void 0!==f[t].vertices)for(g.vertices=[],a=0,i=f[t].vertices.length;a<i;a++)g.vertices.push(f[t].vertices[a].clone());if(void 0!==f[t].normals)for(g.normals=[],a=0,i=f[t].normals.length;a<i;a++)g.normals.push(f[t].normals[a].clone());this.morphTargets.push(g)}var h=e.morphNormals;for(t=0,r=h.length;t<r;t++){var _={};if(void 0!==h[t].vertexNormals)for(_.vertexNormals=[],a=0,i=h[t].vertexNormals.length;a<i;a++){var x=h[t].vertexNormals[a],v={};v.a=x.a.clone(),v.b=x.b.clone(),v.c=x.c.clone(),_.vertexNormals.push(v)}if(void 0!==h[t].faceNormals)for(_.faceNormals=[],a=0,i=h[t].faceNormals.length;a<i;a++)_.faceNormals.push(h[t].faceNormals[a].clone());this.morphNormals.push(_)}var y=e.skinWeights;for(t=0,r=y.length;t<r;t++)this.skinWeights.push(y[t].clone());var E=e.skinIndices;for(t=0,r=E.length;t<r;t++)this.skinIndices.push(E[t].clone());var M=e.lineDistances;for(t=0,r=M.length;t<r;t++)this.lineDistances.push(M[t]);var S=e.boundingBox;null!==S&&(this.boundingBox=S.clone());var b=e.boundingSphere;return null!==b&&(this.boundingSphere=b.clone()),this.elementsNeedUpdate=e.elementsNeedUpdate,this.verticesNeedUpdate=e.verticesNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.lineDistancesNeedUpdate=e.lineDistancesNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:'dispose'})}},Object.assign(xe.prototype,a.prototype),ve.prototype={constructor:ve,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(e){this.index=Array.isArray(e)?new(65535<he(e)?me:ue)(e,1):e},addAttribute:function(e,t){return!1===(t&&t.isBufferAttribute)&&!1===(t&&t.isInterleavedBufferAttribute)?(console.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).'),void this.addAttribute(e,new pe(arguments[1],arguments[2]))):'index'===e?(console.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.'),void this.setIndex(t)):(this.attributes[e]=t,this)},getAttribute:function(e){return this.attributes[e]},removeAttribute:function(e){return delete this.attributes[e],this},addGroup:function(e,t,r){this.groups.push({start:e,count:t,materialIndex:r===void 0?0:r})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e,this.drawRange.count=t},applyMatrix:function(e){var t=this.attributes.position;void 0!==t&&(e.applyToBufferAttribute(t),t.needsUpdate=!0);var r=this.attributes.normal;if(void 0!==r){var a=new $().getNormalMatrix(e);a.applyToBufferAttribute(r),r.needsUpdate=!0}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(){var e;return function(t){return void 0===e&&(e=new r),e.makeRotationX(t),this.applyMatrix(e),this}}(),rotateY:function(){var e;return function(t){return void 0===e&&(e=new r),e.makeRotationY(t),this.applyMatrix(e),this}}(),rotateZ:function(){var e;return function(t){return void 0===e&&(e=new r),e.makeRotationZ(t),this.applyMatrix(e),this}}(),translate:function(){var e;return function(t,a,i){return void 0===e&&(e=new r),e.makeTranslation(t,a,i),this.applyMatrix(e),this}}(),scale:function(){var e;return function(t,a,i){return void 0===e&&(e=new r),e.makeScale(t,a,i),this.applyMatrix(e),this}}(),lookAt:function(){var e;return function(t){e===void 0&&(e=new oe),e.lookAt(t),e.updateMatrix(),this.applyMatrix(e.matrix)}}(),center:function(){this.computeBoundingBox();var e=this.boundingBox.getCenter().negate();return this.translate(e.x,e.y,e.z),e},setFromObject:function(e){var t=e.geometry;if(e.isPoints||e.isLine){var r=new fe(3*t.vertices.length,3),a=new fe(3*t.colors.length,3);if(this.addAttribute('position',r.copyVector3sArray(t.vertices)),this.addAttribute('color',a.copyColorsArray(t.colors)),t.lineDistances&&t.lineDistances.length===t.vertices.length){var i=new fe(t.lineDistances.length,1);this.addAttribute('lineDistance',i.copyArray(t.lineDistances))}null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone())}else e.isMesh&&t&&t.isGeometry&&this.fromGeometry(t);return this},updateFromObject:function(e){var t=e.geometry;if(e.isMesh){var r=t.__directGeometry;if(!0===t.elementsNeedUpdate&&(r=void 0,t.elementsNeedUpdate=!1),void 0===r)return this.fromGeometry(t);r.verticesNeedUpdate=t.verticesNeedUpdate,r.normalsNeedUpdate=t.normalsNeedUpdate,r.colorsNeedUpdate=t.colorsNeedUpdate,r.uvsNeedUpdate=t.uvsNeedUpdate,r.groupsNeedUpdate=t.groupsNeedUpdate,t.verticesNeedUpdate=!1,t.normalsNeedUpdate=!1,t.colorsNeedUpdate=!1,t.uvsNeedUpdate=!1,t.groupsNeedUpdate=!1,t=r}var a;return!0===t.verticesNeedUpdate&&(a=this.attributes.position,void 0!==a&&(a.copyVector3sArray(t.vertices),a.needsUpdate=!0),t.verticesNeedUpdate=!1),!0===t.normalsNeedUpdate&&(a=this.attributes.normal,void 0!==a&&(a.copyVector3sArray(t.normals),a.needsUpdate=!0),t.normalsNeedUpdate=!1),!0===t.colorsNeedUpdate&&(a=this.attributes.color,void 0!==a&&(a.copyColorsArray(t.colors),a.needsUpdate=!0),t.colorsNeedUpdate=!1),t.uvsNeedUpdate&&(a=this.attributes.uv,void 0!==a&&(a.copyVector2sArray(t.uvs),a.needsUpdate=!0),t.uvsNeedUpdate=!1),t.lineDistancesNeedUpdate&&(a=this.attributes.lineDistance,void 0!==a&&(a.copyArray(t.lineDistances),a.needsUpdate=!0),t.lineDistancesNeedUpdate=!1),t.groupsNeedUpdate&&(t.computeGroups(e.geometry),this.groups=t.groups,t.groupsNeedUpdate=!1),this},fromGeometry:function(e){return e.__directGeometry=new ge().fromGeometry(e),this.fromDirectGeometry(e.__directGeometry)},fromDirectGeometry:function(e){var t=new Float32Array(3*e.vertices.length);if(this.addAttribute('position',new pe(t,3).copyVector3sArray(e.vertices)),0<e.normals.length){var r=new Float32Array(3*e.normals.length);this.addAttribute('normal',new pe(r,3).copyVector3sArray(e.normals))}if(0<e.colors.length){var a=new Float32Array(3*e.colors.length);this.addAttribute('color',new pe(a,3).copyColorsArray(e.colors))}if(0<e.uvs.length){var n=new Float32Array(2*e.uvs.length);this.addAttribute('uv',new pe(n,2).copyVector2sArray(e.uvs))}if(0<e.uvs2.length){var o=new Float32Array(2*e.uvs2.length);this.addAttribute('uv2',new pe(o,2).copyVector2sArray(e.uvs2))}if(0<e.indices.length){var s=65535<he(e.indices)?Uint32Array:Uint16Array,d=new s(3*e.indices.length);this.setIndex(new pe(d,1).copyIndicesArray(e.indices))}for(var c in this.groups=e.groups,e.morphTargets){for(var p=[],u=e.morphTargets[c],m=0,i=u.length;m<i;m++){var l=u[m],f=new fe(3*l.length,3);p.push(f.copyVector3sArray(l))}this.morphAttributes[c]=p}if(0<e.skinIndices.length){var g=new fe(4*e.skinIndices.length,4);this.addAttribute('skinIndex',g.copyVector4sArray(e.skinIndices))}if(0<e.skinWeights.length){var h=new fe(4*e.skinWeights.length,4);this.addAttribute('skinWeight',h.copyVector4sArray(e.skinWeights))}return null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new J);var e=this.attributes.position;e===void 0?this.boundingBox.makeEmpty():this.boundingBox.setFromBufferAttribute(e),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){var e=new J,t=new n;return function(){null===this.boundingSphere&&(this.boundingSphere=new K);var r=this.attributes.position;if(r){var a=this.boundingSphere.center;e.setFromBufferAttribute(r),e.getCenter(a);for(var n=0,o=0,i=r.count;o<i;o++)t.x=r.getX(o),t.y=r.getY(o),t.z=r.getZ(o),n=At(n,a.distanceToSquared(t));this.boundingSphere.radius=vt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var e=this.index,t=this.attributes,r=this.groups;if(t.position){var a=t.position.array;if(t.normal===void 0)this.addAttribute('normal',new pe(new Float32Array(a.length),3));else for(var o=t.normal.array,s=0,i=o.length;s<i;s++)o[s]=0;var l=t.normal.array,d=new n,c=new n,p=new n,u=new n,m=new n,f,g,h;if(e){var _=e.array;0===r.length&&this.addGroup(0,_.length);for(var x=0,v=r.length;x<v;++x)for(var y=r[x],E=y.start,M=y.count,s=E,i=E+M;s<i;s+=3)f=3*_[s+0],g=3*_[s+1],h=3*_[s+2],d.fromArray(a,f),c.fromArray(a,g),p.fromArray(a,h),u.subVectors(p,c),m.subVectors(d,c),u.cross(m),l[f]+=u.x,l[f+1]+=u.y,l[f+2]+=u.z,l[g]+=u.x,l[g+1]+=u.y,l[g+2]+=u.z,l[h]+=u.x,l[h+1]+=u.y,l[h+2]+=u.z}else for(var s=0,i=a.length;s<i;s+=9)d.fromArray(a,s),c.fromArray(a,s+3),p.fromArray(a,s+6),u.subVectors(p,c),m.subVectors(d,c),u.cross(m),l[s]=u.x,l[s+1]=u.y,l[s+2]=u.z,l[s+3]=u.x,l[s+4]=u.y,l[s+5]=u.z,l[s+6]=u.x,l[s+7]=u.y,l[s+8]=u.z;this.normalizeNormals(),t.normal.needsUpdate=!0}},merge:function(e,t){if(!1===(e&&e.isBufferGeometry))return void console.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.',e);t===void 0&&(t=0);var r=this.attributes;for(var a in r)if(e.attributes[a]!==void 0)for(var n=r[a],o=n.array,s=e.attributes[a],l=s.array,d=s.itemSize,c=0,i=d*t;c<l.length;c++,i++)o[i]=l[c];return this},normalizeNormals:function(){for(var e=this.attributes.normal.array,t=0,r=e.length,a,i,o,s;t<r;t+=3)a=e[t],i=e[t+1],o=e[t+2],s=1/vt(a*a+i*i+o*o),e[t]*=s,e[t+1]*=s,e[t+2]*=s},toNonIndexed:function(){if(null===this.index)return console.warn('THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.'),this;var e=new ve,t=this.index.array,r=this.attributes;for(var a in r){for(var n=r[a],o=n.array,s=n.itemSize,d=new o.constructor(t.length*s),c=0,p=0,u=0,i=t.length;u<i;u++){c=t[u]*s;for(var l=0;l<s;l++)d[p++]=o[c++]}e.addAttribute(a,new pe(d,s))}return e},toJSON:function(){var e={metadata:{version:4.4,type:'BufferGeometry',generator:'BufferGeometry.toJSON'}};if(e.uuid=this.uuid,e.type=this.type,''!==this.name&&(e.name=this.name),void 0!==this.parameters){var t=this.parameters;for(var r in t)void 0!==t[r]&&(e[r]=t[r]);return e}e.data={attributes:{}};var a=this.index;if(null!==a){var i=Array.prototype.slice.call(a.array);e.data.index={type:a.array.constructor.name,array:i}}var n=this.attributes;for(var r in n){var o=n[r],i=Array.prototype.slice.call(o.array);e.data.attributes[r]={itemSize:o.itemSize,type:o.array.constructor.name,array:i,normalized:o.normalized}}var s=this.groups;0<s.length&&(e.data.groups=JSON.parse(JSON.stringify(s)));var l=this.boundingSphere;return null!==l&&(e.data.boundingSphere={center:l.center.toArray(),radius:l.radius}),e},clone:function(){return new ve().copy(this)},copy:function(e){var t,r,a;this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;var i=e.index;null!==i&&this.setIndex(i.clone());var n=e.attributes;for(t in n){var o=n[t];this.addAttribute(t,o.clone())}var s=e.morphAttributes;for(t in s){var l=[],d=s[t];for(r=0,a=d.length;r<a;r++)l.push(d[r].clone());this.morphAttributes[t]=l}var c=e.groups;for(r=0,a=c.length;r<a;r++){var p=c[r];this.addGroup(p.start,p.count,p.materialIndex)}var u=e.boundingBox;null!==u&&(this.boundingBox=u.clone());var m=e.boundingSphere;return null!==m&&(this.boundingSphere=m.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this},dispose:function(){this.dispatchEvent({type:'dispose'})}},ve.MaxIndex=65535,Object.assign(ve.prototype,a.prototype),ye.prototype=Object.assign(Object.create(oe.prototype),{constructor:ye,isMesh:!0,setDrawMode:function(e){this.drawMode=e},copy:function(e){return oe.prototype.copy.call(this,e),this.drawMode=e.drawMode,this},updateMorphTargets:function(){var e=this.geometry.morphTargets;if(e!==void 0&&0<e.length){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var t=0,r=e.length;t<r;t++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[e[t].name]=t}},raycast:function(){function e(e,t,r,a,i,n,o){return le.barycoordFromPoint(e,t,r,a,x),i.multiplyScalar(x.x),n.multiplyScalar(x.y),o.multiplyScalar(x.z),i.add(n).add(o),i.clone()}function i(e,t,r,a,i,n,o){var s=e.material,l;if(l=s.side===Gt?r.intersectTriangle(n,i,a,!0,o):r.intersectTriangle(a,i,n,s.side!==Vt,o),null===l)return null;y.copy(o),y.applyMatrix4(e.matrixWorld);var d=t.ray.origin.distanceTo(y);return d<t.near||d>t.far?null:{distance:d,point:y.clone(),object:e}}function t(t,r,n,o,s,d,a,p){l.fromBufferAttribute(o,d),u.fromBufferAttribute(o,a),m.fromBufferAttribute(o,p);var c=i(t,r,n,l,u,m,v);return c&&(s&&(g.fromBufferAttribute(s,d),h.fromBufferAttribute(s,a),_.fromBufferAttribute(s,p),c.uv=e(v,l,u,m,g,h,_)),c.face=new de(d,a,p,le.normal(l,u,m)),c.faceIndex=d),c}var s=new r,d=new ae,p=new K,l=new n,u=new n,m=new n,a=new n,c=new n,f=new n,g=new o,h=new o,_=new o,x=new n,v=new n,y=new n;return function(r,n){var o=this.geometry,x=this.material,y=this.matrixWorld;if(void 0!==x&&(null===o.boundingSphere&&o.computeBoundingSphere(),p.copy(o.boundingSphere),p.applyMatrix4(y),!1!==r.ray.intersectsSphere(p))&&(s.getInverse(y),d.copy(r.ray).applyMatrix4(s),null===o.boundingBox||!1!==d.intersectsBox(o.boundingBox))){var E;if(o.isBufferGeometry){var M=o.index,S=o.attributes.position,T=o.attributes.uv,L,A,b,R,P;if(null!==M)for(R=0,P=M.count;R<P;R+=3)L=M.getX(R),A=M.getX(R+1),b=M.getX(R+2),E=t(this,r,d,S,T,L,A,b),E&&(E.faceIndex=Lt(R/3),n.push(E));else for(R=0,P=S.count;R<P;R+=3)L=R,A=R+1,b=R+2,E=t(this,r,d,S,T,L,A,b),E&&(E.index=L,n.push(E))}else if(o.isGeometry){var w=x&&x.isMultiMaterial,C=!0===w?x.materials:null,D=o.vertices,U=o.faces,N=o.faceVertexUvs[0],I,z,F,B;0<N.length&&(B=N);for(var O=0,G=U.length;O<G;O++){var V=U[O],H=!0===w?C[V.materialIndex]:x;if(void 0!==H){if(I=D[V.a],z=D[V.b],F=D[V.c],!0===H.morphTargets){var k=o.morphTargets,W=this.morphTargetInfluences;l.set(0,0,0),u.set(0,0,0),m.set(0,0,0);for(var X=0,Y=k.length,j;X<Y;X++)if(j=W[X],0!==j){var q=k[X].vertices;l.addScaledVector(a.subVectors(q[V.a],I),j),u.addScaledVector(c.subVectors(q[V.b],z),j),m.addScaledVector(f.subVectors(q[V.c],F),j)}l.add(I),u.add(z),m.add(F),I=l,z=u,F=m}if(E=i(this,r,d,I,z,F,v),E){if(B){var Z=B[O];g.copy(Z[0]),h.copy(Z[1]),_.copy(Z[2]),E.uv=e(v,I,z,F,g,h,_)}E.face=V,E.faceIndex=O,n.push(E)}}}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),Ee.prototype=Object.create(ve.prototype),Ee.prototype.constructor=Ee,Me.prototype=Object.create(ve.prototype),Me.prototype.constructor=Me,Se.prototype=Object.create(oe.prototype),Se.prototype.constructor=Se,Se.prototype.isCamera=!0,Se.prototype.getWorldDirection=function(){var e=new t;return function(t){var r=t||new n;return this.getWorldQuaternion(e),r.set(0,0,-1).applyQuaternion(e)}}(),Se.prototype.lookAt=function(){var e=new r;return function(t){e.lookAt(this.position,t,this.up),this.quaternion.setFromRotationMatrix(e)}}(),Se.prototype.clone=function(){return new this.constructor().copy(this)},Se.prototype.copy=function(e){return oe.prototype.copy.call(this,e),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this},be.prototype=Object.assign(Object.create(Se.prototype),{constructor:be,isPerspectiveCamera:!0,copy:function(e){return Se.prototype.copy.call(this,e),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this},setFocalLength:function(e){var t=0.5*this.getFilmHeight()/e;this.fov=2*Da.RAD2DEG*ft(t),this.updateProjectionMatrix()},getFocalLength:function(){var e=mt(0.5*Da.DEG2RAD*this.fov);return 0.5*this.getFilmHeight()/e},getEffectiveFOV:function(){return 2*Da.RAD2DEG*ft(mt(0.5*Da.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Rt(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/At(this.aspect,1)},setViewOffset:function(e,t,r,a,i,n){this.aspect=e/t,this.view={fullWidth:e,fullHeight:t,offsetX:r,offsetY:a,width:i,height:n},this.updateProjectionMatrix()},clearViewOffset:function(){this.view=null,this.updateProjectionMatrix()},updateProjectionMatrix:function(){var e=this.near,t=e*mt(0.5*Da.DEG2RAD*this.fov)/this.zoom,r=2*t,a=this.aspect*r,i=-0.5*a,n=this.view;if(null!==n){var o=n.fullWidth,s=n.fullHeight;i+=n.offsetX*a/o,t-=n.offsetY*r/s,a*=n.width/o,r*=n.height/s}var l=this.filmOffset;0!==l&&(i+=e*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+a,t,t-r,e,this.far)},toJSON:function(e){var t=oe.prototype.toJSON.call(this,e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}),Te.prototype=Object.assign(Object.create(Se.prototype),{constructor:Te,isOrthographicCamera:!0,copy:function(e){return Se.prototype.copy.call(this,e),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this},setViewOffset:function(e,t,r,a,i,n){this.view={fullWidth:e,fullHeight:t,offsetX:r,offsetY:a,width:i,height:n},this.updateProjectionMatrix()},clearViewOffset:function(){this.view=null,this.updateProjectionMatrix()},updateProjectionMatrix:function(){var e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),r=(this.right+this.left)/2,a=(this.top+this.bottom)/2,i=r-e,n=r+e,o=a+t,s=a-t;if(null!==this.view){var l=this.zoom/(this.view.width/this.view.fullWidth),d=this.zoom/(this.view.height/this.view.fullHeight),c=(this.right-this.left)/this.view.width,p=(this.top-this.bottom)/this.view.height;i+=c*(this.view.offsetX/l),n=i+c*(this.view.width/l),o-=p*(this.view.offsetY/d),s=o-p*(this.view.height/d)}this.projectionMatrix.makeOrthographic(i,n,o,s,this.near,this.far)},toJSON:function(e){var t=oe.prototype.toJSON.call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}});var ja=0;Ke.prototype=Object.create(oe.prototype),Ke.prototype.constructor=Ke,Ke.prototype.copy=function(e,t){return oe.prototype.copy.call(this,e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this},Ke.prototype.toJSON=function(e){var t=oe.prototype.toJSON.call(this,e);return null!==this.background&&(t.object.background=this.background.toJSON(e)),null!==this.fog&&(t.object.fog=this.fog.toJSON()),t},$e.prototype=Object.create(i.prototype),$e.prototype.constructor=$e;var qa={enabled:!1,files:{},add:function(e,t){!1===this.enabled||(this.files[e]=t)},get:function(e){return!1===this.enabled?void 0:this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}},Za=new function(e,t,r){var a=this,i=!1,n=0,o=0;this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=r,this.itemStart=function(e){o++,!1===i&&a.onStart!==void 0&&a.onStart(e,n,o),i=!0},this.itemEnd=function(e){n++,a.onProgress!==void 0&&a.onProgress(e,n,o),n===o&&(i=!1,a.onLoad!==void 0&&a.onLoad())},this.itemError=function(e){a.onError!==void 0&&a.onError(e)}};Object.assign(et.prototype,{load:function(e,t,r,a){void 0===e&&(e=''),void 0!==this.path&&(e=this.path+e);var i=this,n=qa.get(e);if(void 0!==n)return i.manager.itemStart(e),setTimeout(function(){t&&t(n),i.manager.itemEnd(e)},0),n;var o=document.createElementNS('http://www.w3.org/1999/xhtml','img');return o.addEventListener('load',function(){qa.add(e,this),t&&t(this),i.manager.itemEnd(e)},!1),o.addEventListener('error',function(t){a&&a(t),i.manager.itemError(e)},!1),void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),i.manager.itemStart(e),o.src=e,o},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this}}),Object.assign(tt.prototype,{load:function(e,t,r,a){var n=new i,o=new et(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(r){var a=0<e.search(/\.(jpg|jpeg)$/)||0===e.search(/^data\:image\/jpeg/);n.format=a?na:oa,n.image=r,n.needsUpdate=!0,void 0!==t&&t(n)},r,a),n},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this}}),rt.prototype={constructor:rt,linePrecision:1,set:function(e,t){this.ray.set(e,t)},setFromCamera:function(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,0.5).unproject(t).sub(this.ray.origin).normalize()):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld)):console.error('THREE.Raycaster: Unsupported camera type.')},intersectObject:function(e,t){var r=[];return it(e,this,r,t),r.sort(at),r},intersectObjects:function(e,t){var r=[];if(!1===Array.isArray(e))return console.warn('THREE.Raycaster.intersectObjects: objects is not an Array.'),r;for(var a=0,i=e.length;a<i;a++)it(e[a],this,r,t);return r.sort(at),r}},nt.prototype=Object.create(xe.prototype),nt.prototype.constructor=nt,ot.prototype=Object.create(ve.prototype),ot.prototype.constructor=ot,st.prototype=Object.create(xe.prototype),st.prototype.constructor=st,lt.prototype=Object.create(ve.prototype),lt.prototype.constructor=lt,dt.prototype=Object.create(xe.prototype),dt.prototype.constructor=dt,ct.prototype=Object.create(ve.prototype),ct.prototype.constructor=ct,pt.prototype=Object.create(xe.prototype),pt.prototype.constructor=pt,ut.prototype=Object.create(ve.prototype),ut.prototype.constructor=ut,THREE.VRControls=function(e,t){var r=this,a=new THREE.Matrix4,i=null,n,o;'VRFrameData'in window&&(i=new VRFrameData),navigator.getVRDisplays&&navigator.getVRDisplays().then(function(e){o=e,0<e.length?n=e[0]:t&&t('VR input not available.')}).catch(function(){console.warn('THREE.VRControls: Unable to get VR Displays')}),this.scale=1,this.standing=!1,this.userHeight=1.6,this.getVRDisplay=function(){return n},this.setVRDisplay=function(e){n=e},this.getVRDisplays=function(){return console.warn('THREE.VRControls: getVRDisplays() is being deprecated.'),o},this.getStandingMatrix=function(){return a},this.update=function(){if(n){var t;n.getFrameData?(n.getFrameData(i),t=i.pose):n.getPose&&(t=n.getPose()),null!==t.orientation&&e.quaternion.fromArray(t.orientation),null===t.position?e.position.set(0,0,0):e.position.fromArray(t.position),this.standing&&(n.stageParameters?(e.updateMatrix(),a.fromArray(n.stageParameters.sittingToStandingTransform),e.applyMatrix(a)):e.position.setY(e.position.y+this.userHeight)),e.position.multiplyScalar(r.scale)}},this.resetPose=function(){n&&n.resetPose()},this.resetSensor=function(){console.warn('THREE.VRControls: .resetSensor() is now .resetPose().'),this.resetPose()},this.zeroSensor=function(){console.warn('THREE.VRControls: .zeroSensor() is now .resetPose().'),this.resetPose()},this.dispose=function(){n=null}},THREE.VREffect=function(e,t){function r(){var t=m.isPresenting;if(m.isPresenting=void 0!==d&&d.isPresenting,m.isPresenting){var r=d.getEyeParameters('left'),a=r.renderWidth,i=r.renderHeight;t||(h=e.getPixelRatio(),f=e.getSize(),e.setPixelRatio(1),e.setSize(2*a,i,!1))}else t&&(e.setPixelRatio(h),e.setSize(f.width,f.height,g))}function a(e){var t=2/(e.leftTan+e.rightTan),r=0.5*((e.leftTan-e.rightTan)*t),a=2/(e.upTan+e.downTan),i=0.5*((e.upTan-e.downTan)*a);return{scale:[t,a],offset:[r,i]}}function i(e,t,r,i){t=void 0===t||t,r=void 0===r?0.01:r,i=void 0===i?1e4:i;var n=t?-1:1,o=new THREE.Matrix4,s=o.elements,l=a(e);return s[0]=l.scale[0],s[1]=0,s[2]=l.offset[0]*n,s[3]=0,s[4]=0,s[5]=l.scale[1],s[6]=-l.offset[1]*n,s[7]=0,s[8]=0,s[9]=0,s[10]=i/(r-i)*-n,s[11]=i*r/(r-i),s[12]=0,s[13]=0,s[14]=n,s[15]=0,o.transpose(),o}function n(e,t,r,a){var n=Pt/180,o={upTan:mt(e.upDegrees*n),downTan:mt(e.downDegrees*n),leftTan:mt(e.leftDegrees*n),rightTan:mt(e.rightDegrees*n)};return i(o,t,r,a)}var o=new THREE.Vector3,s=new THREE.Vector3,l=null,d,c,p,u;'VRFrameData'in window&&(l=new window.VRFrameData),navigator.getVRDisplays&&navigator.getVRDisplays().then(function(e){c=e,0<e.length?d=e[0]:t&&t('HMD not available')}).catch(function(){console.warn('THREE.VREffect: Unable to get VR Displays')}),this.isPresenting=!1,this.scale=1;var m=this,f=e.getSize(),g=!1,h=e.getPixelRatio();this.getVRDisplay=function(){return d},this.setVRDisplay=function(e){d=e},this.getVRDisplays=function(){return console.warn('THREE.VREffect: getVRDisplays() is being deprecated.'),c},this.setSize=function(t,r,a){if(f={width:t,height:r},g=a,m.isPresenting){var i=d.getEyeParameters('left');e.setPixelRatio(1),e.setSize(2*i.renderWidth,i.renderHeight,!1)}else e.setPixelRatio(h),e.setSize(t,r,a)};var _=e.domElement,x=[0,0,0.5,1],v=[0.5,0,0.5,1];window.addEventListener('vrdisplaypresentchange',r,!1),this.setFullScreen=function(e){return new Promise(function(t,r){return void 0===d?void r(new Error('No VR hardware found.')):m.isPresenting===e?void t():void(e?t(d.requestPresent([{source:_}])):t(d.exitPresent()))})},this.requestPresent=function(){return this.setFullScreen(!0)},this.exitPresent=function(){return this.setFullScreen(!1)},this.requestAnimationFrame=function(e){return void 0===d?window.requestAnimationFrame(e):d.requestAnimationFrame(e)},this.cancelAnimationFrame=function(e){d===void 0?window.cancelAnimationFrame(e):d.cancelAnimationFrame(e)},this.submitFrame=function(){d!==void 0&&m.isPresenting&&d.submitFrame()},this.autoSubmitFrame=!0;var y=new THREE.PerspectiveCamera;y.layers.enable(1);var E=new THREE.PerspectiveCamera;E.layers.enable(2),this.render=function(t,r,a,i){if(d&&m.isPresenting){var c=t.autoUpdate;c&&(t.updateMatrixWorld(),t.autoUpdate=!1);var f=d.getEyeParameters('left'),g=d.getEyeParameters('right');o.fromArray(f.offset),s.fromArray(g.offset),Array.isArray(t)&&(console.warn('THREE.VREffect.render() no longer supports arrays. Use object.layers instead.'),t=t[0]);var h=e.getSize(),_=d.getLayers(),M,S;if(_.length){var b=_[0];M=null!==b.leftBounds&&4===b.leftBounds.length?b.leftBounds:x,S=null!==b.rightBounds&&4===b.rightBounds.length?b.rightBounds:v}else M=x,S=v;p={x:St(h.width*M[0]),y:St(h.height*M[1]),width:St(h.width*M[2]),height:St(h.height*M[3])},u={x:St(h.width*S[0]),y:St(h.height*S[1]),width:St(h.width*S[2]),height:St(h.height*S[3])},a?(e.setRenderTarget(a),a.scissorTest=!0):(e.setRenderTarget(null),e.setScissorTest(!0)),(e.autoClear||i)&&e.clear(),null===r.parent&&r.updateMatrixWorld(),r.matrixWorld.decompose(y.position,y.quaternion,y.scale),r.matrixWorld.decompose(E.position,E.quaternion,E.scale);var T=this.scale;return y.translateOnAxis(o,T),E.translateOnAxis(s,T),d.getFrameData?(d.depthNear=r.near,d.depthFar=r.far,d.getFrameData(l),y.projectionMatrix.elements=l.leftProjectionMatrix,E.projectionMatrix.elements=l.rightProjectionMatrix):(y.projectionMatrix=n(f.fieldOfView,!0,r.near,r.far),E.projectionMatrix=n(g.fieldOfView,!0,r.near,r.far)),a?(a.viewport.set(p.x,p.y,p.width,p.height),a.scissor.set(p.x,p.y,p.width,p.height)):(e.setViewport(p.x,p.y,p.width,p.height),e.setScissor(p.x,p.y,p.width,p.height)),e.render(t,y,a,i),a?(a.viewport.set(u.x,u.y,u.width,u.height),a.scissor.set(u.x,u.y,u.width,u.height)):(e.setViewport(u.x,u.y,u.width,u.height),e.setScissor(u.x,u.y,u.width,u.height)),e.render(t,E,a,i),a?(a.viewport.set(0,0,h.width,h.height),a.scissor.set(0,0,h.width,h.height),a.scissorTest=!1,e.setRenderTarget(null)):(e.setViewport(0,0,h.width,h.height),e.setScissorTest(!1)),c&&(t.autoUpdate=!0),void(m.autoSubmitFrame&&m.submitFrame())}e.render(t,r,a,i)},this.dispose=function(){window.removeEventListener('vrdisplaypresentchange',r,!1)}},e.WebGLRenderer=function(e){function t(){return null===ue?Ne:1}function a(){st.init(),st.scissor(_e.copy(Ie).multiplyScalar(Ne)),st.viewport(Se.copy(Fe).multiplyScalar(Ne)),st.buffers.color.setClear(we.r,we.g,we.b,Ce,Q)}function i(){pe=null,he=null,ge='',fe=-1,st.reset()}function o(e){e.preventDefault(),i(),a(),lt.clear()}function s(e){var t=e.target;t.removeEventListener('dispose',s),l(t)}function l(e){d(e),lt.delete(e)}function d(e){var t=lt.get(e).program;e.program=void 0,t!==void 0&&pt.releaseProgram(t)}function c(e,t,r,a){var i;if(r&&r.isInstancedBufferGeometry&&(i=nt.get('ANGLE_instanced_arrays'),null===i))return void console.error('THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');a===void 0&&(a=0),st.initAttributes();var n=r.attributes,o=t.getAttributes(),s=e.defaultAttributeValues;for(var l in o){var d=o[l];if(0<=d){var c=n[l];if(c!==void 0){var p=c.normalized,u=c.itemSize,m=ct.getAttributeProperties(c),f=m.__webglBuffer,g=m.type,h=m.bytesPerElement;if(c.isInterleavedBufferAttribute){var _=c.data,x=_.stride,v=c.offset;_&&_.isInstancedInterleavedBuffer?(st.enableAttributeAndDivisor(d,_.meshPerAttribute,i),r.maxInstancedCount===void 0&&(r.maxInstancedCount=_.meshPerAttribute*_.count)):st.enableAttribute(d),at.bindBuffer(at.ARRAY_BUFFER,f),at.vertexAttribPointer(d,u,g,p,x*h,(a*x+v)*h)}else c.isInstancedBufferAttribute?(st.enableAttributeAndDivisor(d,c.meshPerAttribute,i),void 0===r.maxInstancedCount&&(r.maxInstancedCount=c.meshPerAttribute*c.count)):st.enableAttribute(d),at.bindBuffer(at.ARRAY_BUFFER,f),at.vertexAttribPointer(d,u,g,p,0,a*u*h)}else if(s!==void 0){var y=s[l];if(y!==void 0)switch(y.length){case 2:at.vertexAttrib2fv(d,y);break;case 3:at.vertexAttrib3fv(d,y);break;case 4:at.vertexAttrib4fv(d,y);break;default:at.vertexAttrib1fv(d,y);}}}}st.disableUnusedAttributes()}function p(e,t){return xt(t[0])-xt(e[0])}function u(e,t){return e.object.renderOrder===t.object.renderOrder?e.material.program&&t.material.program&&e.material.program!==t.material.program?e.material.program.id-t.material.program.id:e.material.id===t.material.id?e.z===t.z?e.id-t.id:e.z-t.z:e.material.id-t.material.id:e.object.renderOrder-t.object.renderOrder}function m(e,t){return e.object.renderOrder===t.object.renderOrder?e.z===t.z?e.id-t.id:t.z-e.z:e.object.renderOrder-t.object.renderOrder}function f(e,t,r,a,i){var n,o;r.transparent?(n=ie,o=++ne):(n=ee,o=++ae);var s=n[o];s===void 0?(s={id:e.id,object:e,geometry:t,material:r,z:Ke.z,group:i},n.push(s)):(s.id=e.id,s.object=e,s.geometry=t,s.material=r,s.z=Ke.z,s.group=i)}function g(e){var t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),He.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),_(He)}function h(e){return He.center.set(0,0,0),He.radius=0.7071067811865476,He.applyMatrix4(e.matrixWorld),_(He)}function _(e){if(!Be.intersectsSphere(e))return!1;var t=Oe.numPlanes;if(0===t)return!0;var r=de.clippingPlanes,a=e.center,n=-e.radius,o=0;do if(r[o].distanceToPoint(a)<n)return!1;while(++o!==t);return!0}function x(e,t){if(!1!==e.visible){var r=0!==(e.layers.mask&t.layers.mask);if(r)if(e.isLight)$.push(e);else if(e.isSprite)(!1===e.frustumCulled||!0===h(e))&&se.push(e);else if(e.isLensFlare)le.push(e);else if(e.isImmediateRenderObject)!0===de.sortObjects&&(Ke.setFromMatrixPosition(e.matrixWorld),Ke.applyMatrix4(We)),f(e,null,e.material,Ke.z,null);else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.update(),!1===e.frustumCulled||!0===g(e))){var a=e.material;if(!0===a.visible){!0===de.sortObjects&&(Ke.setFromMatrixPosition(e.matrixWorld),Ke.applyMatrix4(We));var n=ct.update(e);if(a.isMultiMaterial)for(var o=n.groups,s=a.materials,d=0,i=o.length;d<i;d++){var l=o[d],c=s[l.materialIndex];!0===c.visible&&f(e,n,c,Ke.z,l)}else f(e,n,a,Ke.z,null)}}for(var p=e.children,d=0,i=p.length;d<i;d++)x(p[d],t)}}function v(e,t,r,a){for(var n=0,i=e.length;n<i;n++){var o=e[n],s=o.object,l=o.geometry,d=void 0===a?o.material:a,c=o.group;if(s.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,s.matrixWorld),s.normalMatrix.getNormalMatrix(s.modelViewMatrix),s.onBeforeRender(de,t,r,l,d,c),s.isImmediateRenderObject){E(d);var p=M(r,t.fog,d,s);ge='',s.render(function(e){de.renderBufferImmediate(e,p,d)})}else de.renderBufferDirect(r,t.fog,l,d,s,c);s.onAfterRender(de,t,r,l,d,c)}}function y(e,t,r){var a=lt.get(e),n=pt.getParameters(e,tt,t,Oe.numPlanes,Oe.numIntersection,r),o=pt.getProgramCode(e,n),l=a.program,c=!0;if(l===void 0)e.addEventListener('dispose',s);else if(l.code!==o)d(e);else{if(n.shaderID!==void 0)return;c=!1}if(c){if(n.shaderID){var p=ka[n.shaderID];a.__webglShader={name:e.type,uniforms:Oa.clone(p.uniforms),vertexShader:p.vertexShader,fragmentShader:p.fragmentShader}}else a.__webglShader={name:e.type,uniforms:e.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader};e.__webglShader=a.__webglShader,l=pt.acquireProgram(e,n,o),a.program=l,e.program=l}var u=l.getAttributes();if(e.morphTargets){e.numSupportedMorphTargets=0;for(var m=0;m<de.maxMorphTargets;m++)0<=u['morphTarget'+m]&&e.numSupportedMorphTargets++}if(e.morphNormals){e.numSupportedMorphNormals=0;for(var m=0;m<de.maxMorphNormals;m++)0<=u['morphNormal'+m]&&e.numSupportedMorphNormals++}var i=a.__webglShader.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(a.numClippingPlanes=Oe.numPlanes,a.numIntersection=Oe.numIntersection,i.clippingPlanes=Oe.uniform),a.fog=t,a.lightsHash=tt.hash,e.lights&&(i.ambientLightColor.value=tt.ambient,i.directionalLights.value=tt.directional,i.spotLights.value=tt.spot,i.rectAreaLights.value=tt.rectArea,i.pointLights.value=tt.point,i.hemisphereLights.value=tt.hemi,i.directionalShadowMap.value=tt.directionalShadowMap,i.directionalShadowMatrix.value=tt.directionalShadowMatrix,i.spotShadowMap.value=tt.spotShadowMap,i.spotShadowMatrix.value=tt.spotShadowMatrix,i.pointShadowMap.value=tt.pointShadowMap,i.pointShadowMatrix.value=tt.pointShadowMatrix);var f=a.program.getUniforms(),g=V.seqWithValue(f.seq,i);a.uniformsList=g}function E(e){e.side===Vt?st.disable(at.CULL_FACE):st.enable(at.CULL_FACE),st.setFlipSided(e.side===Gt),!0===e.transparent?st.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha):st.setBlending(Xt),st.setDepthFunc(e.depthFunc),st.setDepthTest(e.depthTest),st.setDepthWrite(e.depthWrite),st.setColorWrite(e.colorWrite),st.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)}function M(e,t,r,a){Pe=0;var i=lt.get(r);if(Ge&&(Ve||e!==he)){var n=e===he&&r.id===fe;Oe.setState(r.clippingPlanes,r.clipIntersection,r.clipShadows,e,i,n)}!1===r.needsUpdate&&(void 0===i.program?r.needsUpdate=!0:r.fog&&i.fog!==t?r.needsUpdate=!0:r.lights&&i.lightsHash!==tt.hash?r.needsUpdate=!0:void 0!==i.numClippingPlanes&&(i.numClippingPlanes!==Oe.numPlanes||i.numIntersection!==Oe.numIntersection)&&(r.needsUpdate=!0)),r.needsUpdate&&(y(r,t,a),r.needsUpdate=!1);var o=!1,s=!1,l=!1,d=i.program,c=d.getUniforms(),p=i.__webglShader.uniforms;if(d.id!==pe&&(at.useProgram(d.program),pe=d.id,o=!0,s=!0,l=!0),r.id!==fe&&(fe=r.id,s=!0),o||e!==he){if(c.set(at,e,'projectionMatrix'),ot.logarithmicDepthBuffer&&c.setValue(at,'logDepthBufFC',2/(Tt(e.far+1)/bt)),e!==he&&(he=e,s=!0,l=!0),r.isShaderMaterial||r.isMeshPhongMaterial||r.isMeshStandardMaterial||r.envMap){var u=c.map.cameraPosition;void 0!==u&&u.setValue(at,Ke.setFromMatrixPosition(e.matrixWorld))}(r.isMeshPhongMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial||r.skinning)&&c.setValue(at,'viewMatrix',e.matrixWorldInverse),c.set(at,de,'toneMappingExposure'),c.set(at,de,'toneMappingWhitePoint')}if(r.skinning){c.setOptional(at,a,'bindMatrix'),c.setOptional(at,a,'bindMatrixInverse');var m=a.skeleton;m&&(ot.floatVertexTextures&&m.useVertexTexture?(c.set(at,m,'boneTexture'),c.set(at,m,'boneTextureWidth'),c.set(at,m,'boneTextureHeight')):c.setOptional(at,m,'boneMatrices'))}return s&&(r.lights&&N(p,l),t&&r.fog&&A(p,t),(r.isMeshBasicMaterial||r.isMeshLambertMaterial||r.isMeshPhongMaterial||r.isMeshStandardMaterial||r.isMeshNormalMaterial||r.isMeshDepthMaterial)&&S(p,r),r.isLineBasicMaterial?b(p,r):r.isLineDashedMaterial?(b(p,r),T(p,r)):r.isPointsMaterial?L(p,r):r.isMeshLambertMaterial?R(p,r):r.isMeshToonMaterial?w(p,r):r.isMeshPhongMaterial?P(p,r):r.isMeshPhysicalMaterial?D(p,r):r.isMeshStandardMaterial?C(p,r):r.isMeshDepthMaterial?r.displacementMap&&(p.displacementMap.value=r.displacementMap,p.displacementScale.value=r.displacementScale,p.displacementBias.value=r.displacementBias):r.isMeshNormalMaterial&&U(p,r),void 0!==p.ltcMat&&(p.ltcMat.value=THREE.UniformsLib.LTC_MAT_TEXTURE),void 0!==p.ltcMag&&(p.ltcMag.value=THREE.UniformsLib.LTC_MAG_TEXTURE),V.upload(at,i.uniformsList,p,de)),c.set(at,a,'modelViewMatrix'),c.set(at,a,'normalMatrix'),c.setValue(at,'modelMatrix',a.matrixWorld),d}function S(e,t){e.opacity.value=t.opacity,e.diffuse.value=t.color,t.emissive&&e.emissive.value.copy(t.emissive).multiplyScalar(t.emissiveIntensity),e.map.value=t.map,e.specularMap.value=t.specularMap,e.alphaMap.value=t.alphaMap,t.lightMap&&(e.lightMap.value=t.lightMap,e.lightMapIntensity.value=t.lightMapIntensity),t.aoMap&&(e.aoMap.value=t.aoMap,e.aoMapIntensity.value=t.aoMapIntensity);var r;if(t.map?r=t.map:t.specularMap?r=t.specularMap:t.displacementMap?r=t.displacementMap:t.normalMap?r=t.normalMap:t.bumpMap?r=t.bumpMap:t.roughnessMap?r=t.roughnessMap:t.metalnessMap?r=t.metalnessMap:t.alphaMap?r=t.alphaMap:t.emissiveMap&&(r=t.emissiveMap),void 0!==r){r.isWebGLRenderTarget&&(r=r.texture);var a=r.offset,i=r.repeat;e.offsetRepeat.value.set(a.x,a.y,i.x,i.y)}e.envMap.value=t.envMap,e.flipEnvMap.value=t.envMap&&t.envMap.isCubeTexture?-1:1,e.reflectivity.value=t.reflectivity,e.refractionRatio.value=t.refractionRatio}function b(e,t){e.diffuse.value=t.color,e.opacity.value=t.opacity}function T(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}function L(e,t){if(e.diffuse.value=t.color,e.opacity.value=t.opacity,e.size.value=t.size*Ne,e.scale.value=0.5*Ue,e.map.value=t.map,null!==t.map){var r=t.map.offset,a=t.map.repeat;e.offsetRepeat.value.set(r.x,r.y,a.x,a.y)}}function A(e,t){e.fogColor.value=t.color,t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)}function R(e,t){t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap)}function P(e,t){e.specular.value=t.specular,e.shininess.value=At(t.shininess,1e-4),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale)),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function w(e,t){P(e,t),t.gradientMap&&(e.gradientMap.value=t.gradientMap)}function C(e,t){e.roughness.value=t.roughness,e.metalness.value=t.metalness,t.roughnessMap&&(e.roughnessMap.value=t.roughnessMap),t.metalnessMap&&(e.metalnessMap.value=t.metalnessMap),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale)),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),t.envMap&&(e.envMapIntensity.value=t.envMapIntensity)}function D(e,t){e.clearCoat.value=t.clearCoat,e.clearCoatRoughness.value=t.clearCoatRoughness,C(e,t)}function U(e,t){t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale)),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function N(e,t){e.ambientLightColor.needsUpdate=t,e.directionalLights.needsUpdate=t,e.pointLights.needsUpdate=t,e.spotLights.needsUpdate=t,e.rectAreaLights.needsUpdate=t,e.hemisphereLights.needsUpdate=t}function I(e){for(var t=0,r=0,a=e.length,i;r<a;r++)i=e[r],i.castShadow&&(tt.shadows[t++]=i);tt.shadows.length=t}function z(e,t){var a=0,i=0,n=0,o=t.matrixWorldInverse,s=0,d=0,c=0,p=0,u=0,m,l,f,g,h,_,x;for(m=0,l=e.length;m<l;m++)if(f=e[m],g=f.color,h=f.intensity,_=f.distance,x=f.shadow&&f.shadow.map?f.shadow.map.texture:null,f.isAmbientLight)a+=g.r*h,i+=g.g*h,n+=g.b*h;else if(f.isDirectionalLight){var v=ut.get(f);v.color.copy(f.color).multiplyScalar(f.intensity),v.direction.setFromMatrixPosition(f.matrixWorld),Ke.setFromMatrixPosition(f.target.matrixWorld),v.direction.sub(Ke),v.direction.transformDirection(o),v.shadow=f.castShadow,f.castShadow&&(v.shadowBias=f.shadow.bias,v.shadowRadius=f.shadow.radius,v.shadowMapSize=f.shadow.mapSize),tt.directionalShadowMap[s]=x,tt.directionalShadowMatrix[s]=f.shadow.matrix,tt.directional[s++]=v}else if(f.isSpotLight){var v=ut.get(f);v.position.setFromMatrixPosition(f.matrixWorld),v.position.applyMatrix4(o),v.color.copy(g).multiplyScalar(h),v.distance=_,v.direction.setFromMatrixPosition(f.matrixWorld),Ke.setFromMatrixPosition(f.target.matrixWorld),v.direction.sub(Ke),v.direction.transformDirection(o),v.coneCos=Et(f.angle),v.penumbraCos=Et(f.angle*(1-f.penumbra)),v.decay=0===f.distance?0:f.decay,v.shadow=f.castShadow,f.castShadow&&(v.shadowBias=f.shadow.bias,v.shadowRadius=f.shadow.radius,v.shadowMapSize=f.shadow.mapSize),tt.spotShadowMap[c]=x,tt.spotShadowMatrix[c]=f.shadow.matrix,tt.spot[c++]=v}else if(f.isRectAreaLight){var v=ut.get(f);v.color.copy(g).multiplyScalar(h/(f.width*f.height)),v.position.setFromMatrixPosition(f.matrixWorld),v.position.applyMatrix4(o),et.identity(),$e.copy(f.matrixWorld),$e.premultiply(o),et.extractRotation($e),v.halfWidth.set(0.5*f.width,0,0),v.halfHeight.set(0,0.5*f.height,0),v.halfWidth.applyMatrix4(et),v.halfHeight.applyMatrix4(et),tt.rectArea[p++]=v}else if(f.isPointLight){var v=ut.get(f);v.position.setFromMatrixPosition(f.matrixWorld),v.position.applyMatrix4(o),v.color.copy(f.color).multiplyScalar(f.intensity),v.distance=f.distance,v.decay=0===f.distance?0:f.decay,v.shadow=f.castShadow,f.castShadow&&(v.shadowBias=f.shadow.bias,v.shadowRadius=f.shadow.radius,v.shadowMapSize=f.shadow.mapSize),tt.pointShadowMap[d]=x,void 0===tt.pointShadowMatrix[d]&&(tt.pointShadowMatrix[d]=new r),Ke.setFromMatrixPosition(f.matrixWorld).negate(),tt.pointShadowMatrix[d].identity().setPosition(Ke),tt.point[d++]=v}else if(f.isHemisphereLight){var v=ut.get(f);v.direction.setFromMatrixPosition(f.matrixWorld),v.direction.transformDirection(o),v.direction.normalize(),v.skyColor.copy(f.color).multiplyScalar(h),v.groundColor.copy(f.groundColor).multiplyScalar(h),tt.hemi[u++]=v}tt.ambient[0]=a,tt.ambient[1]=i,tt.ambient[2]=n,tt.directional.length=s,tt.spot.length=c,tt.rectArea.length=p,tt.point.length=d,tt.hemi.length=u,tt.hash=s+','+d+','+c+','+p+','+u+','+tt.shadows.length}function F(e){var t;if(e===Fr)return at.REPEAT;if(e===Br)return at.CLAMP_TO_EDGE;if(e===Or)return at.MIRRORED_REPEAT;if(e===Gr)return at.NEAREST;if(e===Vr)return at.NEAREST_MIPMAP_NEAREST;if(e===Hr)return at.NEAREST_MIPMAP_LINEAR;if(e===kr)return at.LINEAR;if(e===Wr)return at.LINEAR_MIPMAP_NEAREST;if(e===Xr)return at.LINEAR_MIPMAP_LINEAR;if(e===Yr)return at.UNSIGNED_BYTE;if(e===ea)return at.UNSIGNED_SHORT_4_4_4_4;if(e===ta)return at.UNSIGNED_SHORT_5_5_5_1;if(e===ra)return at.UNSIGNED_SHORT_5_6_5;if(e===jr)return at.BYTE;if(e===qr)return at.SHORT;if(e===Zr)return at.UNSIGNED_SHORT;if(e===Qr)return at.INT;if(e===Jr)return at.UNSIGNED_INT;if(e===Kr)return at.FLOAT;if(e===$r&&(t=nt.get('OES_texture_half_float'),null!==t))return t.HALF_FLOAT_OES;if(e===ia)return at.ALPHA;if(e===na)return at.RGB;if(e===oa)return at.RGBA;if(e===sa)return at.LUMINANCE;if(e===la)return at.LUMINANCE_ALPHA;if(e===da)return at.DEPTH_COMPONENT;if(e===ca)return at.DEPTH_STENCIL;if(e===Jt)return at.FUNC_ADD;if(e===Kt)return at.FUNC_SUBTRACT;if(e===$t)return at.FUNC_REVERSE_SUBTRACT;if(e===rr)return at.ZERO;if(e===ar)return at.ONE;if(e===ir)return at.SRC_COLOR;if(e===nr)return at.ONE_MINUS_SRC_COLOR;if(e===or)return at.SRC_ALPHA;if(e===sr)return at.ONE_MINUS_SRC_ALPHA;if(e===lr)return at.DST_ALPHA;if(e===dr)return at.ONE_MINUS_DST_ALPHA;if(e===cr)return at.DST_COLOR;if(e===pr)return at.ONE_MINUS_DST_COLOR;if(e===ur)return at.SRC_ALPHA_SATURATE;if((e===pa||e===ua||e===ma||e===fa)&&(t=nt.get('WEBGL_compressed_texture_s3tc'),null!==t)){if(e===pa)return t.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===ua)return t.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===ma)return t.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===fa)return t.COMPRESSED_RGBA_S3TC_DXT5_EXT}if((e===ga||e===ha||e===_a||e===xa)&&(t=nt.get('WEBGL_compressed_texture_pvrtc'),null!==t)){if(e===ga)return t.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===ha)return t.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===_a)return t.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===xa)return t.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(e===va&&(t=nt.get('WEBGL_compressed_texture_etc1'),null!==t))return t.COMPRESSED_RGB_ETC1_WEBGL;if((e===er||e===tr)&&(t=nt.get('EXT_blend_minmax'),null!==t)){if(e===er)return t.MIN_EXT;if(e===tr)return t.MAX_EXT}return e===aa&&(t=nt.get('WEBGL_depth_texture'),null!==t)?t.UNSIGNED_INT_24_8_WEBGL:0}console.log('THREE.WebGLRenderer',Dt),e=e||{};var B=e.canvas===void 0?document.createElementNS('http://www.w3.org/1999/xhtml','canvas'):e.canvas,O=e.context===void 0?null:e.context,G=e.alpha!==void 0&&e.alpha,W=!(e.depth!==void 0)||e.depth,j=!(e.stencil!==void 0)||e.stencil,q=e.antialias!==void 0&&e.antialias,Q=!(e.premultipliedAlpha!==void 0)||e.premultipliedAlpha,J=e.preserveDrawingBuffer!==void 0&&e.preserveDrawingBuffer,$=[],ee=[],ae=-1,ie=[],ne=-1,oe=new Float32Array(8),se=[],le=[];this.domElement=B,this.context=null,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyCorrectLights=!1,this.toneMapping=Tr,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,this.maxMorphTargets=8,this.maxMorphNormals=4;var de=this,pe=null,ue=null,me=null,fe=-1,ge='',he=null,_e=new H,xe=null,Se=new H,Pe=0,we=new k(0),Ce=0,De=B.width,Ue=B.height,Ne=1,Ie=new H(0,0,De,Ue),ze=!1,Fe=new H(0,0,De,Ue),Be=new te,Oe=new Je,Ge=!1,Ve=!1,He=new K,We=new r,Ke=new n,$e=new r,et=new r,tt={hash:'',ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],shadows:[]},rt={calls:0,vertices:0,faces:0,points:0};this.info={render:rt,memory:{geometries:0,textures:0},programs:null};var at;try{var it={alpha:G,depth:W,stencil:j,antialias:q,premultipliedAlpha:Q,preserveDrawingBuffer:J};if(at=O||B.getContext('webgl',it)||B.getContext('experimental-webgl',it),null===at)if(null!==B.getContext('webgl'))throw'Error creating WebGL context with your selected attributes.';else throw'Error creating WebGL context.';void 0===at.getShaderPrecisionFormat&&(at.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}}),B.addEventListener('webglcontextlost',o,!1)}catch(e){console.error('THREE.WebGLRenderer: '+e)}var nt=new Qe(at);nt.get('WEBGL_depth_texture'),nt.get('OES_texture_float'),nt.get('OES_texture_float_linear'),nt.get('OES_texture_half_float'),nt.get('OES_texture_half_float_linear'),nt.get('OES_standard_derivatives'),nt.get('ANGLE_instanced_arrays'),nt.get('OES_element_index_uint')&&(ve.MaxIndex=4294967296);var ot=new Ze(at,nt,e),st=new qe(at,nt,F),lt=new je,dt=new Ye(at,nt,st,lt,ot,F,this.info),ct=new Xe(at,lt,this.info),pt=new ke(this,ot),ut=new Re;this.info.programs=pt.programs;var mt=new Ae(at,nt,rt),ft=new Le(at,nt,rt),gt,ht,_t,vt;a(),this.context=at,this.capabilities=ot,this.extensions=nt,this.properties=lt,this.state=st;var yt=new re(this,tt,ct,ot);this.shadowMap=yt;var Mt=new Y(this,se),St=new X(this,le);this.getContext=function(){return at},this.getContextAttributes=function(){return at.getContextAttributes()},this.forceContextLoss=function(){nt.get('WEBGL_lose_context').loseContext()},this.getMaxAnisotropy=function(){return ot.getMaxAnisotropy()},this.getPrecision=function(){return ot.precision},this.getPixelRatio=function(){return Ne},this.setPixelRatio=function(e){void 0===e||(Ne=e,this.setSize(Fe.z,Fe.w,!1))},this.getSize=function(){return{width:De,height:Ue}},this.setSize=function(e,t,r){De=e,Ue=t,B.width=e*Ne,B.height=t*Ne,!1!==r&&(B.style.width=e+'px',B.style.height=t+'px'),this.setViewport(0,0,e,t)},this.setViewport=function(e,t,r,a){st.viewport(Fe.set(e,t,r,a))},this.setScissor=function(e,t,r,a){st.scissor(Ie.set(e,t,r,a))},this.setScissorTest=function(e){st.setScissorTest(ze=e)},this.getClearColor=function(){return we},this.setClearColor=function(e,t){we.set(e),Ce=t===void 0?1:t,st.buffers.color.setClear(we.r,we.g,we.b,Ce,Q)},this.getClearAlpha=function(){return Ce},this.setClearAlpha=function(e){Ce=e,st.buffers.color.setClear(we.r,we.g,we.b,Ce,Q)},this.clear=function(e,t,r){var a=0;(e===void 0||e)&&(a|=at.COLOR_BUFFER_BIT),(t===void 0||t)&&(a|=at.DEPTH_BUFFER_BIT),(r===void 0||r)&&(a|=at.STENCIL_BUFFER_BIT),at.clear(a)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.clearTarget=function(e,t,r,a){this.setRenderTarget(e),this.clear(t,r,a)},this.resetGLState=i,this.dispose=function(){ie=[],ne=-1,ee=[],ae=-1,B.removeEventListener('webglcontextlost',o,!1)},this.renderBufferImmediate=function(e,t,r){st.initAttributes();var a=lt.get(e);e.hasPositions&&!a.position&&(a.position=at.createBuffer()),e.hasNormals&&!a.normal&&(a.normal=at.createBuffer()),e.hasUvs&&!a.uv&&(a.uv=at.createBuffer()),e.hasColors&&!a.color&&(a.color=at.createBuffer());var n=t.getAttributes();if(e.hasPositions&&(at.bindBuffer(at.ARRAY_BUFFER,a.position),at.bufferData(at.ARRAY_BUFFER,e.positionArray,at.DYNAMIC_DRAW),st.enableAttribute(n.position),at.vertexAttribPointer(n.position,3,at.FLOAT,!1,0,0)),e.hasNormals){if(at.bindBuffer(at.ARRAY_BUFFER,a.normal),!r.isMeshPhongMaterial&&!r.isMeshStandardMaterial&&!r.isMeshNormalMaterial&&r.shading===Ht)for(var o=0,i=3*e.count;o<i;o+=9){var s=e.normalArray,l=(s[o+0]+s[o+3]+s[o+6])/3,d=(s[o+1]+s[o+4]+s[o+7])/3,c=(s[o+2]+s[o+5]+s[o+8])/3;s[o+0]=l,s[o+1]=d,s[o+2]=c,s[o+3]=l,s[o+4]=d,s[o+5]=c,s[o+6]=l,s[o+7]=d,s[o+8]=c}at.bufferData(at.ARRAY_BUFFER,e.normalArray,at.DYNAMIC_DRAW),st.enableAttribute(n.normal),at.vertexAttribPointer(n.normal,3,at.FLOAT,!1,0,0)}e.hasUvs&&r.map&&(at.bindBuffer(at.ARRAY_BUFFER,a.uv),at.bufferData(at.ARRAY_BUFFER,e.uvArray,at.DYNAMIC_DRAW),st.enableAttribute(n.uv),at.vertexAttribPointer(n.uv,2,at.FLOAT,!1,0,0)),e.hasColors&&r.vertexColors!==Wt&&(at.bindBuffer(at.ARRAY_BUFFER,a.color),at.bufferData(at.ARRAY_BUFFER,e.colorArray,at.DYNAMIC_DRAW),st.enableAttribute(n.color),at.vertexAttribPointer(n.color,3,at.FLOAT,!1,0,0)),st.disableUnusedAttributes(),at.drawArrays(at.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,r,a,n,o,s){E(n);var d=M(e,r,n,o),u=!1,m=a.id+'_'+d.id+'_'+n.wireframe;m!==ge&&(ge=m,u=!0);var f=o.morphTargetInfluences;if(f!==void 0){for(var g=[],h=0,i=f.length,l;h<i;h++)l=f[h],g.push([l,h]);g.sort(p),8<g.length&&(g.length=8);for(var _=a.morphAttributes,h=0,i=g.length,l;h<i;h++)if(l=g[h],oe[h]=l[0],0!==l[0]){var x=l[1];!0===n.morphTargets&&_.position&&a.addAttribute('morphTarget'+h,_.position[x]),!0===n.morphNormals&&_.normal&&a.addAttribute('morphNormal'+h,_.normal[x])}else!0===n.morphTargets&&a.removeAttribute('morphTarget'+h),!0===n.morphNormals&&a.removeAttribute('morphNormal'+h);for(var h=g.length,v=oe.length;h<v;h++)oe[h]=0;d.getUniforms().setValue(at,'morphTargetInfluences',oe),u=!0}var x=a.index,y=a.attributes.position,S=1;!0===n.wireframe&&(x=ct.getWireframeAttribute(a),S=2);var b;null===x?b=mt:(b=ft,b.setIndex(x)),u&&(c(n,d,a),null!==x&&at.bindBuffer(at.ELEMENT_ARRAY_BUFFER,ct.getAttributeBuffer(x)));var T=0;null===x?y!==void 0&&(T=y.count):T=x.count;var L=a.drawRange.start*S,A=a.drawRange.count*S,R=null===s?0:s.start*S,P=null===s?Infinity:s.count*S,w=At(L,R),C=Rt(T,L+A,R+P)-1,D=At(0,C-w+1);if(0!==D){if(o.isMesh){if(!0===n.wireframe)st.setLineWidth(n.wireframeLinewidth*t()),b.setMode(at.LINES);else switch(o.drawMode){case ya:b.setMode(at.TRIANGLES);break;case Ea:b.setMode(at.TRIANGLE_STRIP);break;case Ma:b.setMode(at.TRIANGLE_FAN);}}else if(o.isLine){var U=n.linewidth;void 0===U&&(U=1),st.setLineWidth(U*t()),o.isLineSegments?b.setMode(at.LINES):b.setMode(at.LINE_STRIP)}else o.isPoints&&b.setMode(at.POINTS);a&&a.isInstancedBufferGeometry?0<a.maxInstancedCount&&b.renderInstances(a,w,D):b.render(w,D)}},this.render=function(e,t,r,a){if(void 0!==t&&!0!==t.isCamera)return void console.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');ge='',fe=-1,he=null,!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),t.matrixWorldInverse.getInverse(t.matrixWorld),We.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),Be.setFromMatrix(We),$.length=0,ae=-1,ne=-1,se.length=0,le.length=0,Ve=this.localClippingEnabled,Ge=Oe.init(this.clippingPlanes,Ve,t),x(e,t),ee.length=ae+1,ie.length=ne+1,!0===de.sortObjects&&(ee.sort(u),ie.sort(m)),Ge&&Oe.beginShadows(),I($),yt.render(e,t),z($,t),Ge&&Oe.endShadows(),rt.calls=0,rt.vertices=0,rt.faces=0,rt.points=0,void 0===r&&(r=null),this.setRenderTarget(r);var i=e.background;if(null===i?st.buffers.color.setClear(we.r,we.g,we.b,Ce,Q):i&&i.isColor&&(st.buffers.color.setClear(i.r,i.g,i.b,1,Q),a=!0),(this.autoClear||a)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),i&&i.isCubeTexture?(void 0===_t&&(_t=new be,vt=new ye(new Ee(5,5,5),new Z({uniforms:ka.cube.uniforms,vertexShader:ka.cube.vertexShader,fragmentShader:ka.cube.fragmentShader,side:Gt,depthTest:!1,depthWrite:!1,fog:!1}))),_t.projectionMatrix.copy(t.projectionMatrix),_t.matrixWorld.extractRotation(t.matrixWorld),_t.matrixWorldInverse.getInverse(_t.matrixWorld),vt.material.uniforms.tCube.value=i,vt.modelViewMatrix.multiplyMatrices(_t.matrixWorldInverse,vt.matrixWorld),ct.update(vt),de.renderBufferDirect(_t,null,vt.geometry,vt.material,vt,null)):i&&i.isTexture&&(void 0===gt&&(gt=new Te(-1,1,1,-1,0,1),ht=new ye(new Me(2,2),new ce({depthTest:!1,depthWrite:!1,fog:!1}))),ht.material.map=i,ct.update(ht),de.renderBufferDirect(gt,null,ht.geometry,ht.material,ht,null)),e.overrideMaterial){var n=e.overrideMaterial;v(ee,e,t,n),v(ie,e,t,n)}else st.setBlending(Xt),v(ee,e,t),v(ie,e,t);Mt.render(e,t),St.render(e,t,Se),r&&dt.updateRenderTargetMipmap(r),st.setDepthTest(!0),st.setDepthWrite(!0),st.setColorWrite(!0)},this.setFaceCulling=function(e,t){st.setCullFace(e),st.setFlipSided(t===zt)},this.allocTextureUnit=function(){var e=Pe;return e>=ot.maxTextures&&console.warn('WebGLRenderer: trying to use '+e+' texture units while this GPU supports only '+ot.maxTextures),Pe+=1,e},this.setTexture2D=function(){var e=!1;return function(t,r){t&&t.isWebGLRenderTarget&&(!e&&(console.warn('THREE.WebGLRenderer.setTexture2D: don\'t use render targets as textures. Use their .texture property instead.'),e=!0),t=t.texture),dt.setTexture2D(t,r)}}(),this.setTexture=function(){var e=!1;return function(t,r){e||(console.warn('THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.'),e=!0),dt.setTexture2D(t,r)}}(),this.setTextureCube=function(){var e=!1;return function(t,r){t&&t.isWebGLRenderTargetCube&&(!e&&(console.warn('THREE.WebGLRenderer.setTextureCube: don\'t use cube render targets as textures. Use their .texture property instead.'),e=!0),t=t.texture),t&&t.isCubeTexture||Array.isArray(t.image)&&6===t.image.length?dt.setTextureCube(t,r):dt.setTextureCubeDynamic(t,r)}}(),this.getCurrentRenderTarget=function(){return ue},this.setRenderTarget=function(e){ue=e,e&&void 0===lt.get(e).__webglFramebuffer&&dt.setupRenderTarget(e);var t=e&&e.isWebGLRenderTargetCube,r;if(e){var a=lt.get(e);r=t?a.__webglFramebuffer[e.activeCubeFace]:a.__webglFramebuffer,_e.copy(e.scissor),xe=e.scissorTest,Se.copy(e.viewport)}else r=null,_e.copy(Ie).multiplyScalar(Ne),xe=ze,Se.copy(Fe).multiplyScalar(Ne);if(me!==r&&(at.bindFramebuffer(at.FRAMEBUFFER,r),me=r),st.scissor(_e),st.setScissorTest(xe),st.viewport(Se),t){var i=lt.get(e.texture);at.framebufferTexture2D(at.FRAMEBUFFER,at.COLOR_ATTACHMENT0,at.TEXTURE_CUBE_MAP_POSITIVE_X+e.activeCubeFace,i.__webglTexture,e.activeMipMapLevel)}},this.readRenderTargetPixels=function(e,t,r,a,i,n){if(!1===(e&&e.isWebGLRenderTarget))return void console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');var o=lt.get(e).__webglFramebuffer;if(o){var s=!1;o!==me&&(at.bindFramebuffer(at.FRAMEBUFFER,o),s=!0);try{var l=e.texture,d=l.format,c=l.type;if(d!==oa&&F(d)!==at.getParameter(at.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');if(c!==Yr&&F(c)!==at.getParameter(at.IMPLEMENTATION_COLOR_READ_TYPE)&&!(c===Kr&&(nt.get('OES_texture_float')||nt.get('WEBGL_color_buffer_float')))&&!(c===$r&&nt.get('EXT_color_buffer_half_float')))return void console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');at.checkFramebufferStatus(at.FRAMEBUFFER)===at.FRAMEBUFFER_COMPLETE?0<=t&&t<=e.width-a&&0<=r&&r<=e.height-i&&at.readPixels(t,r,a,i,F(d),F(c),n):console.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.')}finally{s&&at.bindFramebuffer(at.FRAMEBUFFER,me)}}}},e.Scene=Ke,e.Mesh=ye,e.VideoTexture=$e,e.MeshBasicMaterial=ce,e.ShaderMaterial=Z,e.TextureLoader=tt,e.PerspectiveCamera=be,e.Object3D=oe,e.Raycaster=rt,e.Math=Da,e.Quaternion=t,e.Euler=ie,e.Matrix4=r,e.Matrix3=$,e.Vector4=H,e.Vector3=n,e.Vector2=o,e.Color=k,e.TorusGeometry=nt,e.SphereGeometry=st,e.CircleGeometry=dt,e.RingGeometry=pt,e.REVISION=Dt,e.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2},e.CullFaceNone=Ut,e.CullFaceBack=Nt,e.CullFaceFront=It,e.CullFaceFrontBack=3,e.FrontFaceDirectionCW=zt,e.FrontFaceDirectionCCW=1,e.BasicShadowMap=0,e.PCFShadowMap=Ft,e.PCFSoftShadowMap=Bt,e.FrontSide=Ot,e.BackSide=Gt,e.DoubleSide=Vt,e.FlatShading=Ht,e.SmoothShading=kt,e.NoColors=Wt,e.FaceColors=1,e.VertexColors=2,e.NoBlending=Xt,e.NormalBlending=Yt,e.AdditiveBlending=jt,e.SubtractiveBlending=qt,e.MultiplyBlending=Zt,e.CustomBlending=Qt,e.AddEquation=Jt,e.SubtractEquation=Kt,e.ReverseSubtractEquation=$t,e.MinEquation=er,e.MaxEquation=tr,e.ZeroFactor=rr,e.OneFactor=ar,e.SrcColorFactor=ir,e.OneMinusSrcColorFactor=nr,e.SrcAlphaFactor=or,e.OneMinusSrcAlphaFactor=sr,e.DstAlphaFactor=lr,e.OneMinusDstAlphaFactor=dr,e.DstColorFactor=cr,e.OneMinusDstColorFactor=pr,e.SrcAlphaSaturateFactor=ur,e.NeverDepth=mr,e.AlwaysDepth=fr,e.LessDepth=gr,e.LessEqualDepth=hr,e.EqualDepth=_r,e.GreaterEqualDepth=xr,e.GreaterDepth=vr,e.NotEqualDepth=yr,e.MultiplyOperation=Er,e.MixOperation=Mr,e.AddOperation=Sr,e.NoToneMapping=br,e.LinearToneMapping=Tr,e.ReinhardToneMapping=Lr,e.Uncharted2ToneMapping=Ar,e.CineonToneMapping=Rr,e.UVMapping=Pr,e.CubeReflectionMapping=wr,e.CubeRefractionMapping=Cr,e.EquirectangularReflectionMapping=Dr,e.EquirectangularRefractionMapping=Ur,e.SphericalReflectionMapping=Nr,e.CubeUVReflectionMapping=Ir,e.CubeUVRefractionMapping=zr,e.RepeatWrapping=Fr,e.ClampToEdgeWrapping=Br,e.MirroredRepeatWrapping=Or,e.NearestFilter=Gr,e.NearestMipMapNearestFilter=Vr,e.NearestMipMapLinearFilter=Hr,e.LinearFilter=kr,e.LinearMipMapNearestFilter=Wr,e.LinearMipMapLinearFilter=Xr,e.UnsignedByteType=Yr,e.ByteType=jr,e.ShortType=qr,e.UnsignedShortType=Zr,e.IntType=Qr,e.UnsignedIntType=Jr,e.FloatType=Kr,e.HalfFloatType=$r,e.UnsignedShort4444Type=ea,e.UnsignedShort5551Type=ta,e.UnsignedShort565Type=ra,e.UnsignedInt248Type=aa,e.AlphaFormat=ia,e.RGBFormat=na,e.RGBAFormat=oa,e.LuminanceFormat=sa,e.LuminanceAlphaFormat=la,e.RGBEFormat=oa,e.DepthFormat=da,e.DepthStencilFormat=ca,e.RGB_S3TC_DXT1_Format=pa,e.RGBA_S3TC_DXT1_Format=ua,e.RGBA_S3TC_DXT3_Format=ma,e.RGBA_S3TC_DXT5_Format=fa,e.RGB_PVRTC_4BPPV1_Format=ga,e.RGB_PVRTC_2BPPV1_Format=ha,e.RGBA_PVRTC_4BPPV1_Format=_a,e.RGBA_PVRTC_2BPPV1_Format=xa,e.RGB_ETC1_Format=va,e.LoopOnce=2200,e.LoopRepeat=2201,e.LoopPingPong=2202,e.InterpolateDiscrete=2300,e.InterpolateLinear=2301,e.InterpolateSmooth=2302,e.ZeroCurvatureEnding=2400,e.ZeroSlopeEnding=2401,e.WrapAroundEnding=2402,e.TrianglesDrawMode=ya,e.TriangleStripDrawMode=Ea,e.TriangleFanDrawMode=Ma,e.LinearEncoding=Sa,e.sRGBEncoding=ba,e.GammaEncoding=Ta,e.RGBEEncoding=La,e.LogLuvEncoding=3003,e.RGBM7Encoding=Aa,e.RGBM16Encoding=Ra,e.RGBDEncoding=Pa,e.BasicDepthPacking=wa,e.RGBADepthPacking=Ca,Object.defineProperty(e,'__esModule',{value:!0}),Object.defineProperty(e,'AudioContext',{get:function(){return e.getAudioContext()}})});